/*! For license information please see main.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.darwin=t():e.darwin=t()}(self,(function(){return(()=>{var e={7228:e=>{e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r},e.exports.default=e.exports,e.exports.__esModule=!0},2858:e=>{e.exports=function(e){if(Array.isArray(e))return e},e.exports.default=e.exports,e.exports.__esModule=!0},5318:e=>{e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.default=e.exports,e.exports.__esModule=!0},3884:e=>{e.exports=function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,s=[],i=!0,o=!1;try{for(n=n.call(e);!(i=(r=n.next()).done)&&(s.push(r.value),!t||s.length!==t);i=!0);}catch(e){o=!0,a=e}finally{try{i||null==n.return||n.return()}finally{if(o)throw a}}return s}},e.exports.default=e.exports,e.exports.__esModule=!0},521:e=>{e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.default=e.exports,e.exports.__esModule=!0},3038:(e,t,n)=>{var r=n(2858),a=n(3884),s=n(379),i=n(521);e.exports=function(e,t){return r(e)||a(e,t)||s(e,t)||i()},e.exports.default=e.exports,e.exports.__esModule=!0},379:(e,t,n)=>{var r=n(7228);e.exports=function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}},e.exports.default=e.exports,e.exports.__esModule=!0},264:function(e,t,n){(function(){"use strict";var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var r="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e},a=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var r=e[t];if(r&&r.Math==Math)return r}throw Error("Cannot find global object")}(this);function s(e,t){if(t)e:{var n=a;e=e.split(".");for(var s=0;s<e.length-1;s++){var i=e[s];if(!(i in n))break e;n=n[i]}(t=t(s=n[e=e[e.length-1]]))!=s&&null!=t&&r(n,e,{configurable:!0,writable:!0,value:t})}}function i(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function o(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function u(e){if(!(e instanceof Array)){e=o(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}s("Symbol",(function(e){function t(e,t){this.g=e,r(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.g};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",a=0;return function e(r){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(n+(r||"")+"_"+a++,r)}})),s("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),s=0;s<n.length;s++){var o=a[n[s]];"function"==typeof o&&"function"!=typeof o.prototype[e]&&r(o.prototype,e,{configurable:!0,writable:!0,value:function(){return i(t(this))}})}return e}));var l,c="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)l=Object.setPrototypeOf;else{var h;e:{var p={};try{p.__proto__={a:!0},h=p.a;break e}catch(e){}h=!1}l=h?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var d=l;function f(e,t){if(e.prototype=c(t.prototype),e.prototype.constructor=e,d)d(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var r=Object.getOwnPropertyDescriptor(t,n);r&&Object.defineProperty(e,n,r)}else e[n]=t[n];e.ea=t.prototype}function m(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.s=this.m=0,this.j=null}function g(e){if(e.l)throw new TypeError("Generator is already running");e.l=!0}function y(e,t){e.j={U:t,V:!0},e.g=e.m||e.s}function b(e,t,n){return e.g=n,{value:t}}function x(e){this.g=new m,this.h=e}function v(e,t,n,r){try{var a=t.call(e.g.i,n);if(!(a instanceof Object))throw new TypeError("Iterator result "+a+" is not an object");if(!a.done)return e.g.l=!1,a;var s=a.value}catch(t){return e.g.i=null,y(e.g,t),w(e)}return e.g.i=null,r.call(e.g,s),w(e)}function w(e){for(;e.g.g;)try{var t=e.h(e.g);if(t)return e.g.l=!1,{value:t.value,done:!1}}catch(t){e.g.h=void 0,y(e.g,t)}if(e.g.l=!1,e.g.j){if(t=e.g.j,e.g.j=null,t.V)throw t.U;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function k(e){this.next=function(t){return g(e.g),e.g.i?t=v(e,e.g.i.next,t,e.g.o):(e.g.o(t),t=w(e)),t},this.throw=function(t){return g(e.g),e.g.i?t=v(e,e.g.i.throw,t,e.g.o):(y(e.g,t),t=w(e)),t},this.return=function(t){return function(e,t){g(e.g);var n=e.g.i;return n?v(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.g.return):(e.g.return(t),w(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function I(e,t){return t=new k(new x(t)),d&&e.prototype&&d(t,e.prototype),t}m.prototype.o=function(e){this.h=e},m.prototype.return=function(e){this.j={return:e},this.g=this.s};var S="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var r=arguments[n];if(r)for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e};s("Object.assign",(function(e){return e||S})),s("Promise",(function(e){function t(e){this.h=0,this.i=void 0,this.g=[],this.o=!1;var t=this.j();try{e(t.resolve,t.reject)}catch(e){t.reject(e)}}function n(){this.g=null}function r(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.h=function(e){if(null==this.g){this.g=[];var t=this;this.i((function(){t.l()}))}this.g.push(e)};var s=a.setTimeout;n.prototype.i=function(e){s(e,0)},n.prototype.l=function(){for(;this.g&&this.g.length;){var e=this.g;this.g=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(e){this.j(e)}}}this.g=null},n.prototype.j=function(e){this.i((function(){throw e}))},t.prototype.j=function(){function e(e){return function(r){n||(n=!0,e.call(t,r))}}var t=this,n=!1;return{resolve:e(this.C),reject:e(this.l)}},t.prototype.C=function(e){if(e===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.F(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.u(e):this.m(e)}},t.prototype.u=function(e){var t=void 0;try{t=e.then}catch(e){return void this.l(e)}"function"==typeof t?this.G(t,e):this.m(e)},t.prototype.l=function(e){this.s(2,e)},t.prototype.m=function(e){this.s(1,e)},t.prototype.s=function(e,t){if(0!=this.h)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.h);this.h=e,this.i=t,2===this.h&&this.D(),this.A()},t.prototype.D=function(){var e=this;s((function(){if(e.B()){var t=a.console;void 0!==t&&t.error(e.i)}}),1)},t.prototype.B=function(){if(this.o)return!1;var e=a.CustomEvent,t=a.Event,n=a.dispatchEvent;return void 0===n||("function"==typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"==typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=a.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.i,n(e))},t.prototype.A=function(){if(null!=this.g){for(var e=0;e<this.g.length;++e)i.h(this.g[e]);this.g=null}};var i=new n;return t.prototype.F=function(e){var t=this.j();e.J(t.resolve,t.reject)},t.prototype.G=function(e,t){var n=this.j();try{e.call(t,n.resolve,n.reject)}catch(e){n.reject(e)}},t.prototype.then=function(e,n){function r(e,t){return"function"==typeof e?function(t){try{a(e(t))}catch(e){s(e)}}:t}var a,s,i=new t((function(e,t){a=e,s=t}));return this.J(r(e,a),r(n,s)),i},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.J=function(e,t){function n(){switch(r.h){case 1:e(r.i);break;case 2:t(r.i);break;default:throw Error("Unexpected state: "+r.h)}}var r=this;null==this.g?i.h(n):this.g.push(n),this.o=!0},t.resolve=r,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var a=o(e),s=a.next();!s.done;s=a.next())r(s.value).J(t,n)}))},t.all=function(e){var n=o(e),a=n.next();return a.done?r([]):new t((function(e,t){function s(t){return function(n){i[t]=n,0==--o&&e(i)}}var i=[],o=0;do{i.push(void 0),o++,r(a.value).J(s(i.length-1),t),a=n.next()}while(!a.done)}))},t})),s("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}})),s("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var r=n.length;for(0>(t=t||0)&&(t=Math.max(t+r,0));t<r;t++){var a=n[t];if(a===e||Object.is(a,e))return!0}return!1}})),s("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}})),s("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,r=!1,a={next:function(){if(!r&&n<e.length){var a=n++;return{value:t(a,e[a]),done:!1}}return r=!0,{done:!0,value:void 0}}};return a[Symbol.iterator]=function(){return a},a}(this,(function(e){return e}))}}));var N=this||self;function T(e,t){e=e.split(".");var n,r=N;e[0]in r||void 0===r.execScript||r.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?r=r[n]&&r[n]!==Object.prototype[n]?r[n]:r[n]={}:r[n]=t}function $(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var C,E,_="undefined"!=typeof TextDecoder,A="undefined"!=typeof TextEncoder;function R(e){if(A)e=(E||(E=new TextEncoder)).encode(e);else{var t=void 0;t=void 0!==t&&t;for(var n=0,r=new Uint8Array(3*e.length),a=0;a<e.length;a++){var s=e.charCodeAt(a);if(128>s)r[n++]=s;else{if(2048>s)r[n++]=s>>6|192;else{if(55296<=s&&57343>=s){if(56319>=s&&a<e.length){var i=e.charCodeAt(++a);if(56320<=i&&57343>=i){s=1024*(s-55296)+i-56320+65536,r[n++]=s>>18|240,r[n++]=s>>12&63|128,r[n++]=s>>6&63|128,r[n++]=63&s|128;continue}a--}if(t)throw Error("Found an unpaired surrogate");s=65533}r[n++]=s>>12|224,r[n++]=s>>6&63|128}r[n++]=63&s|128}}e=r.subarray(0,n)}return e}var F={},O=null;function D(e,t){void 0===t&&(t=0),M(),t=F[t];for(var n=Array(Math.floor(e.length/3)),r=t[64]||"",a=0,s=0;a<e.length-2;a+=3){var i=e[a],o=e[a+1],u=e[a+2],l=t[i>>2];i=t[(3&i)<<4|o>>4],o=t[(15&o)<<2|u>>6],u=t[63&u],n[s++]=l+i+o+u}switch(l=0,u=r,e.length-a){case 2:u=t[(15&(l=e[a+1]))<<2]||r;case 1:e=e[a],n[s]=t[e>>2]+t[(3&e)<<4|l>>4]+u+r}return n.join("")}function M(){if(!O){O={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var r=e.concat(t[n].split(""));F[n]=r;for(var a=0;a<r.length;a++){var s=r[a];void 0===O[s]&&(O[s]=a)}}}}var L,P="function"==typeof Uint8Array.prototype.slice;function B(e,t,n){return t===n?L||(L=new Uint8Array(0)):P?e.slice(t,n):new Uint8Array(e.subarray(t,n))}var z=0;function V(e,t){t=void 0!==(t=void 0===t?{}:t).v&&t.v,this.h=null,this.g=this.i=this.j=0,this.l=!1,this.v=t,e&&W(this,e)}function W(e,t){t=t.constructor===Uint8Array?t:t.constructor===ArrayBuffer||t.constructor===Array?new Uint8Array(t):t.constructor===String?function(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var r=new Uint8Array(n),a=0;return function(e,t){function n(t){for(;r<e.length;){var n=e.charAt(r++),a=O[n];if(null!=a)return a;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}M();for(var r=0;;){var a=n(-1),s=n(0),i=n(64),o=n(64);if(64===o&&-1===a)break;t(a<<2|s>>4),64!=i&&(t(s<<4&240|i>>2),64!=o&&t(i<<6&192|o))}}(e,(function(e){r[a++]=e})),r.subarray(0,a)}(t):t instanceof Uint8Array?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):new Uint8Array(0),e.h=t,e.j=0,e.i=e.h.length,e.g=e.j}function U(e){var t=e.h,n=t[e.g],r=127&n;return 128>n?(e.g+=1,r):(r|=(127&(n=t[e.g+1]))<<7,128>n?(e.g+=2,r):(r|=(127&(n=t[e.g+2]))<<14,128>n?(e.g+=3,r):(r|=(127&(n=t[e.g+3]))<<21,128>n?(e.g+=4,r):(r|=(15&(n=t[e.g+4]))<<28,128>n?(e.g+=5,r>>>0):(e.g+=5,128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++]&&e.g++,r)))))}function G(e){var t=e.h[e.g],n=e.h[e.g+1],r=e.h[e.g+2],a=e.h[e.g+3];return e.g+=4,e=2*((n=(t<<0|n<<8|r<<16|a<<24)>>>0)>>31)+1,t=n>>>23&255,n&=8388607,255==t?n?NaN:1/0*e:0==t?e*Math.pow(2,-149)*n:e*Math.pow(2,t-150)*(n+Math.pow(2,23))}V.prototype.reset=function(){this.g=this.j};var H=[];function j(){this.g=new Uint8Array(64),this.h=0}function K(e,t){for(;127<t;)e.push(127&t|128),t>>>=7;e.push(t)}function q(e){var t={},n=void 0!==t.N&&t.N;this.o={v:void 0!==t.v&&t.v},this.N=n,t=this.o,H.length?(n=H.pop(),t&&(n.v=t.v),e&&W(n,e),e=n):e=new V(e,t),this.g=e,this.m=this.g.g,this.h=this.i=this.l=-1,this.j=!1}function X(e){var t=e.g;if((t=t.g==t.i)||(t=e.j)||(t=(t=e.g).l||0>t.g||t.g>t.i),t)return!1;e.m=e.g.g;var n=7&(t=U(e.g));return 0!=n&&5!=n&&1!=n&&2!=n&&3!=n&&4!=n?(e.j=!0,!1):(e.i=t,e.l=t>>>3,e.h=n,!0)}function Y(e){switch(e.h){case 0:if(0!=e.h)Y(e);else{for(e=e.g;128&e.h[e.g];)e.g++;e.g++}break;case 1:1!=e.h?Y(e):(e=e.g).g+=8;break;case 2:if(2!=e.h)Y(e);else{var t=U(e.g);(e=e.g).g+=t}break;case 5:5!=e.h?Y(e):(e=e.g).g+=4;break;case 3:for(t=e.l;;){if(!X(e)){e.j=!0;break}if(4==e.h){e.l!=t&&(e.j=!0);break}Y(e)}break;default:e.j=!0}}function Q(e,t,n){var r=e.g.i,a=U(e.g),s=e.g.g+a;if(e.g.i=s,n(t,e),0!=(n=s-e.g.g))throw Error("Message parsing ended unexpectedly. Expected to read "+a+" bytes, instead read "+(a-n)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.g.g=s,e.g.i=r,t}function Z(e){var t,n=U(e.g),r=(e=e.g).g;if(e.g+=n,e=e.h,_)(t=C)||(t=C=new TextDecoder("utf-8",{fatal:!1})),t=t.decode(e.subarray(r,r+n));else{n=r+n;for(var a,s,i,o=[],u=null;r<n;)128>(a=e[r++])?o.push(a):224>a?r>=n?o.push(65533):(s=e[r++],194>a||128!=(192&s)?(r--,o.push(65533)):o.push((31&a)<<6|63&s)):240>a?r>=n-1?o.push(65533):128!=(192&(s=e[r++]))||224===a&&160>s||237===a&&160<=s||128!=(192&(t=e[r++]))?(r--,o.push(65533)):o.push((15&a)<<12|(63&s)<<6|63&t):244>=a?r>=n-2?o.push(65533):128!=(192&(s=e[r++]))||0!=s-144+(a<<28)>>30||128!=(192&(t=e[r++]))||128!=(192&(i=e[r++]))?(r--,o.push(65533)):(a=(7&a)<<18|(63&s)<<12|(63&t)<<6|63&i,a-=65536,o.push(55296+(a>>10&1023),56320+(1023&a))):o.push(65533),8192<=o.length&&(u=$(u,o),o.length=0);t=$(u,o)}return t}function J(){this.h=[],this.i=0,this.g=new j}function ee(e,t){0!==t.length&&(e.h.push(t),e.i+=t.length)}function te(e){var t=e.i+e.g.length();if(0===t)return new Uint8Array(0);t=new Uint8Array(t);for(var n=e.h,r=n.length,a=0,s=0;s<r;s++){var i=n[s];0!==i.length&&(t.set(i,a),a+=i.length)}return 0!==(r=(n=e.g).h)&&(t.set(n.g.subarray(0,r),a),n.h=0),e.h=[t],t}function ne(e,t,n){if(null!=n){K(e.g,8*t+5),e=e.g;var r=n;0===(r=(n=0>r?1:0)?-r:r)?z=0<1/r?0:2147483648:isNaN(r)?z=2147483647:34028234663852886e22<r?z=(n<<31|2139095040)>>>0:11754943508222875e-54>r?(r=Math.round(r/Math.pow(2,-149)),z=(n<<31|r)>>>0):(t=Math.floor(Math.log(r)/Math.LN2),r*=Math.pow(2,-t),16777216<=(r=Math.round(8388608*r))&&++t,z=(n<<31|t+127<<23|8388607&r)>>>0),n=z,e.push(n>>>0&255),e.push(n>>>8&255),e.push(n>>>16&255),e.push(n>>>24&255)}}j.prototype.push=function(e){if(!(this.h+1<this.g.length)){var t=this.g;this.g=new Uint8Array(Math.ceil(1+2*this.g.length)),this.g.set(t)}this.g[this.h++]=e},j.prototype.length=function(){return this.h},j.prototype.end=function(){var e=this.g,t=this.h;return this.h=0,B(e,0,t)},q.prototype.reset=function(){this.g.reset(),this.h=this.l=-1};var re="function"==typeof Uint8Array;function ae(e,t,n){if(null!=e)return"object"==typeof e?re&&e instanceof Uint8Array?n(e):se(e,t,n):t(e)}function se(e,t,n){if(Array.isArray(e)){for(var r=Array(e.length),a=0;a<e.length;a++)r[a]=ae(e[a],t,n);return Array.isArray(e)&&e.W&&le(r),r}for(a in r={},e)r[a]=ae(e[a],t,n);return r}function ie(e){return"number"==typeof e?isFinite(e)?e:String(e):e}var oe,ue={W:{value:!0,configurable:!0}};function le(e){return Array.isArray(e)&&!Object.isFrozen(e)&&Object.defineProperties(e,ue),e}function ce(e,t,n){var r=oe;if(oe=null,e||(e=r),r=this.constructor.ca,e||(e=r?[r]:[]),this.j=r?0:-1,this.i=null,this.g=e,e=(r=this.g.length)-1,!r||null===(r=this.g[e])||"object"!=typeof r||Array.isArray(r)||re&&r instanceof Uint8Array?void 0!==t&&-1<t?(this.l=Math.max(t,e+1-this.j),this.h=null):this.l=Number.MAX_VALUE:(this.l=e-this.j,this.h=r),n)for(t=0;t<n.length;t++)(e=n[t])<this.l?(e+=this.j,(r=this.g[e])?le(r):this.g[e]=he):(pe(this),(r=this.h[e])?le(r):this.h[e]=he)}var he=Object.freeze(le([]));function pe(e){var t=e.l+e.j;e.g[t]||(e.h=e.g[t]={})}function de(e,t,n){return-1===t?null:void 0!==n&&n||t>=e.l?e.h?e.h[t]:void 0:e.g[t+e.j]}function fe(e){var t=void 0!==t&&t,n=de(e,1,t);return null==n&&(n=he),n===he&&ge(e,1,n=le([]),t),n}function me(e,t,n){return null==(e=null==(e=de(e,t))?e:+e)?void 0===n?0:n:e}function ge(e,t,n,r){void 0!==r&&r||t>=e.l?(pe(e),e.h[t]=n):e.g[t+e.j]=n}function ye(e,t){e.i||(e.i={});var n=e.i[1];if(!n){var r=fe(e);n=[];for(var a=0;a<r.length;a++)n[a]=new t(r[a]);e.i[1]=n}return n}function be(e,t,n,r){var a=ye(e,n);t=t||new n,e=fe(e),null!=r?(a.splice(r,0,t),e.splice(r,0,xe(t,!1))):(a.push(t),e.push(xe(t,!1)))}function xe(e,t){if(e.i)for(var n in e.i){var r=e.i[n];if(Array.isArray(r))for(var a=0;a<r.length;a++)r[a]&&xe(r[a],t);else r&&xe(r,t)}return e.g}function ve(e,t){return null==(e=de(e,t))?0:e}function we(e,t){return null==(e=de(e,t))?"":e}function ke(e,t){if(e=e.m){ee(t,t.g.end());for(var n=0;n<e.length;n++)ee(t,e[n])}}function Ie(e,t){if(4==t.h)return!1;var n=t.m;return Y(t),t.N||(t=B(t.g.h,n,t.g.g),(n=e.m)?n.push(t):e.m=[t]),!0}function Se(e,t){var n=void 0;return new(n||(n=Promise))((function(r,a){function s(e){try{o(t.next(e))}catch(e){a(e)}}function i(e){try{o(t.throw(e))}catch(e){a(e)}}function o(e){e.done?r(e.value):new n((function(t){t(e.value)})).then(s,i)}o((t=t.apply(e,void 0)).next())}))}function Ne(e){ce.call(this,e)}function Te(e,t){for(;X(t);)switch(t.i){case 8:var n=U(t.g);ge(e,1,n);break;case 21:ge(e,2,n=G(t.g));break;case 26:ge(e,3,n=Z(t));break;case 34:ge(e,4,n=Z(t));break;default:if(!Ie(e,t))return e}return e}function $e(e){ce.call(this,e,-1,Ce)}ce.prototype.toJSON=function(){return se(xe(this,!1),ie,D)},ce.prototype.toString=function(){return xe(this,!1).toString()},f(Ne,ce),f($e,ce),$e.prototype.addClassification=function(e,t){return be(this,e,Ne,t),this};var Ce=[1];function Ee(e){ce.call(this,e)}function _e(e,t){for(;X(t);)switch(t.i){case 13:var n=G(t.g);ge(e,1,n);break;case 21:ge(e,2,n=G(t.g));break;case 29:ge(e,3,n=G(t.g));break;case 37:ge(e,4,n=G(t.g));break;case 45:ge(e,5,n=G(t.g));break;default:if(!Ie(e,t))return e}return e}function Ae(e){ce.call(this,e,-1,Re)}f(Ee,ce),f(Ae,ce);var Re=[1];function Fe(e){ce.call(this,e)}function Oe(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function De(e){return ye(e,Ne).map((function(e){return{index:ve(e,1),Y:me(e,2),label:null!=de(e,3)?we(e,3):void 0,displayName:null!=de(e,4)?we(e,4):void 0}}))}function Me(e){return{x:me(e,1),y:me(e,2),z:me(e,3),visibility:null!=de(e,4)?me(e,4):void 0}}function Le(e){e:{var t=new Ae;for(e=new q(e);X(e);)if(10===e.i)be(t,Q(e,new Ee,_e),Ee,void 0);else if(!Ie(t,e))break e}return ye(t,Ee).map(Me)}function Pe(e,t){this.h=e,this.g=t,this.l=0}function Be(e,t,n){return function(e,t){var n=e.g;if(void 0===e.m){var r=Oe(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),a=Oe(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),s=n.createProgram();if(n.attachShader(s,r),n.attachShader(s,a),n.linkProgram(s),!n.getProgramParameter(s,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(s));r=e.m=s,n.useProgram(r),a=n.getUniformLocation(r,"sampler0"),e.j={I:n.getAttribLocation(r,"aVertex"),H:n.getAttribLocation(r,"aTex"),da:a},e.s=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.enableVertexAttribArray(e.j.I),n.vertexAttribPointer(e.j.I,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.o=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.o),n.enableVertexAttribArray(e.j.H),n.vertexAttribPointer(e.j.H,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(a,0)}r=e.j,n.useProgram(e.m),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.h.bindTexture2d(t.glName),n.enableVertexAttribArray(r.I),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.vertexAttribPointer(r.I,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(r.H),n.bindBuffer(n.ARRAY_BUFFER,e.o),n.vertexAttribPointer(r.H,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(r.I),n.disableVertexAttribArray(r.H),n.bindBuffer(n.ARRAY_BUFFER,null),e.h.bindTexture2d(0)}(e,t),"function"==typeof e.g.canvas.transferToImageBitmap?Promise.resolve(e.g.canvas.transferToImageBitmap()):n?Promise.resolve(e.g.canvas):"function"==typeof createImageBitmap?createImageBitmap(e.g.canvas):(void 0===e.i&&(e.i=document.createElement("canvas")),new Promise((function(t){e.i.height=e.g.canvas.height,e.i.width=e.g.canvas.width,e.i.getContext("2d",{}).drawImage(e.g.canvas,0,0,e.g.canvas.width,e.g.canvas.height),t(e.i)})))}function ze(e){this.g=e}f(Fe,ce);var Ve=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function We(e,t){return t+e}function Ue(e,t){window[e]=t}function Ge(e){if(this.g=e,this.listeners={},this.j={},this.F={},this.m={},this.s={},this.G=this.o=this.R=!0,this.C=Promise.resolve(),this.P="",this.B={},this.locateFile=e&&e.locateFile||We,"object"==typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"==typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.S=t,e.options)for(var n=(t=o(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var r=e.options[n].default;void 0!==r&&(this.j[n]="function"==typeof r?r():r)}}function He(e,t){return Se(e,(function e(){var n,r,a=this;return I(e,(function(e){return t in a.F?e.return(a.F[t]):(n=a.locateFile(t,""),r=fetch(n).then((function(e){return e.arrayBuffer()})),a.F[t]=r,e.return(r))}))}))}function je(e,t){for(var n=t.name||"$",r=[].concat(u(t.wants)),a=new e.h.StringList,s=o(t.wants),i=s.next();!i.done;i=s.next())a.push_back(i.value);s=e.h.PacketListener.implement({onResults:function(a){for(var s={},i=0;i<t.wants.length;++i)s[r[i]]=a.get(i);var u=e.listeners[n];u&&(e.C=function(e,t,n){return Se(e,(function e(){var r,a,s,i,u,l,c,h,p,d,f,m,g,y,x=this;return I(e,(function(e){switch(e.g){case 1:if(!n)return e.return(t);for(r={},a=0,s=o(Object.keys(n)),i=s.next();!i.done;i=s.next())u=i.value,"string"!=typeof(l=n[u])&&"texture"===l.type&&void 0!==t[l.stream]&&++a;1<a&&(x.G=!1),c=o(Object.keys(n)),i=c.next();case 2:if(i.done){e.g=4;break}if(h=i.value,"string"==typeof(p=n[h]))return g=r,y=h,b(e,function(e,t,n){return Se(e,(function e(){var r,a=this;return I(e,(function(e){return"number"==typeof n||n instanceof Uint8Array||n instanceof a.h.Uint8BlobList?e.return(n):n instanceof a.h.Texture2dDataOut?((r=a.s[t])||(r=new Pe(a.h,a.D),a.s[t]=r),e.return(Be(r,n,a.G))):e.return(void 0)}))}))}(x,h,t[p]),14);if(d=t[p.stream],"detection_list"===p.type){if(d){for(var v=d.getRectList(),w=d.getLandmarksList(),k=d.getClassificationsList(),S=[],N=0;N<v.size();++N){var T=v.get(N);e:{var $=new Fe;for(T=new q(T);X(T);)switch(T.i){case 13:var C=G(T.g);ge($,1,C);break;case 21:ge($,2,C=G(T.g));break;case 29:ge($,3,C=G(T.g));break;case 37:ge($,4,C=G(T.g));break;case 45:ge($,5,C=G(T.g));break;case 48:for(var E=T.g,_=128,A=0,R=C=0;4>R&&128<=_;R++)A|=(127&(_=E.h[E.g++]))<<7*R;if(128<=_&&(A|=(127&(_=E.h[E.g++]))<<28,C|=(127&_)>>4),128<=_)for(R=0;5>R&&128<=_;R++)C|=(127&(_=E.h[E.g++]))<<7*R+3;128>_?(E=A>>>0,(C=2147483648&(_=C>>>0))&&(_=~_>>>0,0==(E=1+~E>>>0)&&(_=_+1>>>0)),E=4294967296*_+(E>>>0),C=C?-E:E):(E.l=!0,C=void 0),ge($,6,C);break;default:if(!Ie($,T))break e}}$={Z:me($,1),$:me($,2),height:me($,3),width:me($,4),rotation:me($,5,0),X:ve($,6)},T=Le(w.get(N)),E=k.get(N);e:for(C=new $e,E=new q(E);X(E);)if(10===E.i)C.addClassification(Q(E,new Ne,Te));else if(!Ie(C,E))break e;$={T:$,O:T,M:De(C)},S.push($)}v=S}else v=[];r[h]=v,e.g=7;break}if("proto_list"===p.type){if(d){for(v=Array(d.size()),w=0;w<d.size();w++)v[w]=d.get(w);d.delete()}else v=[];r[h]=v,e.g=7;break}if(void 0===d){e.g=3;break}if("float_list"===p.type){r[h]=d,e.g=7;break}if("proto"===p.type){r[h]=d,e.g=7;break}if("texture"!==p.type)throw Error("Unknown output config type: '"+p.type+"'");return(f=x.s[h])||(f=new Pe(x.h,x.D),x.s[h]=f),b(e,Be(f,d,x.G),13);case 13:m=e.h,r[h]=m;case 7:p.transform&&r[h]&&(r[h]=p.transform(r[h])),e.g=3;break;case 14:g[y]=e.h;case 3:i=c.next(),e.g=2;break;case 4:return e.return(r)}}))}))}(e,s,t.outs).then((function(n){n=u(n);for(var a=0;a<t.wants.length;++a){var i=s[r[a]];"object"==typeof i&&i.hasOwnProperty&&i.hasOwnProperty("delete")&&i.delete()}n&&(e.C=n)})))}}),e.i.attachMultiListener(a,s),a.delete()}function Ke(e){switch(void 0===e&&(e=0),e){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function qe(e){var t=this;e=e||{},this.g=new Ge({locateFile:e.locateFile,files:function(e){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:Ke(e.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:Le},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:Le},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(e){return Se(t,(function t(){var n,r,a,s=this;return I(t,(function(t){return 1==t.g?(n=Ke(e),r="third_party/mediapipe/modules/pose_landmark/"+n,b(t,He(s.g,n),2)):(a=t.h,s.g.overrideFile(r,a),t.return(!0))}))}))}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}(e=Ge.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},e.reset=function(){return Se(this,(function e(){var t=this;return I(e,(function(e){t.i&&(t.i.reset(),t.m={},t.s={}),e.g=0}))}))},e.setOptions=function(e,t){var n=this;if(t=t||this.g.options){for(var r=[],a=[],s={},i=o(Object.keys(e)),u=i.next();!u.done;s={K:s.K,L:s.L},u=i.next()){var l=u.value;l in this.j&&this.j[l]===e[l]||(this.j[l]=e[l],void 0!==(u=t[l])&&(u.onChange&&(s.K=u.onChange,s.L=e[l],r.push(function(e){return function(){return Se(n,(function t(){var n=this;return I(t,(function(t){if(1==t.g)return b(t,e.K(e.L),2);!0===t.h&&(n.o=!0),t.g=0}))}))}}(s))),u.graphOptionXref&&(l={valueNumber:1===u.type?e[l]:0,valueBoolean:0===u.type&&e[l],valueString:2===u.type?e[l]:""},u=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),u.graphOptionXref),l),a.push(u))))}0===r.length&&0===a.length||(this.o=!0,this.A=(void 0===this.A?[]:this.A).concat(a),this.u=(void 0===this.u?[]:this.u).concat(r))}},e.initialize=function(){return Se(this,(function e(){var t=this;return I(e,(function(e){return 1==e.g?b(e,Se(t,(function e(){var t,n,r,a,s,i,o,l,c,h,p,d=this;return I(e,(function(e){switch(e.g){case 1:return t=d,d.R?(n=function(e,t){return void 0===e.g.files?[]:"function"==typeof e.g.files?e.g.files(t):e.g.files}(d,d.j),b(e,function(){return Se(this,(function e(){return I(e,(function(e){switch(e.g){case 1:return e.m=2,b(e,WebAssembly.instantiate(Ve),4);case 4:e.g=3,e.m=0;break;case 2:return e.m=0,e.j=null,e.return(!1);case 3:return e.return(!0)}}))}))}(),2)):e.return();case 2:if(r=e.h,"object"==typeof window)return Ue("createMediapipeSolutionsWasm",{locateFile:d.locateFile}),Ue("createMediapipeSolutionsPackedAssets",{locateFile:d.locateFile}),i=n.filter((function(e){return void 0!==e.data})),o=n.filter((function(e){return void 0===e.data})),l=Promise.all(i.map((function(e){var n=He(t,e.url);if(void 0!==e.path){var r=e.path;n=n.then((function(e){return t.overrideFile(r,e),Promise.resolve(e)}))}return n}))),c=Promise.all(o.map((function(e){return void 0===e.simd||e.simd&&r||!e.simd&&!r?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(t.locateFile(e.url,t.S)):Promise.resolve()}))).then((function(){return Se(t,(function e(){var t,n,r=this;return I(e,(function(e){if(1==e.g)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,b(e,t(n),2);r.h=e.h,e.g=0}))}))})),h=Se(t,(function e(){var t=this;return I(e,(function(e){return t.g.graph&&t.g.graph.url?e=b(e,He(t,t.g.graph.url),0):(e.g=0,e=void 0),e}))})),b(e,Promise.all([c,l,h]),7);if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return a=n.filter((function(e){return void 0===e.simd||e.simd&&r||!e.simd&&!r})).map((function(e){return t.locateFile(e.url,t.S)})),importScripts.apply(null,u(a)),b(e,createMediapipeSolutionsWasm(Module),6);case 6:d.h=e.h,d.l=new OffscreenCanvas(1,1),d.h.canvas=d.l,s=d.h.GL.createContext(d.l,{antialias:!1,alpha:!1,ba:"undefined"!=typeof WebGL2RenderingContext?2:1}),d.h.GL.makeContextCurrent(s),e.g=4;break;case 7:if(d.l=document.createElement("canvas"),!(p=d.l.getContext("webgl2",{}))&&!(p=d.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),e.return();d.D=p,d.h.canvas=d.l,d.h.createContext(d.l,!0,!0,{});case 4:d.i=new d.h.SolutionWasm,d.R=!1,e.g=0}}))})),2):3!=e.g?b(e,Se(t,(function e(){var t,n,r,a,s,i,u,l,c=this;return I(e,(function(e){if(1==e.g)return c.g.graph&&c.g.graph.url&&c.P===c.g.graph.url?e.return():(c.o=!0,c.g.graph&&c.g.graph.url?(c.P=c.g.graph.url,b(e,He(c,c.g.graph.url),3)):void(e.g=2));for(2!=e.g&&(t=e.h,c.i.loadGraph(t)),n=o(Object.keys(c.B)),r=n.next();!r.done;r=n.next())a=r.value,c.i.overrideFile(a,c.B[a]);if(c.B={},c.g.listeners)for(s=o(c.g.listeners),i=s.next();!i.done;i=s.next())u=i.value,je(c,u);l=c.j,c.j={},c.setOptions(l),e.g=0}))})),3):b(e,function(e){return Se(e,(function e(){var t,n,r,a,s,i,u=this;return I(e,(function(e){switch(e.g){case 1:if(!u.o)return e.return();if(!u.u){e.g=2;break}t=o(u.u),n=t.next();case 3:if(n.done){e.g=5;break}return b(e,(0,n.value)(),4);case 4:n=t.next(),e.g=3;break;case 5:u.u=void 0;case 2:if(u.A){for(r=new u.h.GraphOptionChangeRequestList,a=o(u.A),s=a.next();!s.done;s=a.next())i=s.value,r.push_back(i);u.i.changeOptions(r),r.delete(),u.A=void 0}u.o=!1,e.g=0}}))}))}(t),0)}))}))},e.overrideFile=function(e,t){this.i?this.i.overrideFile(e,t):this.B[e]=t},e.clearOverriddenFiles=function(){this.B={},this.i&&this.i.clearOverriddenFiles()},e.send=function(e,t){return Se(this,(function n(){var r,a,s,i,u,l,c,h,p,d=this;return I(n,(function(n){switch(n.g){case 1:return d.g.inputs?(r=1e3*(null==t?performance.now():t),b(n,d.C,2)):n.return();case 2:return b(n,d.initialize(),3);case 3:for(a=new d.h.PacketDataList,s=o(Object.keys(e)),i=s.next();!i.done;i=s.next())if(u=i.value,l=d.g.inputs[u]){e:{var f=d,m=e[u];switch(l.type){case"video":var g=f.m[l.stream];if(g||(g=new Pe(f.h,f.D),f.m[l.stream]=g),0===(f=g).l&&(f.l=f.h.createTexture()),"undefined"!=typeof HTMLVideoElement&&m instanceof HTMLVideoElement){var y=m.videoWidth;g=m.videoHeight}else"undefined"!=typeof HTMLImageElement&&m instanceof HTMLImageElement?(y=m.naturalWidth,g=m.naturalHeight):(y=m.width,g=m.height);g={glName:f.l,width:y,height:g},(y=f.g).canvas.width=g.width,y.canvas.height=g.height,y.activeTexture(y.TEXTURE0),f.h.bindTexture2d(f.l),y.texImage2D(y.TEXTURE_2D,0,y.RGBA,y.RGBA,y.UNSIGNED_BYTE,m),f.h.bindTexture2d(0),f=g;break e;case"detections":for((g=f.m[l.stream])||(g=new ze(f.h),f.m[l.stream]=g),(f=g).data||(f.data=new f.g.DetectionListData),f.data.reset(m.length),g=0;g<m.length;++g){y=m[g];var x=f.data,v=x.setBoundingBox,w=g,k=y.T,I=new Fe;ge(I,1,k.Z),ge(I,2,k.$),ge(I,3,k.height),ge(I,4,k.width),ge(I,5,k.rotation),ge(I,6,k.X);var S=k=new J;ne(S,1,de(I,1)),ne(S,2,de(I,2)),ne(S,3,de(I,3)),ne(S,4,de(I,4)),ne(S,5,de(I,5));var N=de(I,6);if(null!=N&&null!=N){K(S.g,48);var T=S.g,$=N;N=0>$;var C=($=Math.abs($))>>>0;for($=Math.floor(($-C)/4294967296),$>>>=0,N&&($=~$>>>0,4294967295<(C=1+(~C>>>0))&&(C=0,4294967295<++$&&($=0))),N=z=C,C=$;0<C||127<N;)T.push(127&N|128),N=(N>>>7|C<<25)>>>0,C>>>=7;T.push(N)}if(ke(I,S),k=te(k),v.call(x,w,k),y.O)for(x=0;x<y.O.length;++x)S=!!(I=y.O[x]).visibility,w=(v=f.data).addNormalizedLandmark,k=g,I=Object.assign(Object.assign({},I),{visibility:S?I.visibility:0}),ge(S=new Ee,1,I.x),ge(S,2,I.y),ge(S,3,I.z),I.visibility&&ge(S,4,I.visibility),ne(T=I=new J,1,de(S,1)),ne(T,2,de(S,2)),ne(T,3,de(S,3)),ne(T,4,de(S,4)),ne(T,5,de(S,5)),ke(S,T),I=te(I),w.call(v,k,I);if(y.M)for(x=0;x<y.M.length;++x){if(w=(v=f.data).addClassification,k=g,I=y.M[x],ge(S=new Ne,2,I.Y),I.index&&ge(S,1,I.index),I.label&&ge(S,3,I.label),I.displayName&&ge(S,4,I.displayName),T=I=new J,null!=(C=de(S,1))&&null!=C)if(K(T.g,8),N=T.g,0<=C)K(N,C);else{for($=0;9>$;$++)N.push(127&C|128),C>>=7;N.push(1)}ne(T,2,de(S,2)),null!=(N=de(S,3))&&(N=R(N),K(T.g,26),K(T.g,N.length),ee(T,T.g.end()),ee(T,N)),null!=(N=de(S,4))&&(N=R(N),K(T.g,34),K(T.g,N.length),ee(T,T.g.end()),ee(T,N)),ke(S,T),I=te(I),w.call(v,k,I)}}f=f.data;break e;default:f={}}}switch(c=f,h=l.stream,l.type){case"video":a.pushTexture2d(Object.assign(Object.assign({},c),{stream:h,timestamp:r}));break;case"detections":(p=c).stream=h,p.timestamp=r,a.pushDetectionList(p);break;default:throw Error("Unknown input config type: '"+l.type+"'")}}return d.i.send(a),b(n,d.C,4);case 4:a.delete(),n.g=0}}))}))},e.onResults=function(e,t){this.listeners[t||"$"]=e},T("Solution",Ge),T("OptionType",{BOOL:0,NUMBER:1,aa:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(e=qe.prototype).reset=function(){this.g.reset()},e.close=function(){return this.g.close(),Promise.resolve()},e.onResults=function(e){this.g.onResults(e)},e.initialize=function(){return Se(this,(function e(){var t=this;return I(e,(function(e){return b(e,t.g.initialize(),0)}))}))},e.send=function(e,t){return Se(this,(function n(){var r=this;return I(n,(function(n){return b(n,r.g.send(e,t),0)}))}))},e.setOptions=function(e){this.g.setOptions(e)},T("Pose",qe),T("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),T("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),T("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),T("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),T("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),T("VERSION","0.4.1633558788")}).call(this)},7213:(e,t,n)=>{"use strict";n.r(t),n.d(t,{SupportedModels:()=>xa,TrackerType:()=>ba,calculators:()=>xs,createDetector:()=>bs,movenet:()=>vs,util:()=>Na});var r={};n.r(r),n.d(r,{json:()=>D});var a={};n.r(a),n.d(a,{json:()=>M});var s={};n.r(s),n.d(s,{json:()=>L});var i={};n.r(i),n.d(i,{json:()=>P});var o={};n.r(o),n.d(o,{json:()=>B});var u={};n.r(u),n.d(u,{json:()=>z});var l={};n.r(l),n.d(l,{json:()=>V});var c={};n.r(c),n.d(c,{json:()=>W});var h={};n.r(h),n.d(h,{json:()=>U});var p={};n.r(p),n.d(p,{json:()=>G});var d={};n.r(d),n.d(d,{json:()=>H});var f={};n.r(f),n.d(f,{json:()=>j});var m={};n.r(m),n.d(m,{json:()=>K});var g={};n.r(g),n.d(g,{json:()=>q});var y={};n.r(y),n.d(y,{json:()=>X});var b={};n.r(b),n.d(b,{json:()=>Y});var x={};n.r(x),n.d(x,{json:()=>Q});var v={};n.r(v),n.d(v,{json:()=>Z});var w={};n.r(w),n.d(w,{json:()=>J});var k,I,S=n(264),N=n(5363);!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(k||(k={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(I||(I={}));const T={};function $(e){return T[e]}function C(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return E(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>E(e,n,r,a)));const o=E(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===s.type?u[0]:N.util.toNestedArray(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function E(e,t,n,r){const[a,s]=R(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[A(a,e)]));return void 0!==i?t[A(a,i)][s]:void 0}function _(e,t){const[n,r,a]=R(e);return[A(n,t&&t.currentContextId),r,a]}function A(e,t){return t?`${e}-${t}`:e}function R(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function F(e,t,n){let r=C("pad",e,t,n);if("explicit"===r){r=C("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function O(e){return e.kept?e:(0,N.clone)(e)}const D=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],M=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],L=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],P=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],B=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],z=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],V=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],W=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],U=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],G=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],H=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],j=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],K=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],q=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],X=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Y=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Q=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Z=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],J=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class ee{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,a,s,i,o,u,l,c,h,p,d,f,m,g,y,b,x,v,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=_(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=_(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=_(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(d.initNodes=s),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=$(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=ne(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ne(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=pe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=ae(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=he(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=re(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=re(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=fe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=ce(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=de(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=oe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=ue(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=ie(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=_(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:se(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=_(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=_(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function te(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,N.env)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function ne(e,t,n,r=!1){const a=e[t];return null!=a?te(a.s,r):n}function re(e,t,n){const r=e[t];return r?r.b:n}function ae(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function se(e){switch("string"==typeof e&&(e=k[e]),e){case k.DT_FLOAT:return"float32";case k.DT_INT32:case k.DT_INT64:case k.DT_INT8:case k.DT_UINT8:return"int32";case k.DT_BOOL:return"bool";case k.DT_DOUBLE:return"float32";case k.DT_STRING:return"string";default:return null}}function ie(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function oe(e,t,n){const r=e[t];return r&&r.type?se(r.type):n}function ue(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>se(e))):n}function le(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function ce(e,t,n){const r=e[t];return r&&r.shape?le(r.shape):n}function he(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function pe(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>te(e,r))):n}function de(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>le(e))):n}function fe(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class me{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return E(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return E(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ae(this.node.rawAttrs,e,t);if(null!=n.s)return ne(this.node.rawAttrs,e,t);if(null!=n.b)return re(this.node.rawAttrs,e,t);if(null!=n.shape)return ce(this.node.rawAttrs,e,t);if(null!=n.type)return oe(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return he(this.node.rawAttrs,e,t);if(null!=n.list.s)return pe(this.node.rawAttrs,e,t);if(null!=n.list.shape)return de(this.node.rawAttrs,e,t);if(null!=n.list.b)return fe(this.node.rawAttrs,e,t);if(null!=n.list.type)return ue(this.node.rawAttrs,e,t)}return t}}var ge=n(6407),ye=n(3135),be=n(5228),xe=n(4841),ve=n(1274),we=n(9322),ke=n(9165),Ie=n(827),Se=n(4513),Ne=n(632),Te=n(3453),$e=n(5265),Ce=n(6235),Ee=n(7839),_e=n(1470),Ae=n(2421),Re=n(1891),Fe=n(7037),Oe=n(9812),De=n(369),Me=n(6825),Le=n(1661),Pe=n(173),Be=n(2699),ze=n(3233),Ve=n(4650),We=n(4842),Ue=n(3426),Ge=n(6943),He=n(2597),je=n(7474),Ke=n(4386),qe=n(7370),Xe=n(9036),Ye=n(766),Qe=n(7409),Ze=n(7809),Je=n(5503),et=n(625),tt=n(9331),nt=n(4434),rt=n(3254),at=n(3694),st=n(3261),it=n(248),ot=n(1869),ut=n(1173),lt=n(2279),ct=n(3582),ht=n(2634),pt=n(9451),dt=n(9133),ft=n(8151),mt=n(6230);function gt(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){N.util.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];N.util.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function yt(e){return"number"!=typeof e&&!e.some((e=>e<0))}function bt(e,t,n){let r=xt(e,n);const a=!yt(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=xt(e.shape,r)})),!yt(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function xt(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class vt{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,N.scalar)(0),(0,N.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),gt(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,N.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,N.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return gt(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,N.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,N.tensor)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return gt(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,N.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,N.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];(0,N.tidy)((()=>{t=(0,N.reshape)(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=(0,N.reshape)((0,N.slice)(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class wt{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);gt(t,e.shape,"TensorList shape mismatch: "),(0,N.keep)(e)})),this.idTensor=(0,N.scalar)(0),this.maxNumElements=r,(0,N.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new wt([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);gt(e,this.elementShape,"TensorList shape mismatch: ");const r=bt(this.elementShape,this.tensors,e);return(0,N.tidy)((()=>{const e=this.tensors.map((e=>(0,N.reshape)(e,r)));return(0,N.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=bt(this.elementShape,this.tensors,e),r=this.tensors.pop();return gt(r.shape,e,"TensorList shape mismatch: "),(0,N.reshape)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(gt(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,N.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);gt(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=bt(this.elementShape,this.tensors,t);return(0,N.reshape)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);gt(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,N.keep)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);gt(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=bt(this.elementShape,this.tensors,n);return 0===e.length?(0,N.tensor)([],[0].concat(r)):(0,N.tidy)((()=>{const t=e.map((e=>(0,N.reshape)(this.tensors[e],r)));return(0,N.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);gt(this.elementShape,t,"TensorList shape mismatch: ");const n=bt(this.elementShape,this.tensors,t);return 0===this.size()?(0,N.tensor)([],[0].concat(n)):(0,N.tidy)((()=>{const e=this.tensors.map((e=>(0,N.reshape)(e,n)));return(0,N.concat)(e,0)}))}}var kt=n(1355),It=n(4794),St=n(2277),Nt=n(1405),Tt=n(4718),$t=n(473),Ct=n(5176),Et=n(1174),_t=n(6877),At=n(1749),Rt=n(5020),Ft=n(557);function Ot(e,t,n){const[r,a]=C("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,u="fusedbatchnorm"===r,l=C("numArgs",e,t,n);if(s){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=C("strides",e,t,n),h=F(e,t,n),p=C("dataFormat",e,t,n).toUpperCase(),d=C("dilations",e,t,n);let[f,m]=C("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:C("leakyreluAlpha",e,t,n)}}var Dt=n(4006),Mt=n(4135),Lt=n(686),Pt=n(6708),Bt=n(4917),zt=n(7846),Vt=n(5002),Wt=n(7245),Ut=n(3596),Gt=n(9640),Ht=n(6577),jt=n(4885),Kt=n(2271),qt=n(6380),Xt=n(6567);function Yt(e,t,n){return{boxes:C("boxes",e,t,n),scores:C("scores",e,t,n),maxOutputSize:C("maxOutputSize",e,t,n),iouThreshold:C("iouThreshold",e,t,n),scoreThreshold:C("scoreThreshold",e,t,n),softNmsSigma:C("softNmsSigma",e,t,n)}}var Qt=n(3243),Zt=n(9608),Jt=n(6092),en=n(9494);class tn{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,N.scalar)(0),this.tensorMap=new Map,(0,N.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return en.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,N.tidy)((()=>{const e=(0,N.unstack)(t),r=n.length,a=e.length;N.util.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];(0,N.keep)(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,N.tidy)((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return(0,N.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}var nn=n(6477),rn=n(6500),an=n(636),sn=n(7630),on=n(6573),un=n(624),ln=n(2856),cn=n(8651),hn=n(5750),pn=n(5912),dn=n(8687),fn=n(4653),mn=n(9065),gn=n(7505),yn=n(9648),bn=n(682),xn=n(1510),vn=n(9758),wn=n(3307),kn=n(5130),In=n(5735),Sn=n(5475),Nn=n(781),Tn=n(2998),$n=n(47),Cn=n(7394),En=n(7405),_n=n(3865),An=n(5746),Rn=n(6884),Fn=n(4926),On=n(7486),Dn=n(2676),Mn=n(5158),Ln=n(9590),Pn=n(4968),Bn=n(2991),zn=n(4136),Vn=n(7501),Wn=n(8644),Un=n(3100),Gn=n(7494),Hn=n(7020),jn=n(8447),Kn=n(3710),qn=n(4415),Xn=n(1300),Yn=n(1483),Qn=n(9682),Zn=n(7918),Jn=n(8441),er=n(9112),tr=n(8247),nr=n(8194);function rr(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ge.I(C("a",e,t,n),C("b",e,t,n))];case"AddN":return[ye.Q(C("tensors",e,t,n))];case"FloorMod":case"Mod":return[be.w(C("a",e,t,n),C("b",e,t,n))];case"Mul":return[xe.d(C("a",e,t,n),C("b",e,t,n))];case"RealDiv":case"Div":return[ve.h(C("a",e,t,n),C("b",e,t,n))];case"DivNoNan":return[we.N(C("a",e,t,n),C("b",e,t,n))];case"FloorDiv":return[ke.q(C("a",e,t,n),C("b",e,t,n))];case"Sub":return[Ie.l(C("a",e,t,n),C("b",e,t,n))];case"Minimum":return[Se.L(C("a",e,t,n),C("b",e,t,n))];case"Maximum":return[Ne.g(C("a",e,t,n),C("b",e,t,n))];case"Pow":return[Te.s(C("a",e,t,n),C("b",e,t,n))];case"SquaredDifference":return[$e.$(C("a",e,t,n),C("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Ce.W(C("x",e,t,n))];case"Acos":return[Ee.K(C("x",e,t,n))];case"Acosh":return[_e._(C("x",e,t,n))];case"Asin":return[Ae.Z(C("x",e,t,n))];case"Asinh":return[Re.V(C("x",e,t,n))];case"Atan":return[Fe.z(C("x",e,t,n))];case"Atan2":return[Oe.f(C("x",e,t,n),C("y",e,t,n))];case"Atanh":return[De.C(C("x",e,t,n))];case"Ceil":return[Me.m(C("x",e,t,n))];case"Complex":return[Le.P(C("real",e,t,n),C("imag",e,t,n))];case"Cos":return[Pe.m(C("x",e,t,n))];case"Cosh":return[Be.f(C("x",e,t,n))];case"Elu":return[ze.p(C("x",e,t,n))];case"Erf":return[Ve.q(C("x",e,t,n))];case"Exp":return[We.Q(C("x",e,t,n))];case"Expm1":return[Ue.t(C("x",e,t,n))];case"Floor":return[Ge.G(C("x",e,t,n))];case"Log":return[He.c(C("x",e,t,n))];case"Log1p":return[je.K(C("x",e,t,n))];case"Imag":return[Ke.a(C("x",e,t,n))];case"Neg":return[qe.W(C("x",e,t,n))];case"Reciprocal":return[Xe.M(C("x",e,t,n))];case"Real":return[Ye.k(C("x",e,t,n))];case"Relu":return[Qe.U(C("x",e,t,n))];case"Round":return[Ze.N(C("x",e,t,n))];case"Selu":return[Je.U(C("x",e,t,n))];case"Sigmoid":return[et.X(C("x",e,t,n))];case"Sin":return[tt.O(C("x",e,t,n))];case"Sign":return[nt.X(C("x",e,t,n))];case"Sinh":return[rt.R(C("x",e,t,n))];case"Softplus":return[at.W(C("x",e,t,n))];case"Sqrt":return[st._(C("x",e,t,n))];case"Square":return[it.h(C("x",e,t,n))];case"Tanh":return[ot.A(C("x",e,t,n))];case"Tan":return[ut.O(C("x",e,t,n))];case"ClipByValue":return[lt.i(C("x",e,t,n),C("clipValueMin",e,t,n),C("clipValueMax",e,t,n))];case"Relu6":return[ct.b(C("x",e,t,n))];case"Rsqrt":return[ht.b(E(e.inputNames[0],t,n))];case"Prod":return[pt.W(C("x",e,t,n),C("axes",e,t,n))];case"LeakyRelu":return[dt.h(C("x",e,t,n),C("alpha",e,t,n))];case"Prelu":return[ft.A(C("x",e,t,n),C("alpha",e,t,n))];case"IsNan":return[mt.i(E(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=C("thenBranch",e,t,n),a=C("elseBranch",e,t,n),s=C("cond",e,t,n),i=C("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=C("body",e,t,n),a=C("cond",e,t,n),s=C("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[O(C("pred",e,t,n))];case"Switch":{const r=C("pred",e,t,n);let a=C("data",e,t,n);return a.kept||(a=O(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==E(e,t,n)));return r?[O(E(r,t,n))]:void 0}case"Enter":{const r=C("frameName",e,t,n),a=C("tensor",e,t,n);return n.enterFrame(r),[O(a)]}case"Exit":{const r=C("tensor",e,t,n);return n.exitFrame(),[O(r)]}case"NextIteration":{const r=C("tensor",e,t,n);return n.nextIteration(),[O(r)]}case"TensorArrayV3":{const r=C("size",e,t,n),a=C("dtype",e,t,n),s=C("elementShape",e,t,n),i=C("dynamicSize",e,t,n),o=C("clearAfterRead",e,t,n),u=C("identicalElementShapes",e,t,n),l=C("name",e,t,n),c=new vt(l,a,r,s,u,i,o);return n.addTensorArray(c),[c.idTensor,(0,N.scalar)(1)]}case"TensorArrayWriteV3":{const r=C("tensorArrayId",e,t,n),a=C("index",e,t,n),s=C("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=C("tensorArrayId",e,t,n),a=C("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=C("tensorArrayId",e,t,n),a=C("indices",e,t,n),s=C("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=C("tensorArrayId",e,t,n),a=C("indices",e,t,n),s=C("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=C("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=C("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=C("tensorArrayId",e,t,n),a=C("tensor",e,t,n),s=C("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=C("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[(0,N.scalar)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=C("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=C("tensorListId",e,t,n),a=C("index",e,t,n),s=C("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=C("tensorListId",e,t,n),a=C("index",e,t,n),s=C("elementShape",e,t,n),i=C("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=C("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new wt([],n,e.dtype,r),i=(0,N.unstack)(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(C("tensor",e,t,n),r,C("elementShape",e,t,n),C("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=C("elementShape",e,t,n),a=C("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new wt([],e,t,n)}(r,a,C(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=C("tensorListId",e,t,n),a=C("indices",e,t,n),s=C("elementShape",e,t,n),i=C("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=C("tensorListId",e,t,n),a=C("elementShape",e,t,n),s=C("elementDType",e,t,n),i=C("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);gt(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=(0,N.unstack)(e);return new wt(a,t,r)}(C("tensor",e,t,n),C("elementShape",e,t,n),C("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=C("tensorListId",e,t,n),a=n.getTensorList(r.id),s=C("dtype",e,t,n),i=C("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=C("tensorListId",e,t,n),a=C("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=C("tensorListId",e,t,n),a=C("elementShape",e,t,n),s=C("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=C("tensor",e,t,n),a=C("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=xt(e.shape.slice(1),n),i=0===r?0:e.size/r,o=(0,N.tidy)((()=>{const n=[];e=(0,N.reshape)(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],i];n[r]=(0,N.reshape)((0,N.slice)(e,o,u),s)}return e.dispose(),n})),u=new wt([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,C("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=C("stride",e,t,n),a=C("pad",e,t,n),s=C("dataFormat",e,t,n).toUpperCase(),i=C("dilation",e,t,n);return[kt.P(C("x",e,t,n),C("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=C("strides",e,t,n),a=F(e,t,n),s=C("dataFormat",e,t,n).toUpperCase(),i=C("dilations",e,t,n);return[It.T(C("x",e,t,n),C("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=Ot(e,t,n);return[St.conv2d({x:C("x",e,t,n),filter:C("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=Ot(e,t,n);return[St.depthwiseConv2d({x:C("x",e,t,n),filter:C("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=C("outputShape",e,t,n),a=C("strides",e,t,n),s=F(e,t,n);return[Nt.b(C("x",e,t,n),C("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=C("strides",e,t,n),a=F(e,t,n),s=C("dilations",e,t,n),i=C("dataFormat",e,t,n).toUpperCase();return[Tt.B(C("input",e,t,n),C("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=C("strides",e,t,n),a=C("pad",e,t,n),s=C("dataFormat",e,t,n).toUpperCase(),i=C("dilations",e,t,n);return[$t.p(C("x",e,t,n),C("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=C("strides",e,t,n),a=C("pad",e,t,n),s=C("kernelSize",e,t,n);return[Ct.w(C("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=C("strides",e,t,n),a=C("pad",e,t,n),s=C("kernelSize",e,t,n);return[Et._(C("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=C("strides",e,t,n),a=C("pad",e,t,n),s=C("kernelSize",e,t,n),i=C("includeBatchInIndex",e,t,n),{result:o,indexes:u}=_t.I(C("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=C("strides",e,t,n),a=C("pad",e,t,n),s=C("kernelSize",e,t,n);return[At.u(C("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=C("strides",e,t,n),a=C("pad",e,t,n),s=C("kernelSize",e,t,n);return[Rt.Y(C("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=C("strides",e,t,n),a=C("pad",e,t,n),s=C("dilations",e,t,n),i=r[1],o=r[2],u=s[1],l=s[2];return[Ft.W(C("x",e,t,n),C("filter",e,t,n),[i,o],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=C("shape",e,t,n),a=C("dtype",e,t,n),s=C("value",e,t,n);return[Dt.h(r,s,a)]}case"LinSpace":{const r=C("start",e,t,n),a=C("stop",e,t,n),s=C("num",e,t,n);return[Mt.S(r,a,s)]}case"Multinomial":{const r=C("logits",e,t,n),a=C("numSamples",e,t,n),s=C("seed",e,t,n);return[Lt.S(r,a,s)]}case"OneHot":{const r=C("indices",e,t,n),a=C("depth",e,t,n),s=C("onValue",e,t,n),i=C("offValue",e,t,n);return[Pt.l(r,a,s,i)]}case"Ones":return[Bt.i(C("shape",e,t,n),C("dtype",e,t,n))];case"OnesLike":return[zt.J(C("x",e,t,n))];case"RandomUniform":return[Vt.L(C("shape",e,t,n),C("minval",e,t,n),C("maxval",e,t,n),C("dtype",e,t,n))];case"Range":{const r=C("start",e,t,n),a=C("stop",e,t,n),s=C("step",e,t,n);return[Wt.w(r,a,s,C("dtype",e,t,n))]}case"TruncatedNormal":{const r=C("shape",e,t,n),a=C("mean",e,t,n),s=C("stdDev",e,t,n),i=C("seed",e,t,n);return[Ut.X(r,a,s,C("dtype",e,t,n),i)]}case"Zeros":return[Gt.l(C("shape",e,t,n),C("dtype",e,t,n))];case"ZerosLike":return[Ht.P(C("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=Yt(e,t,n),l=await jt.BHj.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Yt(e,t,n),u=C("padToMaxOutputSize",e,t,n),l=await jt.BHj.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Yt(e,t,n);return[await jt.BHj.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=Kt.p(C("condition",e,t,n),"bool"),a=[await qt.i(r)];return r.dispose(),a}case"ListDiff":return Xt.O(C("x",e,t,n),C("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=C("x",e,t,n),a=C("k",e,t,n),s=C("sorted",e,t,n),i=Qt.h(r,a,s);return[i.values,i.indices]}case"Unique":{const r=C("x",e,t,n),a=Zt.T(r);return[a.values,a.indices]}case"UniqueV2":{const r=C("x",e,t,n),a=C("axis",e,t,n),s=Zt.T(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=C("images",e,t,n),a=C("size",e,t,n),s=C("alignCorners",e,t,n),i=C("halfPixelCenters",e,t,n);return[jt.BHj.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=C("images",e,t,n),a=C("size",e,t,n),s=C("alignCorners",e,t,n),i=C("halfPixelCenters",e,t,n);return[jt.BHj.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=C("image",e,t,n),a=C("boxes",e,t,n),s=C("boxInd",e,t,n),i=C("cropSize",e,t,n),o=C("method",e,t,n),u=C("extrapolationValue",e,t,n);return[jt.BHj.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=C("default",e,t,n);return[E(e.name,t,n)||r];case"Placeholder":return[E(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[O(C("x",e,t,n))];case"IdentityN":return C("x",e,t,n).map((e=>O(e)));case"Shape":return[Jt.R(C("x",e,t,n).shape,"int32")];case"ShapeN":return C("x",e,t,n).map((e=>Jt.R(e.shape)));case"Size":return[en.i(C("x",e,t,n).size,"int32")];case"Rank":return[en.i(C("x",e,t,n).rank,"int32")];case"NoOp":return[en.i(1)];case"Print":const a=C("x",e,t,n),s=C("data",e,t,n),i=C("message",e,t,n),o=C("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"Equal":return[nn.D(C("a",e,t,n),C("b",e,t,n))];case"NotEqual":return[rn.Q(C("a",e,t,n),C("b",e,t,n))];case"Greater":return[an.p(C("a",e,t,n),C("b",e,t,n))];case"GreaterEqual":return[sn.b(C("a",e,t,n),C("b",e,t,n))];case"Less":return[on.d(C("a",e,t,n),C("b",e,t,n))];case"LessEqual":return[un.z(C("a",e,t,n),C("b",e,t,n))];case"LogicalAnd":return[ln.H(C("a",e,t,n),C("b",e,t,n))];case"LogicalNot":return[cn.h(C("a",e,t,n))];case"LogicalOr":return[hn.K(C("a",e,t,n),C("b",e,t,n))];case"Select":case"SelectV2":return[pn.a(C("condition",e,t,n),C("a",e,t,n),C("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[dn.O(C("a",e,t,n),C("b",e,t,n),C("transposeA",e,t,n),C("transposeB",e,t,n))];case"Einsum":return[fn.W(C("equation",e,t,n),...C("tensors",e,t,n))];case"Transpose":return[mn.p(C("x",e,t,n),C("perm",e,t,n))];case"_FusedMatMul":const[r,a]=C("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=C("numArgs",e,t,n),u=C("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=C("args",e,t,n);return[St.matMul({a:C("a",e,t,n),b:C("b",e,t,n),transposeA:C("transposeA",e,t,n),transposeB:C("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[gn.t(C("x",e,t,n),C("mean",e,t,n),C("variance",e,t,n),C("offset",e,t,n),C("scale",e,t,n),C("epsilon",e,t,n))];case"LRN":return[yn.G(C("x",e,t,n),C("radius",e,t,n),C("bias",e,t,n),C("alpha",e,t,n),C("beta",e,t,n))];case"Softmax":return[bn.X(C("x",e,t,n))];case"LogSoftmax":return[xn.C(C("x",e,t,n))];case"SparseToDense":return[vn.e(C("sparseIndices",e,t,n),C("outputShape",e,t,n),C("sparseValues",e,t,n),C("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=C("axis",e,t,n),a=C("keepDims",e,t,n);return[wn.F(C("x",e,t,n),r,a)]}case"Mean":{const r=C("axis",e,t,n),a=C("keepDims",e,t,n);return[kn.J(C("x",e,t,n),r,a)]}case"Min":{const r=C("axis",e,t,n),a=C("keepDims",e,t,n);return[In.V(C("x",e,t,n),r,a)]}case"Sum":{const r=C("axis",e,t,n),a=C("keepDims",e,t,n);return[Sn.S(C("x",e,t,n),r,a)]}case"All":{const r=C("axis",e,t,n),a=C("keepDims",e,t,n);return[Nn.$(C("x",e,t,n),r,a)]}case"Any":{const r=C("axis",e,t,n),a=C("keepDims",e,t,n);return[Tn.Y(C("x",e,t,n),r,a)]}case"ArgMax":{const r=C("axis",e,t,n);return[$n.N(C("x",e,t,n),r)]}case"ArgMin":{const r=C("axis",e,t,n);return[Cn.v(C("x",e,t,n),r)]}case"Prod":{const r=C("axis",e,t,n),a=C("keepDims",e,t,n);return[pt.W(C("x",e,t,n),r,a)]}case"Cumsum":{const r=C("axis",e,t,n),a=C("exclusive",e,t,n),s=C("reverse",e,t,n);return[En.z(C("x",e,t,n),r,a,s)]}case"Bincount":const r=C("x",e,t,n),a=C("weights",e,t,n),s=C("size",e,t,n);return[_n.y(r,a,s)];case"DenseBincount":{const r=C("x",e,t,n),a=C("weights",e,t,n),s=C("size",e,t,n),i=C("binaryOutput",e,t,n);return[An.p(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=C("n",e,t,n),a=C("axis",e,t,n);let s=C("tensors",e,t,n);return s=s.slice(0,r),[Rn.z(s,a)]}case"Gather":{const r=C("x",e,t,n),a=C("indices",e,t,n);return[Fn.I(r,Kt.p(a,"int32"),0)]}case"GatherV2":{const r=C("axis",e,t,n),a=C("batchDims",e,t,n),s=C("x",e,t,n),i=C("indices",e,t,n);return[Fn.I(s,Kt.p(i,"int32"),r,a)]}case"Reverse":{const r=C("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=C("x",e,t,n);return[On.G(s,a)]}case"ReverseV2":{const r=C("axis",e,t,n),a=C("x",e,t,n);return[On.G(a,r)]}case"Slice":{const r=C("begin",e,t,n),a=C("size",e,t,n);return[Dn.t(C("x",e,t,n),r,a)]}case"StridedSlice":{const r=C("begin",e,t,n),a=C("end",e,t,n),s=C("strides",e,t,n),i=C("beginMask",e,t,n),o=C("endMask",e,t,n),u=C("ellipsisMask",e,t,n),l=C("newAxisMask",e,t,n),c=C("shrinkAxisMask",e,t,n),h=C("x",e,t,n);return[Mn.N(h,r,a,s,i,o,u,l,c)]}case"Pack":return(0,N.tidy)((()=>{const r=C("axis",e,t,n),a=C("tensors",e,t,n),s=a[0].shape,i=Ln.L(a[0]).shape,o=a.map((e=>{const t=N.util.arraysEqual(e.shape,s);if(!t&&!N.util.arraysEqual(Ln.L(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Pn.X(e,s)}));return[Bn.k(o,r)]}));case"Unpack":{const r=C("axis",e,t,n),a=C("tensor",e,t,n);return zn.H(a,r)}case"Tile":{const r=C("reps",e,t,n);return[Vn.G(C("x",e,t,n),r)]}case"Split":case"SplitV":{const r=C("axis",e,t,n),a=C("numOrSizeSplits",e,t,n),s=C("x",e,t,n);return Wn.V(s,a,r)}case"ScatterNd":{const r=C("indices",e,t,n),a=C("values",e,t,n),s=C("shape",e,t,n);return[Un.s(r,a,s)]}case"GatherNd":{const r=C("x",e,t,n),a=C("indices",e,t,n);return[Gn.d(r,a)]}case"SparseToDense":{const r=C("sparseIndices",e,t,n),a=C("outputShape",e,t,n),s=C("sparseValues",e,t,n),i=C("defaultValue",e,t,n);return[vn.e(r,s,a,s.dtype===i.dtype?i:Kt.p(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=jt.rVs.sparseFillEmptyRows(C("indices",e,t,n),C("values",e,t,n),C("denseShape",e,t,n),C("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=jt.rVs.sparseReshape(C("inputIndices",e,t,n),C("inputShape",e,t,n),C("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[jt.rVs.sparseSegmentMean(C("data",e,t,n),C("indices",e,t,n),C("segmentIds",e,t,n))];case"SparseSegmentSum":return[jt.rVs.sparseSegmentSum(C("data",e,t,n),C("indices",e,t,n),C("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Hn.k(C("x",e,t,n))];case"IFFT":return[jn.S(C("x",e,t,n))];case"RFFT":return[Kn.Q(C("x",e,t,n))];case"IRFFT":return[qn.w(C("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=jt.Z_8.stringNGrams(C("data",e,t,n),C("dataSplits",e,t,n),C("separator",e,t,n),C("nGramWidths",e,t,n),C("leftPad",e,t,n),C("rightPad",e,t,n),C("padWidth",e,t,n),C("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=jt.Z_8.stringSplit(C("input",e,t,n),C("delimiter",e,t,n),C("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[jt.Z_8.stringToHashBucketFast(C("input",e,t,n),C("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Kt.p(C("x",e,t,n),C("dtype",e,t,n))];case"ExpandDims":{const r=C("axis",e,t,n);return[Xn.d(C("x",e,t,n),r)]}case"Squeeze":{const r=C("axis",e,t,n);return[Ln.L(C("x",e,t,n),r)]}case"Reshape":return[Pn.X(C("x",e,t,n),C("shape",e,t,n))];case"MirrorPad":return[Yn.V(C("x",e,t,n),C("padding",e,t,n),C("mode",e,t,n))];case"PadV2":case"Pad":return[Qn.v(C("x",e,t,n),C("padding",e,t,n),C("constantValue",e,t,n))];case"SpaceToBatchND":{const r=C("blockShape",e,t,n),a=C("paddings",e,t,n);return[Zn.f(C("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=C("blockShape",e,t,n),a=C("crops",e,t,n);return[Jn.E(C("x",e,t,n),r,a)]}case"DepthToSpace":{const r=C("blockSize",e,t,n),a=C("dataFormat",e,t,n).toUpperCase();return[er.n(C("x",e,t,n),r,a)]}case"BroadcastTo":return[tr.U(C("x",e,t,n),C("shape",e,t,n))];case"BroadcastArgs":return[nr.X(C("s0",e,t,n),C("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=C("keyDType",e,t,n),s=C("valueDType",e,t,n),i=new tn(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=C("tableHandle",e,t,n,r),s=C("keys",e,t,n),i=C("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=C("tableHandle",e,t,n,r),s=C("keys",e,t,n),i=C("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=C("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=$(e.op);if(a&&a.customExecutor)return a.customExecutor(new me(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return N.util.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class ar{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function sr(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>R(e)[0]));let c=[];null!=r&&(c=r.map((e=>R(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(lr(e)||cr(e)||hr(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const ir=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],or=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],ur=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function lr(e){return ir.indexOf(e.op)>=0}function cr(e){return or.indexOf(e.op)>=0}function hr(e){return ur.indexOf(e.op)>=0}class pr{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new pr(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=sr(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>R(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[R(e)[0]])),a=t.map((e=>R(e)[0]));let s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return(0,N.tidy)((()=>{const n=new ar(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=R(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=rr(t,r,n,this._resourceManager);if(N.util.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>E(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[A(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new ar(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>E(e,i,s))),u=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.kept||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[R(e)[0]])),i=n.map((e=>R(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=sr(e,o,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=R(t),a=[];a[r]=e[t],d[n]=a}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(s,p,t,d,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!lr(e)&&!E(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,a,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&C("isConstant",e.node,r,n)&&([c]=_(e.node.name,n)),null==r[e.node.name]){const h=rr(e.node,r,n,this._resourceManager);c||([c]=_(e.node.name,n));const p=n.currentContext;N.util.isPromise(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=_(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!E(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!E(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=R(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));N.util.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&N.util.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=R(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=R(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class dr{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class fr{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new dr}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=N.io.browserHTTPRequest(e,this.loadOptions);else{const t=N.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(N.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=N.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new pr(ee.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=ee.Instance.transformGraph(e.modelInitializer);this.initializer=new pr(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=N.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof N.Tensor||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function mr(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new fr(e,t);return await n.load(),n}var gr=function(e,t){return(gr=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function yr(e,t){function n(){this.constructor=e}gr(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var br=function(){return(br=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function xr(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{u(r.next(e))}catch(e){s(e)}}function o(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))}function vr(e,t){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}}var wr=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],kr=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],Ir={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},Sr={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},Nr=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],Tr=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]],$r={runtime:"mediapipe",enableSmoothing:!0,modelType:"full"},Cr=function(){function e(e){var t,n=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new S.Pose({locateFile:function(t,n){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+t:n+"/"+t}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing||!0,selfieMode:this.selfieMode}),this.poseSolution.onResults((function(e){n.height=e.image.height,n.width=e.image.width,null==e.poseLandmarks?n.poses=[]:n.poses=[n.translateOutput(e.poseLandmarks,e.poseWorldLandmarks)]}))}return e.prototype.translateOutput=function(e,t){var n=this,r={keypoints:e.map((function(e,t){return{x:e.x*n.width,y:e.y*n.height,z:e.z,score:e.visibility,name:kr[t]}}))};return null!=t&&(r.keypoints3D=t.map((function(e,t){return{x:e.x,y:e.y,z:e.z,score:e.visibility,name:kr[t]}}))),r},e.prototype.estimatePoses=function(e,t,n){return xr(this,void 0,void 0,(function(){return vr(this,(function(r){switch(r.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),[4,this.poseSolution.send({image:e},n)];case 1:return r.sent(),[2,this.poses]}}))}))},e.prototype.dispose=function(){this.poseSolution.close()},e.prototype.reset=function(){this.poseSolution.reset()},e.prototype.initialize=function(){return this.poseSolution.initialize()},e}();function Er(e){return xr(this,void 0,void 0,(function(){var t,n;return vr(this,(function(r){switch(r.label){case 0:return t=function(e){if(null==e)return br({},$r);var t=br({},e);return t.runtime="mediapipe",null==t.enableSmoothing&&(t.enableSmoothing=$r.enableSmoothing),null==t.modelType&&(t.modelType=$r.modelType),t}(e),[4,(n=new Cr(t)).initialize()];case 1:return r.sent(),[2,n]}}))}))}function _r(e){return e instanceof N.Tensor?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function Ar(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function Rr(e){return e instanceof N.Tensor?e:N.browser.fromPixels(e)}function Fr(e,t){N.util.assert(0!==e.width,(function(){return t+" width cannot be 0."})),N.util.assert(0!==e.height,(function(){return t+" height cannot be 0."}))}function Or(e,t,n){var r=t.inputResolution,a=t.keepAspectRatio,s=_r(e),i=function(e,t){return t?{xCenter:t.xCenter*e.width,yCenter:t.yCenter*e.height,width:t.width*e.width,height:t.height*e.height,rotation:t.rotation}:{xCenter:.5*e.width,yCenter:.5*e.height,width:e.width,height:e.height,rotation:0}}(s,n),o=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var r=t.height,a=t.width;Fr(t,"targetSize"),Fr(e,"roi");var s,i,o=r/a,u=e.height/e.width,l=0,c=0;return o>u?(s=e.width,i=e.width*o,c=(1-u/o)/2):(s=e.height/o,i=e.height,l=(1-o/u)/2),e.width=s,e.height=i,{top:c,left:l,right:l,bottom:c}}(i,r,a);return{imageTensor:(0,N.tidy)((function(){var t=Rr(e),n=(0,N.tensor2d)(function(e,t,n,r){Fr(r,"inputResolution");var a=1/t.width,s=1/t.height,i=e.xCenter,o=e.yCenter,u=Math.cos(e.rotation),l=Math.sin(e.rotation),c=e.width,h=e.height;return[1/r.width*c*u*1*a*t.width,1/r.height*-h*l*a*t.width,(-.5*c*u*1+.5*h*l+i)*a*t.width,1/r.width*c*l*1*s*t.height,1/r.height*h*u*s*t.height,(-.5*h*u-.5*c*l*1+o)*s*t.height,0,0]}(i,s,0,r),[1,8]);return N.image.transform((0,N.expandDims)((0,N.cast)(t,"float32")),n,"bilinear","nearest",0,[r.height,r.width])})),padding:o}}function Dr(e){return null!=e&&null!=e.currentTime}var Mr=function(){function e(e){this.alpha=e,this.initialized=!1}return e.prototype.apply=function(e,t){var n;return this.initialized?n=null==t?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(n=e,this.initialized=!0),this.rawValue=e,this.storedValue=n,n},e.prototype.applyWithAlpha=function(e,t,n){return this.alpha=t,this.apply(e,n)},e.prototype.hasLastRawValue=function(){return this.initialized},e.prototype.lastRawValue=function(){return this.rawValue},e.prototype.reset=function(){this.initialized=!1},e}(),Lr=function(){function e(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new Mr(this.getAlpha(this.minCutOff)),this.dx=new Mr(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return e.prototype.apply=function(e,t,n){if(null==e)return e;var r=Math.trunc(t);if(this.lastTimestamp>=r)return e;0!==this.lastTimestamp&&0!==r&&(this.frequency=1/(1e-6*(r-this.lastTimestamp))),this.lastTimestamp=r;var a=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*n*this.frequency:0,s=this.dx.applyWithAlpha(a,this.getAlpha(this.derivateCutOff)),i=this.minCutOff+this.beta*Math.abs(s),o=null!=this.thresholdCutOff?this.thresholdCutOff+this.thresholdBeta*Math.abs(s):null;return this.x.applyWithAlpha(e,this.getAlpha(i),o)},e.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},e}(),Pr=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var r=this;if(null==e)return this.reset(),null;this.initializeFiltersIfEmpty(e);var a=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return e.slice();a=1/n}return e.map((function(e,n){var s=br({},e,{x:r.xFilters[n].apply(e.x,t,a),y:r.yFilters[n].apply(e.y,t,a)});return null!=e.z&&(s.z=r.zFilters[n].apply(e.z,t,a)),s}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new Lr(t.config)})),this.yFilters=e.map((function(e){return new Lr(t.config)})),this.zFilters=e.map((function(e){return new Lr(t.config)})))},e}();function Br(e,t){return e.map((function(e){var n=br({},e,{x:e.x/t.width,y:e.y/t.height});return null!=e.z&&(e.z=e.z/t.width),n}))}var zr=function(){function e(e){this.config=e,this.window=[],this.lowPassFilter=new Mr(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return e.prototype.apply=function(e,t,n){if(null==e)return e;var r,a=Math.trunc(t);if(this.lastTimestamp>=a)return e;if(-1===this.lastTimestamp)r=1;else{for(var s=e*n-this.lastValue*this.lastValueScale,i=a-this.lastTimestamp,o=s,u=i,l=(1+this.window.length)*(1e6/30),c=0,h=this.window;c<h.length;c++){var p=h[c];if(u+p.duration>l)break;o+=p.distance,u+=p.duration}var d=o/(1e-6*u);r=1-1/(1+this.config.velocityScale*Math.abs(d)),this.window.unshift({distance:s,duration:i}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=n,this.lastTimestamp=a,this.lowPassFilter.applyWithAlpha(e,r)},e}(),Vr=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var r=this;if(null==e)return this.reset(),null;var a=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return e.slice();a=1/n}return this.initializeFiltersIfEmpty(e),e.map((function(e,n){var s=br({},e,{x:r.xFilters[n].apply(e.x,t,a),y:r.yFilters[n].apply(e.y,t,a)});return null!=e.z&&(s.z=r.zFilters[n].apply(e.z,t,a)),s}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new zr(t.config)})),this.yFilters=e.map((function(e){return new zr(t.config)})),this.zFilters=e.map((function(e){return new zr(t.config)})))},e}();function Wr(e,t){return e.map((function(e){var n=br({},e,{x:e.x*t.width,y:e.y*t.height});return null!=e.z&&(n.z=e.z*t.width),n}))}var Ur=function(){function e(e){if(null!=e.velocityFilter)this.keypointsFilter=new Vr(e.velocityFilter);else{if(null==e.oneEuroFilter)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+e+".");this.keypointsFilter=new Pr(e.oneEuroFilter)}}return e.prototype.apply=function(e,t,n,r,a){if(void 0===r&&(r=!1),null==e)return this.keypointsFilter.reset(),null;var s=null!=a?function(e,t){return(e.width*t.width+e.height*t.height)/2}(a,n):1,i=r?Wr(e,n):e,o=this.keypointsFilter.apply(i,t,s);return r?Br(o,n):o},e}();function Gr(e,t){var n=function(e,t,n,r){var a=(r-n)/255;return{scale:a,offset:n-0*a}}(0,0,t[0],t[1]);return(0,N.tidy)((function(){return(0,N.add)((0,N.mul)(e,n.scale),n.offset)}))}function Hr(e,t,n){var r=n.rotationVectorStartKeypointIndex,a=n.rotationVectorEndKeypointIndex,s=e.locationData,i=s.relativeKeypoints[r].x*t.width,o=s.relativeKeypoints[r].y*t.height,u=s.relativeKeypoints[a].x*t.width,l=s.relativeKeypoints[a].y*t.height,c=2*Math.sqrt((u-i)*(u-i)+(l-o)*(l-o)),h=function(e,t,n){var r,a=e.locationData,s=n.rotationVectorStartKeypointIndex,i=n.rotationVectorEndKeypointIndex;r=n.rotationVectorTargetAngle?n.rotationVectorTargetAngle:Math.PI*n.rotationVectorTargetAngleDegree/180;var o=a.relativeKeypoints[s].x*t.width,u=a.relativeKeypoints[s].y*t.height,l=a.relativeKeypoints[i].x*t.width,c=a.relativeKeypoints[i].y*t.height;return Ar(r-Math.atan2(-(c-u),l-o))}(e,t,n);return{xCenter:i/t.width,yCenter:o/t.height,width:c/t.width,height:c/t.height,rotation:h}}function jr(e,t,n,r){return 1===r?.5*(e+t):e+(t-e)*n/(r-1)}function Kr(e){for(var t={locationData:{relativeKeypoints:[]}},n=Number.MAX_SAFE_INTEGER,r=Number.MIN_SAFE_INTEGER,a=Number.MAX_SAFE_INTEGER,s=Number.MIN_SAFE_INTEGER,i=0;i<e.length;++i){var o=e[i];n=Math.min(n,o.x),r=Math.max(r,o.x),a=Math.min(a,o.y),s=Math.max(s,o.y),t.locationData.relativeKeypoints.push({x:o.x,y:o.y})}return t.locationData.relativeBoundingBox={xMin:n,yMin:a,xMax:r,yMax:s,width:r-n,height:s-a},t}function qr(e,t,n,r){return xr(this,void 0,void 0,(function(){var a,s,i,o,u;return vr(this,(function(l){switch(l.label){case 0:return a=(0,N.tensor2d)(e.map((function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]}))),s=(0,N.tensor1d)(e.map((function(e){return e.score[0]}))),[4,N.image.nonMaxSuppressionAsync(a,s,t,n,r)];case 1:return[4,(i=l.sent()).array()];case 2:return o=l.sent(),u=e.filter((function(e,t){return o.indexOf(t)>-1})),(0,N.dispose)([a,s,i]),[2,u]}}))}))}function Xr(e,t,n){return xr(this,void 0,void 0,(function(){var r,a,s,i,o,u,l,c,h,p,d,f,m,g,y,b,x,v,w,k,I,S,T,$;return vr(this,(function(C){switch(C.label){case 0:if(r=(0,N.squeeze)(t,[0]),a=r.shape,s=a[0],i=a[1],o=a[2],e.length!==o)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+e.length+", heatmap length: "+o);return u=[],[4,r.buffer()];case 1:for(l=C.sent(),c=0;c<e.length;c++)if(h=e[c],p=br({},h),u.push(p),d=Math.trunc(p.x*i),f=Math.trunc(p.y*s),!(d<0||d>=i||f<0||d>=s)){for(m=Math.trunc((n.kernelSize-1)/2),g=Math.max(0,d-m),y=Math.min(i,d+m+1),b=Math.max(0,f-m),x=Math.min(s,f+m+1),v=0,w=0,k=0,I=0,S=b;S<x;++S)for(T=g;T<y;++T)$=l.get(S,T,c),v+=$,I=Math.max(I,$),w+=T*$,k+=S*$;I>=n.minConfidenceToRefine&&v>0&&(p.x=w/i/v,p.y=k/s/v)}return r.dispose(),[2,u]}}))}))}function Yr(e,t,n){return xr(this,void 0,void 0,(function(){var r,a,s,i,o;return vr(this,(function(u){switch(u.label){case 0:return r=e[0],a=e[1],s=function(e,t,n){return(0,N.tidy)((function(){var r,a,s,i;n.reverseOutputOrder?(a=(0,N.squeeze)((0,N.slice)(e,[0,n.boxCoordOffset+0],[-1,1])),r=(0,N.squeeze)((0,N.slice)(e,[0,n.boxCoordOffset+1],[-1,1])),i=(0,N.squeeze)((0,N.slice)(e,[0,n.boxCoordOffset+2],[-1,1])),s=(0,N.squeeze)((0,N.slice)(e,[0,n.boxCoordOffset+3],[-1,1]))):(r=(0,N.squeeze)((0,N.slice)(e,[0,n.boxCoordOffset+0],[-1,1])),a=(0,N.squeeze)((0,N.slice)(e,[0,n.boxCoordOffset+1],[-1,1])),s=(0,N.squeeze)((0,N.slice)(e,[0,n.boxCoordOffset+2],[-1,1])),i=(0,N.squeeze)((0,N.slice)(e,[0,n.boxCoordOffset+3],[-1,1]))),a=(0,N.add)((0,N.mul)((0,N.div)(a,n.xScale),t.w),t.x),r=(0,N.add)((0,N.mul)((0,N.div)(r,n.yScale),t.h),t.y),n.applyExponentialOnBoxSize?(s=(0,N.mul)((0,N.exp)((0,N.div)(s,n.hScale)),t.h),i=(0,N.mul)((0,N.exp)((0,N.div)(i,n.wScale)),t.w)):(s=(0,N.mul)((0,N.div)(s,n.hScale),t.h),i=(0,N.mul)((0,N.div)(i,n.wScale),t.h));var o=(0,N.sub)(r,(0,N.div)(s,2)),u=(0,N.sub)(a,(0,N.div)(i,2)),l=(0,N.add)(r,(0,N.div)(s,2)),c=(0,N.add)(a,(0,N.div)(i,2)),h=(0,N.concat)([(0,N.reshape)(o,[n.numBoxes,1]),(0,N.reshape)(u,[n.numBoxes,1]),(0,N.reshape)(l,[n.numBoxes,1]),(0,N.reshape)(c,[n.numBoxes,1])],1);if(n.numKeypoints)for(var p=0;p<n.numKeypoints;++p){var d=n.keypointCoordOffset+p*n.numValuesPerKeypoint,f=void 0,m=void 0;n.reverseOutputOrder?(f=(0,N.squeeze)((0,N.slice)(e,[0,d],[-1,1])),m=(0,N.squeeze)((0,N.slice)(e,[0,d+1],[-1,1]))):(m=(0,N.squeeze)((0,N.slice)(e,[0,d],[-1,1])),f=(0,N.squeeze)((0,N.slice)(e,[0,d+1],[-1,1])));var g=(0,N.add)((0,N.mul)((0,N.div)(f,n.xScale),t.w),t.x),y=(0,N.add)((0,N.mul)((0,N.div)(m,n.yScale),t.h),t.y);h=(0,N.concat)([h,(0,N.reshape)(g,[n.numBoxes,1]),(0,N.reshape)(y,[n.numBoxes,1])],1)}return h}))}(a,t,n),i=(0,N.tidy)((function(){var e=r;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(e=(0,N.clipByValue)(r,-n.scoreClippingThresh,n.scoreClippingThresh)),e=(0,N.sigmoid)(e)):e})),[4,Qr(s,i,n)];case 1:return o=u.sent(),(0,N.dispose)([s,i]),[2,o]}}))}))}function Qr(e,t,n){return xr(this,void 0,void 0,(function(){var r,a,s,i,o,u,l,c,h,p,d,f;return vr(this,(function(m){switch(m.label){case 0:return r=[],[4,e.data()];case 1:return a=m.sent(),[4,t.data()];case 2:for(s=m.sent(),i=0;i<n.numBoxes;++i)if(!(null!=n.minScoreThresh&&s[i]<n.minScoreThresh||(o=i*n.numCoords,u=Zr(a[o+0],a[o+1],a[o+2],a[o+3],s[i],n.flipVertically,i),(l=u.locationData.relativeBoundingBox).width<0||l.height<0))){if(n.numKeypoints>0)for((c=u.locationData).relativeKeypoints=[],h=n.numKeypoints*n.numValuesPerKeypoint,p=0;p<h;p+=n.numValuesPerKeypoint)d=o+n.keypointCoordOffset+p,f={x:a[d+0],y:n.flipVertically?1-a[d+1]:a[d+1]},c.relativeKeypoints.push(f);r.push(u)}return[2,r]}}))}))}function Zr(e,t,n,r,a,s,i){return{score:[a],ind:i,locationData:{relativeBoundingBox:{xMin:t,yMin:s?1-n:e,xMax:r,yMax:s?1-e:n,width:r-t,height:n-e}}}}function Jr(e,t,n,r){return void 0===n&&(n=!1),void 0===r&&(r=!1),xr(this,void 0,void 0,(function(){var a,s,i,o,u,l,c,h;return vr(this,(function(p){switch(p.label){case 0:return a=e.size,s=a/t.numLandmarks,[4,e.data()];case 1:for(i=p.sent(),o=[],u=0;u<t.numLandmarks;++u)l=u*s,(h={x:0,y:0}).x=n?t.inputImageWidth-i[l]:i[l],s>1&&(h.y=r?t.inputImageHeight-i[l+1]:i[l+1]),s>2&&(h.z=i[l+2]),s>3&&(h.score=(d=i[l+3],1/(1+Math.exp(-d)))),o.push(h);for(c=0;c<o.length;++c)(h=o[c]).x=h.x/t.inputImageWidth,h.y=h.y/t.inputImageHeight,h.z=h.z/t.inputImageWidth/(t.normalizeZ||1);return[2,o]}var d}))}))}function ea(e,t,n){var r=e.width,a=e.height,s=e.rotation;if(null==n.rotation&&null==n.rotationDegree||(s=function(e,t){return null!=t.rotation?e+=t.rotation:null!=t.rotationDegree&&(e+=Math.PI*t.rotationDegree/180),Ar(e)}(s,n)),0===s)e.xCenter=e.xCenter+r*n.shiftX,e.yCenter=e.yCenter+a*n.shiftY;else{var i=(t.width*r*n.shiftX*Math.cos(s)-t.height*a*n.shiftY*Math.sin(s))/t.width,o=(t.width*r*n.shiftX*Math.sin(s)+t.height*a*n.shiftY*Math.cos(s))/t.height;e.xCenter=e.xCenter+i,e.yCenter=e.yCenter+o}if(n.squareLong){var u=Math.max(r*t.width,a*t.height);r=u/t.width,a=u/t.height}else if(n.squareShort){var l=Math.min(r*t.width,a*t.height);r=l/t.width,a=l/t.height}return e.width=r*n.scaleX,e.height=a*n.scaleY,e}var ta=function(){function e(e){this.alpha=e.alpha}return e.prototype.apply=function(e){var t=this;if(null==e)return this.visibilityFilters=null,null;null!=this.visibilityFilters&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map((function(e){return new Mr(t.alpha)})));for(var n=[],r=0;r<e.length;++r){var a=e[r],s=br({},a);s.score=this.visibilityFilters[r].apply(a.score),n.push(s)}return n},e}(),na={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},ra={runtime:"tfjs",modelType:"full",enableSmoothing:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/1"},aa={maxPoses:1,flipHorizontal:!1},sa={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},ia={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},oa={inputResolution:{width:224,height:224},keepAspectRatio:!0},ua={inputResolution:{width:256,height:256},keepAspectRatio:!0},la={numLandmarks:39,inputImageWidth:256,inputImageHeight:256},ca={numLandmarks:39,inputImageWidth:1,inputImageHeight:1},ha={kernelSize:7,minConfidenceToRefine:.5},pa={alpha:.1},da={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},fa={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},ma={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},ga=function(){function e(e,t,n,r){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=n,this.modelType=r,this.regionOfInterest=null,this.anchors=function(e){for(var t=[],n=0;n<e.numLayers;){for(var r=[],a=[],s=[],i=[],o=n;o<e.strides.length&&e.strides[o]===e.strides[n];){var u=jr(e.minScale,e.maxScale,o,e.strides.length);if(0===o&&e.reduceBoxesInLowestLayer)s.push(1),s.push(2),s.push(.5),i.push(.1),i.push(u),i.push(u);else{for(var l=0;l<e.aspectRatios.length;++l)s.push(e.aspectRatios[l]),i.push(u);if(e.interpolatedScaleAspectRatio>0){var c=o===e.strides.length-1?1:jr(e.minScale,e.maxScale,o+1,e.strides.length);i.push(Math.sqrt(u*c)),s.push(e.interpolatedScaleAspectRatio)}}o++}for(var h=0;h<s.length;++h){var p=Math.sqrt(s[h]);r.push(i[h]/p),a.push(i[h]*p)}var d=0,f=0;if(e.featureMapHeight.length>0)d=e.featureMapHeight[n],f=e.featureMapWidth[n];else{var m=e.strides[n];d=Math.ceil(e.inputSizeHeight/m),f=Math.ceil(e.inputSizeWidth/m)}for(var g=0;g<d;++g)for(var y=0;y<f;++y)for(var b=0;b<r.length;++b){var x={xCenter:(y+e.anchorOffsetX)/f,yCenter:(g+e.anchorOffsetY)/d,width:0,height:0};e.fixedAnchorSize?(x.width=1,x.height=1):(x.width=a[b],x.height=r[b]),t.push(x)}n=o}return t}(na);var a=(0,N.tensor1d)(this.anchors.map((function(e){return e.width}))),s=(0,N.tensor1d)(this.anchors.map((function(e){return e.height}))),i=(0,N.tensor1d)(this.anchors.map((function(e){return e.xCenter}))),o=(0,N.tensor1d)(this.anchors.map((function(e){return e.yCenter})));this.anchorTensor={x:i,y:o,w:a,h:s}}return e.prototype.estimatePoses=function(e,t,n){return xr(this,void 0,void 0,(function(){var r,a,s,i,o,u,l,c,h,p,d,f,m,g,y,b,x,v;return vr(this,(function(w){switch(w.label){case 0:return r=function(e){var t;if(null==(t=null==e?aa:br({},e)).maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses "+t.maxPoses+". Should be > 0.");if(t.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return t}(t),null==e?(this.reset(),[2,[]]):(this.maxPoses=r.maxPoses,this.timestamp=null!=n?1e3*n:Dr(e)?1e6*e.currentTime:null,a=_r(e),s=(0,N.tidy)((function(){return(0,N.cast)(Rr(e),"float32")})),null!=(i=this.regionOfInterest)?[3,2]:[4,this.detectPose(s)]);case 1:if(0===(o=w.sent()).length)return this.reset(),s.dispose(),[2,[]];u=o[0],i=this.poseDetectionToRoi(u,a),w.label=2;case 2:return[4,this.poseLandmarksByRoi(i,s)];case 3:return l=w.sent(),s.dispose(),null==l?(this.reset(),[2,[]]):(c=l.actualLandmarks,h=l.auxiliaryLandmarks,p=l.poseScore,d=l.actualWorldLandmarks,f=this.poseLandmarkFiltering(c,h,d,a),m=f.actualLandmarksFiltered,g=f.auxiliaryLandmarksFiltered,y=f.actualWorldLandmarksFiltered,b=this.poseLandmarksToRoi(g,a),this.regionOfInterest=b,null!=(x=null!=m?Wr(m,a):null)&&x.forEach((function(e,t){e.name=kr[t]})),null!=(v=y)&&v.forEach((function(e,t){e.name=kr[t]})),[2,[{score:p,keypoints:x,keypoints3D:v}]])}}))}))},e.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),(0,N.dispose)([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},e.prototype.reset=function(){this.regionOfInterest=null,this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},e.prototype.detectPose=function(e){return xr(this,void 0,void 0,(function(){var t,n,r,a,s,i,o,u,l;return vr(this,(function(c){switch(c.label){case 0:return t=Or(e,oa),n=t.imageTensor,r=t.padding,a=Gr(n,[-1,1]),s=function(e,t){return(0,N.tidy)((function(){var n=function(e){return(0,N.tidy)((function(){var t=(0,N.slice)(e,[0,0,0],[1,-1,1]);return[(0,N.sigmoid)(t),(0,N.slice)(e,[0,0,1],[1,-1,-1])]}))}(t.predict(e)),r=n[0],a=n[1];return{boxes:(0,N.squeeze)(a),scores:(0,N.squeeze)(r)}}))}(a,this.detectorModel),i=s.boxes,[4,Yr([o=s.scores,i],this.anchorTensor,sa)];case 1:return[4,qr(c.sent(),this.maxPoses,.3,-1)];case 2:return u=c.sent(),l=function(e,t){void 0===e&&(e=[]);for(var n=t.left,r=t.top,a=t.left+t.right,s=t.top+t.bottom,i=0;i<e.length;i++){var o=e[i],u=o.locationData.relativeBoundingBox,l=(u.xMin-n)/(1-a),c=(u.yMin-r)/(1-s),h=u.width/(1-a),p=u.height/(1-s);u.xMin=l,u.yMin=c,u.width=h,u.height=p;for(var d=0;d<o.locationData.relativeKeypoints.length;++d){var f=o.locationData.relativeKeypoints[d],m=(f.x-n)/(1-a),g=(f.y-r)/(1-s);f.x=m,f.y=g}}return e}(u,r),(0,N.dispose)([n,a,o,i]),[2,l]}}))}))},e.prototype.poseDetectionToRoi=function(e,t){return ea(Hr(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,ia)},e.prototype.poseLandmarksByRoi=function(e,t){return xr(this,void 0,void 0,(function(){var n,r,a,s,i,o,u,l,c,h,p,d,f,m,g,y,b,x,v,w;return vr(this,(function(k){switch(k.label){case 0:if(n=Or(t,ua,e),r=n.imageTensor,a=n.padding,s=Gr(r,[0,1]),"lite"!==this.modelType&&"full"!==this.modelType&&"heavy"!==this.modelType)throw new Error("Model type must be one of lite, full or heavy,but got "+this.modelType);return i=this.landmarkModel.execute(s,["ld_3d","output_poseflag","activation_heatmap","world_3d"]),o=i[0],u=i[1],l=i[2],c=i[3],[4,u.data()];case 1:return(h=k.sent()[0])<.5?((0,N.dispose)(i),(0,N.dispose)([r,s]),[2,null]):[4,Jr(o,la)];case 2:return[4,Xr(p=k.sent(),l,ha)];case 3:return d=k.sent(),f=function(e,t){var n=t.left,r=t.top,a=t.left+t.right,s=t.top+t.bottom;return e.map((function(e){return br({},e,{x:(e.x-n)/(1-a),y:(e.y-r)/(1-s),z:e.z/(1-a)})}))}(d,a),m=function(e,t,n){void 0===n&&(n={ignoreRotation:!1});for(var r=[],a=0,s=e;a<s.length;a++){var i=s[a],o=i.x-.5,u=i.y-.5,l=n.ignoreRotation?0:t.rotation,c=Math.cos(l)*o-Math.sin(l)*u,h=Math.sin(l)*o+Math.cos(l)*u;c=c*t.width+t.xCenter,h=h*t.height+t.yCenter;var p=i.z*t.width,d=br({},i);d.x=c,d.y=h,d.z=p,r.push(d)}return r}(f,e),g=m.slice(0,33),y=m.slice(33,35),[4,Jr(c,ca)];case 4:return b=k.sent(),x=function(e,t,n){void 0===n&&(n=!0);for(var r=[],a=0;a<e.length;a++){var s=br({},t[a]);n&&(s.score=e[a].score),r.push(s)}return r}(p,b,!0),v=function(e,t){for(var n=[],r=0,a=e;r<a.length;r++){var s=a[r],i=s.x,o=s.y,u=t.rotation,l=Math.cos(u)*i-Math.sin(u)*o,c=Math.sin(u)*i+Math.cos(u)*o,h=br({},s);h.x=l,h.y=c,n.push(h)}return n}(x,e),w=v.slice(0,33),(0,N.dispose)(i),(0,N.dispose)([r,s]),[2,{actualLandmarks:g,auxiliaryLandmarks:y,poseScore:h,actualWorldLandmarks:w}]}}))}))},e.prototype.poseLandmarksToRoi=function(e,t){return ea(Hr(Kr(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,ia)},e.prototype.poseLandmarkFiltering=function(e,t,n,r){var a,s,i;if(null!=this.timestamp&&this.enableSmoothing){var o=Hr(Kr(t),r,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});null==this.visibilitySmoothingFilterActual&&(this.visibilitySmoothingFilterActual=new ta(pa)),a=this.visibilitySmoothingFilterActual.apply(e),null==this.visibilitySmoothingFilterAuxiliary&&(this.visibilitySmoothingFilterAuxiliary=new ta(pa)),s=this.visibilitySmoothingFilterAuxiliary.apply(t),i=this.visibilitySmoothingFilterActual.apply(n),null==this.landmarksSmoothingFilterActual&&(this.landmarksSmoothingFilterActual=new Ur(da)),a=this.landmarksSmoothingFilterActual.apply(a,this.timestamp,r,!0,o),null==this.landmarksSmoothingFilterAuxiliary&&(this.landmarksSmoothingFilterAuxiliary=new Ur(fa)),s=this.landmarksSmoothingFilterAuxiliary.apply(s,this.timestamp,r,!0,o),null==this.worldLandmarksSmoothingFilterActual&&(this.worldLandmarksSmoothingFilterActual=new Ur(ma)),i=this.worldLandmarksSmoothingFilterActual.apply(n,this.timestamp)}else a=e,s=t,i=n;return{actualLandmarksFiltered:a,auxiliaryLandmarksFiltered:s,actualWorldLandmarksFiltered:i}},e}();function ya(e){return xr(this,void 0,void 0,(function(){var t,n,r,a,s,i;return vr(this,(function(o){switch(o.label){case 0:return t=function(e){var t=br({},null==e?ra:e);if(null==t.enableSmoothing&&(t.enableSmoothing=ra.enableSmoothing),null==t.modelType&&(t.modelType=ra.modelType),null==t.detectorModelUrl&&(t.detectorModelUrl=ra.detectorModelUrl),null==t.landmarkModelUrl)switch(t.modelType){case"lite":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/1";break;case"heavy":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/1";break;default:t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/1"}return t}(e),n=t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,r=t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([mr(t.detectorModelUrl,{fromTFHub:n}),mr(t.landmarkModelUrl,{fromTFHub:r})])];case 1:return a=o.sent(),s=a[0],i=a[1],[2,new ga(s,i,t.enableSmoothing,t.modelType)]}}))}))}var ba,xa,va,wa=function(){function e(e){!function(e){if(e.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but encountered "+e.maxTracks);if(e.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but encountered "+e.maxAge);if(void 0!==e.keypointTrackerParams){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+e.keypointTrackerParams.keypointConfidenceThreshold);if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but encountered "+e.keypointTrackerParams.minNumberOfKeypoints);for(var t=0,n=e.keypointTrackerParams.keypointFalloff;t<n.length;t++){var r=n[t];if(r<=0)throw new Error("Must specify each keypoint falloff parameterto be positive but encountered "+r)}}}(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return e.prototype.apply=function(e,t){this.filterOldTracks(t);var n=this.computeSimilarity(e);return this.assignTracks(e,n,t),this.updateTracks(t),e},e.prototype.getTracks=function(){return this.tracks.slice()},e.prototype.getTrackIDs=function(){return new Set(this.tracks.map((function(e){return e.id})))},e.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter((function(n){return e-n.lastTimestamp<=t.maxAge}))},e.prototype.assignTracks=function(e,t,n){for(var r=Array.from(Array(t[0].length).keys()),a=[],s=0,i=Array.from(Array(e.length).keys());s<i.length;s++){var o=i[s];if(0!==r.length){for(var u=-1,l=-1,c=0,h=r;c<h.length;c++){var p=h[c],d=t[o][p];d>=this.minSimilarity&&d>l&&(u=p,l=d)}if(u>=0){var f=this.tracks[u];f=Object.assign(f,this.createTrack(e[o],n,f.id)),e[o].id=f.id;var m=r.indexOf(u);r.splice(m,1)}else a.push(o)}else a.push(o)}for(var g=0,y=a;g<y.length;g++){o=y[g];var b=this.createTrack(e[o],n);this.tracks.push(b),e[o].id=b.id}},e.prototype.updateTracks=function(e){this.tracks.sort((function(e,t){return t.lastTimestamp-e.lastTimestamp})),this.tracks=this.tracks.slice(0,this.maxTracks)},e.prototype.createTrack=function(e,t,n){var r={id:n||this.nextTrackID(),lastTimestamp:t,keypoints:e.keypoints.slice().map((function(e){return br({},e)}))};return void 0!==e.box&&(r.box=br({},e.box)),r},e.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},e.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter((function(t){return!e.includes(t.id)}))},e.prototype.reset=function(){this.tracks=[]},e}(),ka=function(e){function t(t){return e.call(this,t)||this}return yr(t,e),t.prototype.computeSimilarity=function(e){var t=this;return 0===e.length||0===this.tracks.length?[[]]:e.map((function(e){return t.tracks.map((function(n){return t.iou(e,n)}))}))},t.prototype.iou=function(e,t){var n=Math.max(e.box.xMin,t.box.xMin),r=Math.max(e.box.yMin,t.box.yMin),a=Math.min(e.box.xMax,t.box.xMax),s=Math.min(e.box.yMax,t.box.yMax);if(n>=a||r>=s)return 0;var i=(a-n)*(s-r);return i/(e.box.width*e.box.height+t.box.width*t.box.height-i)},t}(wa),Ia=function(e){function t(t){var n=e.call(this,t)||this;return n.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,n.keypointFalloff=t.keypointTrackerParams.keypointFalloff,n.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,n}return yr(t,e),t.prototype.computeSimilarity=function(e){if(0===e.length||0===this.tracks.length)return[[]];for(var t=[],n=0,r=e;n<r.length;n++){for(var a=r[n],s=[],i=0,o=this.tracks;i<o.length;i++){var u=o[i];s.push(this.oks(a,u))}t.push(s)}return t},t.prototype.oks=function(e,t){for(var n=this.area(t.keypoints)+1e-6,r=0,a=0,s=0;s<e.keypoints.length;++s){var i=e.keypoints[s],o=t.keypoints[s];if(!(i.score<this.keypointThreshold||o.score<this.keypointThreshold)){a+=1;var u=Math.pow(i.x-o.x,2)+Math.pow(i.y-o.y,2),l=2*this.keypointFalloff[s];r+=Math.exp(-1*u/(2*n*Math.pow(l,2)))}}return a<this.minNumKeyoints?0:r/a},t.prototype.area=function(e){var t=this,n=e.filter((function(e){return e.score>t.keypointThreshold})),r=Math.min.apply(Math,[1].concat(n.map((function(e){return e.x})))),a=Math.max.apply(Math,[0].concat(n.map((function(e){return e.x})))),s=Math.min.apply(Math,[1].concat(n.map((function(e){return e.y}))));return(a-r)*(Math.max.apply(Math,[0].concat(n.map((function(e){return e.y}))))-s)},t}(wa);function Sa(e){switch(e){case xa.BlazePose:return kr.reduce((function(e,t,n){return e[t]=n,e}),{});case xa.PoseNet:case xa.MoveNet:return wr.reduce((function(e,t,n){return e[t]=n,e}),{});default:throw new Error("Model "+e+" is not supported.")}}(va=ba||(ba={})).Keypoint="keypoint",va.BoundingBox="boundingBox",function(e){e.MoveNet="MoveNet",e.BlazePose="BlazePose",e.PoseNet="PoseNet"}(xa||(xa={}));var Na=Object.freeze({__proto__:null,getKeypointIndexBySide:function(e){switch(e){case xa.BlazePose:return Ir;case xa.PoseNet:case xa.MoveNet:return Sr;default:throw new Error("Model "+e+" is not supported.")}},getAdjacentPairs:function(e){switch(e){case xa.BlazePose:return Tr;case xa.PoseNet:case xa.MoveNet:return Nr;default:throw new Error("Model "+e+" is not supported.")}},getKeypointIndexByName:Sa}),Ta=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],$a={modelType:"SinglePose.Lightning",enableSmoothing:!0},Ca={},Ea={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},_a={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},Aa={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function Ra(e,t){var n,r,a,s;return e?t.width>t.height?(n=1,r=t.height/t.width,a=0,s=(t.width/2-t.height/2)/t.width):(n=t.width/t.height,r=1,a=(t.height/2-t.width/2)/t.height,s=0):t.width>t.height?(n=t.width/t.height,r=1,a=(t.height/2-t.width/2)/t.height,s=0):(n=1,r=t.height/t.width,a=0,s=(t.width/2-t.height/2)/t.width),{yMin:a,xMin:s,yMax:a+n,xMax:s+r,height:n,width:r}}function Fa(e,t){var n={maxTracks:e.maxTracks,maxAge:e.maxAge,minSimilarity:e.minSimilarity};return null!=t.maxTracks&&(n.maxTracks=t.maxTracks),null!=t.maxAge&&(n.maxAge=t.maxAge),null!=t.minSimilarity&&(n.minSimilarity=t.minSimilarity),n}var Oa=function(){function e(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=Sa(xa.MoveNet),"SinglePose.Lightning"===t.modelType?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):"SinglePose.Thunder"===t.modelType&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel="MultiPose.Lightning"===t.modelType,this.multiPoseModel||(this.keypointFilter=new Pr(Ea),this.cropRegionFilterYMin=new Mr(.9),this.cropRegionFilterXMin=new Mr(.9),this.cropRegionFilterYMax=new Mr(.9),this.cropRegionFilterXMax=new Mr(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===ba.Keypoint?this.tracker=new Ia(t.trackerConfig):t.trackerType===ba.BoundingBox&&(this.tracker=new ka(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return e.prototype.runSinglePersonPoseModel=function(e){return xr(this,void 0,void 0,(function(){var t,n,r,a,s;return vr(this,(function(i){switch(i.label){case 0:if(4!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||1!==t.shape[1]||17!==t.shape[2]||3!==t.shape[3])throw t.dispose(),new Error("Unexpected output shape from model: ["+t.shape+"]");return"webgpu"===(0,N.getBackend)()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=i.sent(),i.label=3;case 3:for(t.dispose(),r={keypoints:[],score:0},a=0,s=0;s<17;++s)r.keypoints[s]={y:n[3*s],x:n[3*s+1],score:n[3*s+2]},r.keypoints[s].score>.2&&(++a,r.score+=r.keypoints[s].score);return a>0&&(r.score/=a),[2,r]}}))}))},e.prototype.runMultiPersonPoseModel=function(e){return xr(this,void 0,void 0,(function(){var t,n,r,a,s,i,o,u;return vr(this,(function(l){switch(l.label){case 0:if(3!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||56!==t.shape[2])throw t.dispose(),new Error("Unexpected output shape from model: ["+t.shape+"]");return"webgpu"===(0,N.getBackend)()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=l.sent(),l.label=3;case 3:for(t.dispose(),r=[],a=n.length/56,s=0;s<a;++s)for(r[s]={keypoints:[]},i=56*s+51,r[s].box={yMin:n[i],xMin:n[i+1],yMax:n[i+2],xMax:n[i+3],width:n[i+3]-n[i+1],height:n[i+2]-n[i]},o=56*s+55,r[s].score=n[o],r[s].keypoints=[],u=0;u<17;++u)r[s].keypoints[u]={y:n[56*s+3*u],x:n[56*s+3*u+1],score:n[56*s+3*u+2]};return[2,r]}}))}))},e.prototype.estimatePoses=function(e,t,n){return void 0===t&&(t=Ca),xr(this,void 0,void 0,(function(){var r,a,s,i,o,u;return vr(this,(function(l){switch(l.label){case 0:return t=function(e){return null==e?Ca:br({},e)}(t),null==e?(this.reset(),[2,[]]):(null==n?Dr(e)&&(n=1e6*e.currentTime):n*=1e3,r=Rr(e),a=_r(r),s=(0,N.expandDims)(r,0),e instanceof N.Tensor||r.dispose(),i=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(s,a,n)]);case 1:return i=l.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(s,a,n)];case 3:i=l.sent(),l.label=4;case 4:for(o=0;o<i.length;++o)for(u=0;u<i[o].keypoints.length;++u)i[o].keypoints[u].name=wr[u],i[o].keypoints[u].y*=a.height,i[o].keypoints[u].x*=a.width;return[2,i]}}))}))},e.prototype.estimateSinglePose=function(e,t,n){return xr(this,void 0,void 0,(function(){var r,a,s,i,o=this;return vr(this,(function(u){switch(u.label){case 0:return this.cropRegion||(this.cropRegion=Ra(null==this.cropRegion,t)),r=(0,N.tidy)((function(){var t=(0,N.tensor2d)([[o.cropRegion.yMin,o.cropRegion.xMin,o.cropRegion.yMax,o.cropRegion.xMax]]),n=(0,N.zeros)([1],"int32"),r=[o.modelInputResolution.height,o.modelInputResolution.width];return(0,N.cast)(N.image.cropAndResize(e,t,n,r,"bilinear",0),"int32")})),e.dispose(),[4,this.runSinglePersonPoseModel(r)];case 1:if(a=u.sent(),r.dispose(),a.score<this.minPoseScore)return this.reset(),[2,[]];for(s=0;s<a.keypoints.length;++s)a.keypoints[s].y=this.cropRegion.yMin+a.keypoints[s].y*this.cropRegion.height,a.keypoints[s].x=this.cropRegion.xMin+a.keypoints[s].x*this.cropRegion.width;return null!=n&&this.enableSmoothing&&(a.keypoints=this.keypointFilter.apply(a.keypoints,n,1)),i=function(e,t,n,r){for(var a={},s=0,i=wr;s<i.length;s++){var o=i[s];a[o]=[t[n[o]].y*r.height,t[n[o]].x*r.width]}if(function(e,t){return(e[t.left_hip].score>.2||e[t.right_hip].score>.2)&&(e[t.left_shoulder].score>.2||e[t.right_shoulder].score>.2)}(t,n)){var u=(a.left_hip[0]+a.right_hip[0])/2,l=(a.left_hip[1]+a.right_hip[1])/2,c=function(e,t,n,r,a){for(var s=["left_shoulder","right_shoulder","left_hip","right_hip"],i=0,o=0,u=0;u<s.length;u++)(d=Math.abs(r-n[s[u]][0]))>i&&(i=d),(f=Math.abs(a-n[s[u]][1]))>o&&(o=f);for(var l=0,c=0,h=0,p=Object.keys(n);h<p.length;h++){var d,f,m=p[h];e[t[m]].score<.2||((d=Math.abs(r-n[m][0]))>l&&(l=d),(f=Math.abs(a-n[m][1]))>c&&(c=f))}return[i,o,l,c]}(t,n,a,u,l),h=c[0],p=c[1],d=c[2],f=c[3],m=Math.max(1.9*p,1.9*h,1.2*d,1.2*f),g=[u-(m=Math.min(m,Math.max(l,r.width-l,u,r.height-u))),l-m];if(m>Math.max(r.width,r.height)/2)return Ra(null==e,r);var y=2*m;return{yMin:g[0]/r.height,xMin:g[1]/r.width,yMax:(g[0]+y)/r.height,xMax:(g[1]+y)/r.width,height:(g[0]+y)/r.height-g[0]/r.height,width:(g[1]+y)/r.width-g[1]/r.width}}return Ra(null==e,r)}(this.cropRegion,a.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(i),[2,[a]]}}))}))},e.prototype.estimateMultiplePoses=function(e,t,n){return xr(this,void 0,void 0,(function(){var r,a,s,i,o,u,l,c,h,p,d,f=this;return vr(this,(function(m){switch(m.label){case 0:return t.width>t.height?(a=this.multiPoseMaxDimension,s=Math.round(this.multiPoseMaxDimension*t.height/t.width),r=N.image.resizeBilinear(e,[s,a]),o=a,u=32*Math.ceil(s/32),i=(0,N.pad)(r,[[0,0],[0,u-s],[0,0],[0,0]])):(a=Math.round(this.multiPoseMaxDimension*t.width/t.height),s=this.multiPoseMaxDimension,r=N.image.resizeBilinear(e,[s,a]),o=32*Math.ceil(a/32),u=s,i=(0,N.pad)(r,[[0,0],[0,0],[0,o-a],[0,0]])),r.dispose(),e.dispose(),l=(0,N.cast)(i,"int32"),i.dispose(),[4,this.runMultiPersonPoseModel(l)];case 1:for(c=m.sent(),l.dispose(),c=c.filter((function(e){return e.score>=f.minPoseScore})),p=0;p<c.length;++p)for(h=0;h<c[p].keypoints.length;++h)c[p].keypoints[h].y*=u/s,c[p].keypoints[h].x*=o/a;if(this.enableTracking&&(this.tracker.apply(c,n),this.enableSmoothing)){for(p=0;p<c.length;++p)this.keypointFilterMap.has(c[p].id)||this.keypointFilterMap.set(c[p].id,new Pr(Ea)),c[p].keypoints=this.keypointFilterMap.get(c[p].id).apply(c[p].keypoints,n,1);d=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach((function(e,t){d.has(t)||f.keypointFilterMap.delete(t)}))}return[2,c]}}))}))},e.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),n=this.cropRegionFilterXMin.apply(e.xMin),r=this.cropRegionFilterYMax.apply(e.yMax),a=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:n,yMax:r,xMax:a,height:r-t,width:a-n}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},e.prototype.dispose=function(){this.moveNetModel.dispose()},e.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},e.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},e}();function Da(e){return void 0===e&&(e=$a),xr(this,void 0,void 0,(function(){var t,n,r,a;return vr(this,(function(s){switch(s.label){case 0:return t=function(e){var t,n=null==e?$a:br({},e);if(null==n.modelType)n.modelType="SinglePose.Lightning";else if(Ta.indexOf(n.modelType)<0)throw new Error("Invalid architecture "+n.modelType+". Should be one of "+Ta);if(null==n.enableSmoothing&&(n.enableSmoothing=!0),null!=n.minPoseScore&&(n.minPoseScore<0||n.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(null!=n.multiPoseMaxDimension&&(n.multiPoseMaxDimension%32!=0||n.multiPoseMaxDimension<128||n.multiPoseMaxDimension>512))throw new Error("multiPoseResolution must be a multiple of 32 and between 128 and 512");if("MultiPose.Lightning"===n.modelType&&null==n.enableTracking&&(n.enableTracking=!0),"MultiPose.Lightning"===n.modelType&&!0===n.enableTracking)if(null==n.trackerType&&(n.trackerType=ba.BoundingBox),n.trackerType===ba.Keypoint)null!=n.trackerConfig?n.trackerConfig=function(e){var t=Fa(_a,e);return t.keypointTrackerParams=br({},_a.keypointTrackerParams),null!=e.keypointTrackerParams&&(null!=e.keypointTrackerParams.keypointConfidenceThreshold&&(t.keypointTrackerParams.keypointConfidenceThreshold=e.keypointTrackerParams.keypointConfidenceThreshold),null!=e.keypointTrackerParams.keypointFalloff&&(t.keypointTrackerParams.keypointFalloff=e.keypointTrackerParams.keypointFalloff),null!=e.keypointTrackerParams.minNumberOfKeypoints&&(t.keypointTrackerParams.minNumberOfKeypoints=e.keypointTrackerParams.minNumberOfKeypoints)),t}(n.trackerConfig):n.trackerConfig=_a;else{if(n.trackerType!==ba.BoundingBox)throw new Error("Tracker type not supported by MoveNet");null!=n.trackerConfig?n.trackerConfig=(t=n.trackerConfig,Fa(Aa,t)):n.trackerConfig=Aa}return n}(e),r=!0,t.modelUrl?(r=t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,mr(t.modelUrl,{fromTFHub:r})]):[3,2];case 1:return n=s.sent(),[3,4];case 2:return a=void 0,"SinglePose.Lightning"===t.modelType?a="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":"SinglePose.Thunder"===t.modelType?a="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":"MultiPose.Lightning"===t.modelType&&(a="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,mr(a,{fromTFHub:r})];case 3:n=s.sent(),s.label=4;case 4:return"webgl"===(0,N.getBackend)()&&(0,N.env)().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new Oa(n,t)]}}))}))}var Ma={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},La=["MobileNetV1","ResNet50"],Pa={MobileNetV1:[8,16],ResNet50:[16]},Ba=[8,16,32],za={MobileNetV1:[.5,.75,1],ResNet50:[1]},Va=[1,2,4],Wa={maxPoses:1,flipHorizontal:!1},Ua={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},Ga=[-123.15,-115.9,-103.06];function Ha(e){return Math.floor(e/2)}var ja=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(Ha(e),e);)this.exchange(e,Ha(e)),e=Ha(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function Ka(e,t,n,r,a,s){for(var i=s.shape,o=i[0],u=i[1],l=!0,c=Math.max(n-a,0),h=Math.min(n+a+1,o),p=c;p<h;++p){for(var d=Math.max(r-a,0),f=Math.min(r+a+1,u),m=d;m<f;++m)if(s.get(p,m,e)>t){l=!1;break}if(!l)break}return l}function qa(e){return xr(this,void 0,void 0,(function(){return vr(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function Xa(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+17)}}function Ya(e,t,n){var r=Xa(e.heatmapY,e.heatmapX,e.id,n),a=r.y,s=r.x;return{x:e.heatmapX*t+s,y:e.heatmapY*t+a}}function Qa(e,t,n,r){var a=n.x,s=n.y;return e.some((function(e){var n,i,o,u,l=e.keypoints;return n=s,i=a,(o=l[r].y-n)*o+(u=l[r].x-i)*u<=t}))}var Za=wr.reduce((function(e,t,n){return e[t]=n,e}),{}),Ja=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map((function(e){var t=e[0],n=e[1];return[Za[t],Za[n]]})),es=Ja.map((function(e){return e[1]})),ts=Ja.map((function(e){return e[0]}));function ns(e,t,n){return e<t?t:e>n?n:e}function rs(e,t,n,r){return{y:ns(Math.round(e.y/t),0,n-1),x:ns(Math.round(e.x/t),0,r-1)}}function as(e,t){return{x:e.x+t.x,y:e.y+t.y}}function ss(e,t,n,r,a,s,i,o){void 0===o&&(o=2);for(var u=r.shape,l=u[0],c=u[1],h={y:t.y,x:t.x},p=as(h,function(e,t,n){var r=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,r+e)}}(e,rs(h,s,l,c),i)),d=0;d<o;d++){var f=rs(p,s,l,c),m=Xa(f.y,f.x,n,a);p=as({x:f.x*s,y:f.y*s},{x:m.x,y:m.y})}var g=rs(p,s,l,c),y=r.get(g.y,g.x,n);return{y:p.y,x:p.x,name:wr[n],score:y}}function is(e,t,n,r,a,s){var i=t.shape[2],o=es.length,u=new Array(i),l=e.part,c=e.score,h=Ya(l,r,n);u[l.id]={score:c,name:wr[l.id],y:h.y,x:h.x};for(var p=o-1;p>=0;--p){var d=es[p],f=ts[p];u[d]&&!u[f]&&(u[f]=ss(p,u[d],f,t,n,r,s))}for(p=0;p<o;++p)d=ts[p],f=es[p],u[d]&&!u[f]&&(u[f]=ss(p,u[d],f,t,n,r,a));return u}function os(e,t,n){return n.reduce((function(n,r,a){var s=r.y,i=r.x,o=r.score;return Qa(e,t,{y:s,x:i},a)||(n+=o),n}),0)/n.length}function us(e,t,n,r,a,s,i,o){return void 0===i&&(i=.5),void 0===o&&(o=20),xr(this,void 0,void 0,(function(){var u,l,c,h,p,d,f,m,g,y,b,x;return vr(this,(function(v){switch(v.label){case 0:return[4,qa([e,t,n,r])];case 1:for(u=v.sent(),l=u[0],c=u[1],h=u[2],p=u[3],d=[],f=function(e,t,n){for(var r=n.shape,a=r[0],s=r[1],i=r[2],o=new ja(a*s*i,(function(e){return e.score})),u=0;u<a;++u)for(var l=0;l<s;++l)for(var c=0;c<i;++c){var h=n.get(u,l,c);h<e||Ka(c,h,u,l,1,n)&&o.enqueue({score:h,part:{heatmapY:u,heatmapX:l,id:c}})}return o}(i,0,l),m=o*o;d.length<s&&!f.empty();)g=f.dequeue(),y=Ya(g.part,a,c),Qa(d,m,y,g.part.id)||(b=is(g,l,c,a,h,p),x=os(d,m,b),d.push({keypoints:b,score:x}));return[2,d]}}))}))}function ls(e,t,n){return(0,N.tidy)((function(){var r=function(e,t){for(var n=[],r=0;r<wr.length;r++){var a=cs(e.get(r,0).valueOf(),e.get(r,1).valueOf(),r,t),s=a.x,i=a.y;n.push(i),n.push(s)}return(0,N.tensor2d)(n,[wr.length,2])}(e,n);return(0,N.add)((0,N.cast)((0,N.mul)(e.toTensor(),(0,N.scalar)(t,"int32")),"float32"),r)}))}function cs(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+wr.length)}}function hs(e,t,n){return xr(this,void 0,void 0,(function(){var r,a,s,i,o,u,l,c,h,p;return vr(this,(function(d){switch(d.label){case 0:return r=0,a=function(e){var t=e.shape,n=t[0],r=t[1],a=t[2];return(0,N.tidy)((function(){var t,s,i=(0,N.reshape)(e,[n*r,a]),o=(0,N.argMax)(i,0),u=(0,N.expandDims)((0,N.div)(o,(0,N.scalar)(r,"int32")),1),l=(0,N.expandDims)((t=o,s=r,(0,N.tidy)((function(){var e=(0,N.div)(t,(0,N.scalar)(s,"int32"));return(0,N.sub)(t,(0,N.mul)(e,(0,N.scalar)(s,"int32")))}))),1);return(0,N.concat)([u,l],1)}))}(e),[4,Promise.all([e.buffer(),t.buffer(),a.buffer()])];case 1:return s=d.sent(),i=s[0],o=s[1],u=s[2],[4,(l=ls(u,n,o)).buffer()];case 2:return c=d.sent(),h=Array.from(function(e,t){for(var n=t.shape[0],r=new Float32Array(n),a=0;a<n;a++){var s=t.get(a,0),i=t.get(a,1);r[a]=e.get(s,i,a)}return r}(i,u)),p=h.map((function(e,t){return r+=e,{y:c.get(t,0),x:c.get(t,1),score:e,name:wr[t]}})),a.dispose(),l.dispose(),[2,{keypoints:p,score:r/p.length}]}}))}))}function ps(e,t){return(e-1)%t==0}var ds="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",fs="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function ms(e,t){return function(e,t){return(e-1)%t==0}(e,t)?e:Math.floor(e/t)*t+1}var gs=function(){function e(e,t){this.posenetModel=e;var n=this.posenetModel.inputs[0].shape;N.util.assert(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}));var r,a,s=(r=t.inputResolution,a=t.outputStride,{height:ms(r.height,a),width:ms(r.width,a)});!function(e){N.util.assert(Ba.indexOf(e)>=0,(function(){return"outputStride of "+e+" is invalid. It must be either 8 or 16."}))}(t.outputStride),function(e,t){N.util.assert(ps(e.height,t),(function(){return"height of "+e.height+" is invalid for output stride "+t+"."})),N.util.assert(ps(e.width,t),(function(){return"width of "+e.width+" is invalid for output stride "+t+"."}))}(s,t.outputStride),this.inputResolution=s,this.outputStride=t.outputStride,this.architecture=t.architecture}return e.prototype.estimatePoses=function(e,t){return void 0===t&&(t=Wa),xr(this,void 0,void 0,(function(){var n,r,a,s,i,o,u,l,c,h,p,d,f,m,g;return vr(this,(function(y){switch(y.label){case 0:return n=function(e){var t=e;if(null==t.maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses "+t.maxPoses+". Should be > 0.");if(t.maxPoses>1){if((t=br({},Ua,t)).scoreThreshold<0||t.scoreThreshold>1)throw new Error("Invalid scoreThreshold "+t.scoreThreshold+". Should be in range [0.0, 1.0]");if(t.nmsRadius<=0)throw new Error("Invalid nmsRadius "+t.nmsRadius+".")}return t}(t),null==e?[2,[]]:(this.maxPoses=n.maxPoses,r=Or(e,{inputResolution:this.inputResolution,keepAspectRatio:!0}),a=r.imageTensor,s=r.padding,i="ResNet50"===this.architecture?(0,N.add)(a,Ga):Gr(a,[-1,1]),o=this.posenetModel.predict(i),"ResNet50"===this.architecture?(u=(0,N.squeeze)(o[2],[0]),l=(0,N.squeeze)(o[3],[0]),c=(0,N.squeeze)(o[0],[0]),h=(0,N.squeeze)(o[1],[0])):(u=(0,N.squeeze)(o[0],[0]),l=(0,N.squeeze)(o[1],[0]),c=(0,N.squeeze)(o[2],[0]),h=(0,N.squeeze)(o[3],[0])),p=(0,N.sigmoid)(l),1!==this.maxPoses?[3,2]:[4,hs(p,u,this.outputStride)]);case 1:return f=y.sent(),d=[f],[3,4];case 2:return[4,us(p,u,c,h,this.outputStride,this.maxPoses,n.scoreThreshold,n.nmsRadius)];case 3:d=y.sent(),y.label=4;case 4:return m=_r(e),g=function(e,t,n,r){var a=t.height,s=t.width,i=a/(n.height*(1-r.top-r.bottom)),o=s/(n.width*(1-r.left-r.right)),u=-r.top*n.height,l=-r.left*n.width;if(1===o&&1===i&&0===u&&0===l)return e;for(var c=0,h=e;c<h.length;c++)for(var p=0,d=h[c].keypoints;p<d.length;p++){var f=d[p];f.x=(f.x+l)*o,f.y=(f.y+u)*i}return e}(d,m,this.inputResolution,s),n.flipHorizontal&&(g=function(e,t){for(var n=0,r=e;n<r.length;n++)for(var a=0,s=r[n].keypoints;a<s.length;a++){var i=s[a];i.x=t.width-1-i.x}return e}(g,m)),a.dispose(),i.dispose(),(0,N.dispose)(o),u.dispose(),l.dispose(),c.dispose(),h.dispose(),p.dispose(),[2,g]}}))}))},e.prototype.dispose=function(){this.posenetModel.dispose()},e.prototype.reset=function(){},e}();function ys(e){return void 0===e&&(e=Ma),xr(this,void 0,void 0,(function(){var t,n,r,a,s;return vr(this,(function(i){switch(i.label){case 0:return"ResNet50"!==(t=function(e){var t=e||Ma;if(null==t.architecture&&(t.architecture="MobileNetV1"),La.indexOf(t.architecture)<0)throw new Error("Invalid architecture "+t.architecture+". Should be one of "+La);if(null==t.inputResolution&&(t.inputResolution={height:257,width:257}),null==t.outputStride&&(t.outputStride=16),Pa[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride "+t.outputStride+". Should be one of "+Pa[t.architecture]+" for architecture "+t.architecture+".");if(null==t.multiplier&&(t.multiplier=1),za[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier "+t.multiplier+". Should be one of "+za[t.architecture]+" for architecture "+t.architecture+".");if(null==t.quantBytes&&(t.quantBytes=4),Va.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes "+t.quantBytes+". Should be one of "+Va+" for architecture "+t.architecture+".");if("MobileNetV1"===t.architecture&&32===t.outputStride&&1!==t.multiplier)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return t}(e)).architecture?[3,2]:(o=t.outputStride,u=t.quantBytes,l="model-stride"+o+".json",n=4===u?fs+"float/"+l:fs+"quant"+u+"/"+l,[4,mr(t.modelUrl||n)]);case 1:return r=i.sent(),[2,new gs(r,t)];case 2:return a=function(e,t,n){var r={1:"100",.75:"075",.5:"050"},a="model-stride"+e+".json";return 4===n?ds+"float/"+r[t]+"/"+a:ds+"quant"+n+"/"+r[t]+"/"+a}(t.outputStride,t.multiplier,t.quantBytes),[4,mr(t.modelUrl||a)];case 3:return s=i.sent(),[2,new gs(s,t)]}var o,u,l}))}))}function bs(e,t){return xr(this,void 0,void 0,(function(){var n,r;return vr(this,(function(a){switch(e){case xa.PoseNet:return[2,ys(t)];case xa.BlazePose:if(r=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,ya(t)];if("mediapipe"===n.runtime)return[2,Er(t)];r=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+r);case xa.MoveNet:return[2,Da(t)];default:throw new Error(e+" is not a supported model name.")}}))}))}var xs={keypointsToNormalizedKeypoints:Br},vs={modelType:{SINGLEPOSE_LIGHTNING:"SinglePose.Lightning",SINGLEPOSE_THUNDER:"SinglePose.Thunder",MULTIPOSE_LIGHTNING:"MultiPose.Lightning"}}},4903:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GPGPUContext:()=>lt,MathBackendWebGL:()=>kr,forceHalfFloat:()=>Sr,gpgpu_util:()=>a,setWebGLContext:()=>l,version_webgl:()=>Ir,webgl:()=>Nr,webgl_util:()=>r});var r={};n.r(r),n.d(r,{assertNotComplex:()=>pe,bindCanvasToFramebuffer:()=>z,bindColorTextureToFramebuffer:()=>V,bindTextureToProgramUniformSampler:()=>B,bindTextureUnit:()=>D,bindVertexBufferToProgramAttribute:()=>O,callAndCheck:()=>b,canBeRepresented:()=>x,createFragmentShader:()=>I,createFramebuffer:()=>F,createProgram:()=>N,createStaticIndexBuffer:()=>E,createStaticVertexBuffer:()=>C,createTexture:()=>A,createVertexShader:()=>k,getBatchDim:()=>K,getExtensionOrThrow:()=>w,getFramebufferErrorMessage:()=>G,getMaxTexturesInShader:()=>ae,getNumChannels:()=>_,getProgramUniformLocation:()=>P,getProgramUniformLocationOrThrow:()=>L,getRowsCols:()=>q,getShapeAs3D:()=>X,getTextureShapeFromLogicalShape:()=>Y,getWebGLDisjointQueryTimerVersion:()=>se,getWebGLErrorMessage:()=>v,getWebGLMaxTextureSize:()=>te,hasExtension:()=>ie,isCapableOfRenderingToFloatTexture:()=>ue,isDownloadFloatTextureEnabled:()=>le,isReshapeFree:()=>Z,isWebGLFenceEnabled:()=>he,isWebGLVersionEnabled:()=>oe,linkProgram:()=>T,resetMaxTextureSize:()=>ne,resetMaxTexturesInShader:()=>re,unbindColorTextureFromFramebuffer:()=>W,unbindTextureUnit:()=>M,validateFramebuffer:()=>U,validateProgram:()=>$,validateTextureSize:()=>R});var a={};n.r(a),n.d(a,{bindVertexProgramAttributeStreams:()=>tt,createBufferFromOutputTexture:()=>at,createFloat16MatrixTexture:()=>qe,createFloat16PackedMatrixTexture:()=>et,createFloat32MatrixTexture:()=>je,createIndexBuffer:()=>Ue,createPackedMatrixTexture:()=>Ze,createUnsignedBytesMatrixTexture:()=>Ye,createVertexBuffer:()=>We,createVertexShader:()=>Ve,downloadByteEncodedFloatMatrixFromOutputTexture:()=>it,downloadFloat32MatrixFromBuffer:()=>st,downloadMatrixFromPackedOutputTexture:()=>ut,downloadPackedMatrixFromBuffer:()=>ot,getInternalFormatForFloat16MatrixTexture:()=>Ke,getInternalFormatForFloat16PackedMatrixTexture:()=>Je,getInternalFormatForFloat32MatrixTexture:()=>He,getInternalFormatForPackedMatrixTexture:()=>Qe,getInternalFormatForUnsignedBytesMatrixTexture:()=>Xe,uploadDenseMatrixToTexture:()=>nt,uploadPixelDataToTexture:()=>rt});var s={};n.r(s),n.d(s,{addImpl:()=>xt,bincountImpl:()=>wt,bincountReduceImpl:()=>kt,ceilImpl:()=>Tt,concatImpl:()=>$t,equalImpl:()=>Ct,expImpl:()=>Et,expm1Impl:()=>_t,floorImpl:()=>At,gatherNdImpl:()=>Rt,gatherV2Impl:()=>Ft,greaterEqualImpl:()=>Dt,greaterImpl:()=>Ot,lessEqualImpl:()=>Lt,lessImpl:()=>Mt,linSpaceImpl:()=>Pt,logImpl:()=>Bt,maxImpl:()=>zt,maximumImpl:()=>Vt,minimumImpl:()=>Wt,multiplyImpl:()=>Ut,negImpl:()=>Ht,notEqualImpl:()=>jt,prodImpl:()=>qt,rangeImpl:()=>Xt,rsqrtImpl:()=>Yt,sigmoidImpl:()=>Qt,simpleAbsImpl:()=>ht,sliceImpl:()=>Zt,sparseFillEmptyRowsImpl:()=>Jt,sparseReshapeImpl:()=>en,sparseSegmentReductionImpl:()=>tn,sqrtImpl:()=>nn,squaredDifferenceImpl:()=>rn,stridedSliceImpl:()=>an,stringNGramsImpl:()=>on,stringSplitImpl:()=>ln,stringToHashBucketFastImpl:()=>cn,subImpl:()=>hn,tileImpl:()=>dn,topKImpl:()=>gn,transposeImpl:()=>Kt,uniqueImpl:()=>yn});var i=n(5363);const o={},u={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function l(e,t){o[e]=t}function c(e){if(!(e in o)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete o[e]}),!1),1===e?t.getContext("webgl",u)||t.getContext("experimental-webgl",u):t.getContext("webgl2",u)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;o[e]=t}const t=o[e];return t.isContextLost()?(delete o[e],c(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),o[e])}var h,p,d;function f(e,t){return[t,e]}function m(e){const t=i.util.sizeFromShape(e),n=Math.ceil(t/4);return i.util.sizeToSquarishShape(n)}function g(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function y(e,t){const n=e;let r,a,s,o,u,l,c,h,p,d;return 2===(0,i.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,o=n.RGBA32F,u=n.RED,c=4,h=1,p=n.HALF_FLOAT,d=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,o=n.RGBA,u=e.RGBA,c=4,h=4,p=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:u,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:p,textureTypeFloat:d}}function b(e,t){const n=t();return(0,i.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+v(e,t))}(e),n}function x(e){return!!((0,i.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function v(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function w(e,t){return H(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function k(e,t){const n=H(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(b(e,(()=>e.shaderSource(n,t))),b(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function I(e,t){const n=H(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(b(e,(()=>e.shaderSource(n,t))),b(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=S.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,o=a.map(((e,t)=>i.util.rightPad((t+1).toString(),s)+e));let u=0;for(let e=0;e<o.length;e++)u=Math.max(o[e].length,u);const l=o.slice(0,r-1),c=o.slice(r-1,r),h=o.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${i.util.rightPad(c[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(h||(h={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(p||(p={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(d||(d={}));const S=/ERROR: [0-9]+:([0-9]+):/g;function N(e){return H(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function T(e,t){if(b(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function $(e,t){if(b(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function C(e,t){const n=H(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),b(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function E(e,t){const n=H(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return b(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),b(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function _(){return 2===(0,i.env)().getNumber("WEBGL_VERSION")?1:4}function A(e){return H(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function R(e,t){const n=(0,i.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function F(e){return H(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function O(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),b(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),b(e,(()=>e.enableVertexAttribArray(o))),!0)}function D(e,t,n){j(e,n),b(e,(()=>e.activeTexture(e.TEXTURE0+n))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function M(e,t){j(e,t),b(e,(()=>e.activeTexture(e.TEXTURE0+t))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function L(e,t,n){return H(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function P(e,t,n){return e.getUniformLocation(t,n)}function B(e,t,n,r){b(e,(()=>D(e,t,r))),b(e,(()=>e.uniform1i(n,r)))}function z(e){b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),b(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),b(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function V(e,t,n){b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),b(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function W(e,t){b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),b(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function U(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+G(e,t))}function G(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function H(e,t,n){const r=b(e,(()=>t()));if(null==r)throw new Error(n);return r}function j(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function K(e,t=2){return i.util.sizeFromShape(e.slice(0,e.length-t))}function q(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function X(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[K(e),...q(e)]),t}function Y(e,t=!1){let n=(0,i.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?i.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=i.util.squeezeShape(e);e=t.newShape}let r=i.util.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=K(e);let n=2,a=2;return e.length&&([n,a]=q(e)),r=t*(n/2)*(a/2),i.util.sizeToSquarishShape(r).map((e=>2*e))}return i.util.sizeToSquarishShape(r)}function Q(e){return e%2==0}function Z(e,t){if(e=e.slice(-2),t=t.slice(-2),i.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(Q(n)&&Q(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Q(e[0])&&Q(t[0])}let J,ee;function te(e){if(null==J){const t=c(e);J=t.getParameter(t.MAX_TEXTURE_SIZE)}return J}function ne(){J=null}function re(){ee=null}function ae(e){if(null==ee){const t=c(e);ee=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ee)}function se(e){if(0===e)return 0;let t;const n=c(e);return t=ie(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:ie(n,"EXT_disjoint_timer_query")?1:0,t}function ie(e,t){return null!=e.getExtension(t)}function oe(e){try{if(null!=c(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ue(e){if(0===e)return!1;const t=c(e);if(1===e){if(!ie(t,"OES_texture_float"))return!1}else if(!ie(t,"EXT_color_buffer_float"))return!1;return ce(t)}function le(e){if(0===e)return!1;const t=c(e);if(1!==e){if(ie(t,"EXT_color_buffer_float"))return ce(t);const e="EXT_color_buffer_half_float";if(ie(t,e)){const n=t.getExtension(e);return function(e,t){const n=y(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!ie(t,"OES_texture_float")&&(!!ie(t,"WEBGL_color_buffer_float")&&ce(t))}function ce(e){const t=y(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function he(e){return 2===e&&null!=c(e).fenceSync}function pe(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&i.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const de=(0,i.env)();function fe(){let e,t,n,r,a,s,o,u,l,c;return 2===(0,i.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",o="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",o="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:o,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}function me(e,t,n="index"){const r=i.util.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function ge(e,t,n="index"){const r=i.util.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function ye(e){const t=i.util.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}de.registerFlag("HAS_WEBGL",(()=>de.getNumber("WEBGL_VERSION")>0)),de.registerFlag("WEBGL_VERSION",(()=>oe(2)?2:oe(1)?1:0)),de.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),de.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===de.get("WEBGL_VERSION"))),de.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),de.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),de.registerFlag("WEBGL_PACK",(()=>de.getBool("HAS_WEBGL"))),de.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_CLIP",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_REDUCE",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_LAZILY_UNPACK",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_CONV_IM2COL",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>te(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>ae(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=de.getNumber("WEBGL_VERSION");return 0===e?0:se(e)})),de.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>de.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!i.device_util.isMobile())),de.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>ue(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!de.getBool("WEBGL_FORCE_F16_TEXTURES")&&de.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),de.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>le(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>he(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>de.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),de.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),de.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>i.device_util.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),de.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),de.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),de.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),de.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const be="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:xe}=i.backend_util;function ve(e,t,n){const r=[];if(e.forEach((e=>{const t=i.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=_e(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),s=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?ke(e,r):we(e,r);const s=e.shapeInfo.logicalShape,o=t.logicalShape;return s.length<=o.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,u=xe(e.shapeInfo.logicalShape,t.logicalShape),l=Ee(o),c=o-s;let h;const p=["x","y","z","w","u","v"];h=0===s?"":o<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${p[e+c]} = 0;`)).join("\n");let d="";d=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+c]}`)).join(", ");let f="return outputValue;";const m=1===i.util.sizeFromShape(e.shapeInfo.logicalShape),g=1===i.util.sizeFromShape(t.logicalShape);if(1!==s||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=s-2,t=s-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${r}(${d});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===l&&null==e.shapeInfo.flatOffset&&i.util.arraysEqual(o,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=Ee(l),h=xe(e.shapeInfo.logicalShape,t.logicalShape),p=l-u;let d;const f=["x","y","z","w","u","v"];d=0===u?"":l<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${f[e+p]} = 0;`)).join("\n");let m="";return m=l<2&&u>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+p]}`)).join(", "),`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      return get${r}(${m});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,u=fe(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,h,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Ie}\n    ${Se}\n    ${Ne}\n  `}(u);return t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(i.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return i.util.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${ge(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=me(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${ge(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=me(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=me(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=me(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(p+=Te),[p,l,h,a,c,s,n.userCode].join("\n")}function we(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=$e(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Ce(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=$e(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&i.util.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:u}=i.util.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col"];return`\n      ${we(Ae(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${Re(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Ce(e)}\n      }\n    `;const c=s[0],h=s[1],p=$e(r);return 1===h?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${c}, ${h}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],o=n[2],{newShape:u,keptDims:l}=i.util.squeezeShape(n),c=u;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${we(Ae(e,c),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${Re(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${o}, 1)));\n        ${Ce(e)}\n      }\n    `;const h=e.shapeInfo.texShape,p=h[0],d=h[1],f=e.shapeInfo.flatOffset;if(d===s&&null==f)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${p}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===o&&null==f)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const m=$e(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${o} + depth + ${m};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${o} + depth + ${m};\n        vec2 uv = uvFromFlat(${p}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],o=n[2]*s,u=n[1]*o,{newShape:l,keptDims:c}=i.util.squeezeShape(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${we(Ae(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${Re(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${u}, ${o}, ${s}, 1)));\n        ${Ce(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1],m=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(f===u&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(f===s&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=$e(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${g}\n      ${y}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${f}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,o=t[2]*s,u=t[1]*o,{newShape:l,keptDims:c}=i.util.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${we(Ae(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Re(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${o}, ${s}, ${a})) +\n          depth3;\n        ${Ce(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===u&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${$e(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=i.util.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${we(Ae(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Re(t,s)});\n      }\n    `}const o=t[5],u=t[4]*o,l=t[3]*u,c=t[2]*l,h=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${c}, ${l}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${Ce(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,f=d[0],m=d[1];if(m===h&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${c} + depth * ${l} +\n          depth2 * ${u} + depth3 * ${o} + depth4 + ${$e(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function ke(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${fe().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=fe();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=s[0],u=s[1],l=fe();if(null!=s&&i.util.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${u}.0, ${o}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const c=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${c[0]}, ${c[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${ke(Ae(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${Re(s,r)});\n        }\n      `}const o=fe();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=fe();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(s[i-1]/2);let p=h*Math.ceil(s[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,p*=s[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const Ie="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Se="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ne="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Te="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function $e(e){return`offset${e}`}function Ce(e){const t=e.name,n=i.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Ee(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function _e(e,t,n){const{newShape:r,keptDims:a}=i.util.squeezeShape(t),s=t.length,o=e&&3===s&&1===t[0],u=o?t.slice(1):r,l=!e&&s>1&&!i.util.arraysEqual(t,n)&&r.length<s||o;return{useSqueezeShape:l,uniformShape:l?u:t,keptDims:a}}function Ae(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Re(e,t){return t.map((t=>e[t])).join(", ")}function Fe(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!i.util.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,u=a.isUniform?null:a.texData.texShape;if(!i.util.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)}))}function Oe(e){return(0,i.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class De{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=h.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=fe();this.outputShape=e,this.enableShapeUniforms=Oe(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ge(["r","c","d"],e):me(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Me{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=h.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=fe();this.outputShape=e,this.enableShapeUniforms=Oe(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ge(["r","c","d"],e):me(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Le{constructor(e){this.variableNames=["A"],this.outTexUsage=p.DOWNLOAD;const t=fe();this.outputShape=e,this.userCode=`\n      ${be}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class Pe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=p.DOWNLOAD;const t=fe();this.outputShape=e,this.userCode=`\n      ${be}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Be{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=fe();this.outputShape=e,this.enableShapeUniforms=Oe(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":ye(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class ze{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=fe();this.outputShape=e,this.enableShapeUniforms=Oe(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":ye(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function Ve(e){const t=fe();return k(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function We(e){return C(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Ue(e){return E(e,new Uint16Array([0,1,2,2,1,3]))}function Ge(e,t,n,r,a,s){R(t,n);const i=A(e),o=e.TEXTURE_2D;return b(e,(()=>e.bindTexture(o,i))),b(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),b(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),b(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),b(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),b(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function He(e){return e.internalFormatFloat}function je(e,t,n,r){const[a,s]=f(t,n);return Ge(e,a,s,He(r),r.textureFormatFloat,e.FLOAT)}function Ke(e){return e.internalFormatHalfFloat}function qe(e,t,n,r){const[a,s]=f(t,n);return Ge(e,a,s,Ke(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Xe(e){return e.downloadTextureFormat}function Ye(e,t,n,r){const[a,s]=f(t,n);return Ge(e,a,s,Xe(r),e.RGBA,e.UNSIGNED_BYTE)}function Qe(e){return e.internalFormatPackedFloat}function Ze(e,t,n,r){const[a,s]=g(t,n);return Ge(e,a,s,Qe(r),e.RGBA,e.FLOAT)}function Je(e){return e.internalFormatPackedHalfFloat}function et(e,t,n,r){const[a,s]=g(t,n);return Ge(e,a,s,Je(r),e.RGBA,r.textureTypeHalfFloat)}function tt(e,t,n){return b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),O(e,t,"clipSpacePos",n,3,20,0)&&O(e,t,"uv",n,2,20,12)}function nt(e,t,n,r,a,s){let i,o,u;b(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),b(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function rt(e,t,n){b(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?b(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):b(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function at(e,t,n,r){const a=e.createBuffer();b(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return b(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),b(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),b(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function st(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function it(e,t,n,r){const[a,s]=f(t,n),i=new Uint8Array(t*n*4);return b(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function ot(e,t,n,r,a,s,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=g(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function ut(e,t,n){const r=new Float32Array(t*n*4);return b(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}class lt{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,i.env)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,l(t,e)):this.gl=c(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===(0,i.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=w(this.gl,e),ie(this.gl,t))this.textureHalfFloatExtension=w(this.gl,t);else if((0,i.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ie(this.gl,r))this.colorBufferHalfFloatExtension=w(this.gl,r);else if((0,i.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ie(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!ie(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=We(this.gl),this.indexBuffer=Ue(this.gl),this.framebuffer=F(this.gl),this.textureConfig=y(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,i.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;b(e,(()=>e.finish())),b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),b(e,(()=>e.deleteFramebuffer(this.framebuffer))),b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),b(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),b(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),je(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),qe(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),Ye(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),rt(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),nt(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),et(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),Ze(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(W(this.gl,this.framebuffer),this.outputTexture=null),b(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>it(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return ot(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return st(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=at(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,i.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>ut(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=I(t,e);null==this.vertexShader&&(this.vertexShader=Ve(t));const r=N(t);return b(t,(()=>t.attachShader(r,this.vertexShader))),b(t,(()=>t.attachShader(r,n))),T(t,r),this.debug&&$(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=tt(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&b(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&$(this.gl,this.program),b(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?L(this.gl,e,t):P(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),b(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),B(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=g(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&$(this.gl,this.program),U(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),b(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),b(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=w(this.gl,2===(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await i.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||i.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),V(this.gl,e,this.framebuffer),this.debug&&U(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(V(this.gl,this.outputTexture,this.framebuffer),this.debug&&U(this.gl)):W(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;V(r,e,this.framebuffer),this.debug&&U(r),this.outputTexture=e,b(r,(()=>r.viewport(0,0,t,n))),b(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),b(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function ct(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&i.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function ht(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function pt(e){return(t,n,r,a,s)=>{const o=i.backend_util.assertAndGetBroadcastShape(t,n),u=o.length,l=i.util.computeStrides(o),c=i.util.sizeFromShape(o),h=i.util.getTypedArrayFromDType(s,c),p=t.length,d=n.length,f=i.util.computeStrides(t),m=i.util.computeStrides(n),g=i.backend_util.getBroadcastDims(t,o),y=i.backend_util.getBroadcastDims(n,o);if(g.length+y.length===0)for(let t=0;t<h.length;++t)h[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<h.length;++t){const n=i.util.indexToLoc(t,u,l),s=n.slice(-p);g.forEach((e=>s[e]=0));const o=i.util.locToIndex(s,p,f),c=n.slice(-d);y.forEach((e=>c[e]=0));const b=i.util.locToIndex(c,d,m);h[t]=e(r[o],a[b])}return[h,o]}}function dt(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}function ft(e,t,n="float32"){if("complex64"===n)return dt({inputs:{real:ft(e,t,"float32"),imag:ft(e,t,"float32")},backend:e});const r=i.util.makeZerosTypedArray(i.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function mt(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function gt(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return mt({inputs:{x:a},backend:n});const e=ft(n,a.shape,a.dtype),t=gt({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=dt({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}({inputs:{input:a},backend:n}),t=gt({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!i.util.hasEncodingLoss(a.dtype,s)){const e=mt({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=i.util.toTypedArray([0],a.dtype),[r,s]=pt(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}function yt(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:o}=n,u=a;ct([s,o],e);const l=u.data.get(s.dataId).values,c=u.data.get(o.dataId).values,h="string"===s.dtype?i.backend_util.fromUint8ToStringArray(l):l,p="string"===s.dtype?i.backend_util.fromUint8ToStringArray(c):c,d=r||s.dtype,[f,m]=t(s.shape,o.shape,h,p,d);return u.makeTensorInfo(m,d,f)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=gt({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(a.dataId).values,c=gt({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(s.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=dt({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function bt(e){return(t,n,r,a,s,o)=>{const u=i.backend_util.assertAndGetBroadcastShape(t,n),l=i.util.sizeFromShape(u),c=u.length,h=i.util.computeStrides(u),p=i.util.getTypedArrayFromDType("float32",l),d=i.util.getTypedArrayFromDType("float32",l),f=i.backend_util.getBroadcastDims(t,u),m=i.backend_util.getBroadcastDims(n,u),g=i.backend_util.mergeRealAndImagArrays(r,a),y=i.backend_util.mergeRealAndImagArrays(s,o),b=t.length,x=i.util.computeStrides(t),v=n.length,w=i.util.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<p.length;t++){const n=t%g.length,r=t%y.length,a=e(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);p[t]=a.real,d[t]=a.imag}else for(let t=0;t<p.length;t++){const n=i.util.indexToLoc(t,c,h),r=n.slice(-b);f.forEach((e=>r[e]=0));const a=i.util.locToIndex(r,b,x),s=n.slice(-v);m.forEach((e=>s[e]=0));const o=i.util.locToIndex(s,v,w),u=e(g[2*a],g[2*a+1],y[2*o],y[2*o+1]);p[t]=u.real,d[t]=u.imag}return[p,d,u]}}i.Abs,i.Complex,i.Identity,i.Real,i.Cast;const xt=pt(((e,t)=>e+t)),vt=bt(((e,t,n,r)=>({real:e+n,imag:t+r})));function wt(e,t,n,r,a){const s=i.util.sizeFromShape(r),o=i.util.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(o[r]+=s>0?t[n]:1)}return o}function kt(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],o=(0,i.buffer)([a,n],t.dtype);for(let i=0;i<a;i++)for(let a=0;a<s;a++){const s=e.get(i,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?o.set(1,i,s):t.size>0?o.set(o.get(i,s)+t.get(i,a),i,s):o.set(o.get(i,s)+1,i,s))}return o}function It(e){return(t,n,r)=>{const a=i.util.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function St(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:o}=r;if(ct(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=s,l=u.data.get(o.dataId).values,c=i.util.sizeFromShape(o.shape),h=n||o.dtype,p=i.util.getArrayFromDType(h,c);for(let e=0;e<c;++e)p[e]=t(l[e],a);return u.makeTensorInfo(o.shape,h,p)}}function Nt(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(ct(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,a);return o.makeTensorInfo(i.shape,l,c)}}yt(i.Add,xt,vt),i.Add;const Tt=It((e=>Math.ceil(e)));function $t(e,t,n,r){const a=i.util.getArrayFromDType(n,i.util.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=i.util.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?i.backend_util.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[i+t]=s[o++]}r+=e.shape[1]}))}return a}Nt(i.Ceil,Tt),i.Ceil;const Ct=pt(((e,t)=>e===t?1:0)),Et=(yt(i.Equal,Ct,null,"bool"),i.Equal,It((e=>Math.exp(e)))),_t=(Nt(i.Exp,Et,"float32"),i.Exp,It((e=>Math.expm1(e)))),At=(Nt(i.Expm1,_t),i.Expm1,It((e=>Math.floor(e))));function Rt(e,t,n,r,a,s,o,u,l){const c=(0,i.buffer)([r,s],n);for(let n=0;n<r;n++){const r=[];let i=0;for(let t=0;t<a;t++){const s=e[n*a+t];i+=s*o[t],r.push(s)}if(i<0||i>=l/s)throw new Error(`Invalid indices: ${r} does not index into ${u}`);for(let e=0;e<s;e++)c.values[n*s+e]=t.get(...t.indexToLoc(i*s+e))}return c}function Ft(e,t,n){const r=(0,i.buffer)(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const u=e.locToIndex(a);r.values[n]=e.values[u]}return r}Nt(i.Floor,At),i.Floor;const Ot=pt(((e,t)=>e>t?1:0)),Dt=(yt(i.Greater,Ot,null,"bool"),i.Greater,pt(((e,t)=>e>=t?1:0))),Mt=(yt(i.GreaterEqual,Dt,null,"bool"),i.GreaterEqual,pt(((e,t)=>e<t?1:0))),Lt=(yt(i.Less,Mt,null,"bool"),i.Less,pt(((e,t)=>e<=t?1:0)));function Pt(e,t,n){const r=(t-e)/(n-1),a=i.util.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}yt(i.LessEqual,Lt,null,"bool"),i.LessEqual;const Bt=It((e=>Math.log(e)));function zt(e,t,n,r){const a=i.util.getTypedArrayFromDType(r,i.util.sizeFromShape(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}Nt(i.Log,Bt),i.Log;const Vt=pt(((e,t)=>Math.max(e,t))),Wt=(yt(i.Maximum,Vt),i.Maximum,pt(((e,t)=>Math.min(e,t)))),Ut=(yt(i.Minimum,Wt),i.Minimum,pt(((e,t)=>e*t))),Gt=bt(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})));function Ht(e,t,n){const r=i.util.createScalarValue(-1,n);return Ut([],t,r,e,n)}yt(i.Multiply,Ut,Gt),i.Multiply,i.Neg;const jt=pt(((e,t)=>e!==t?1:0));function Kt(e,t,n,r,a){const s=t.length,o=i.util.sizeFromShape(t),u=i.util.computeStrides(t),l=i.util.computeStrides(a),c=i.util.getTypedArrayFromDType(n,i.util.sizeFromShape(a));for(let t=0;t<o;++t){const n=i.util.indexToLoc(t,s,u),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];c[i.util.locToIndex(a,s,l)]=e[t]}return c}function qt(e,t,n,r){const[a,s]=i.backend_util.computeOutAndReduceShapes(e,r),o=(0,i.upcastType)(t,"int32"),u=i.util.makeZerosTypedArray(i.util.sizeFromShape(a),o),l=i.util.sizeFromShape(s);for(let e=0;e<u.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];u[e]=r}return{outVals:u,outShape:a,outDtype:o}}function Xt(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return i.util.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),s=i.util.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}yt(i.NotEqual,jt,null,"bool"),i.NotEqual,i.Transpose,i.Prod;const Yt=It((e=>1/Math.sqrt(e))),Qt=(Nt(i.Rsqrt,Yt),i.Rsqrt,It((e=>1/(1+Math.exp(-e)))));function Zt(e,t,n,r,a){const s=i.slice_util.isSliceContinous(r,t,n),o=i.util.sizeFromShape(n),u=i.util.computeStrides(r);if(s){const n=i.slice_util.computeFlatOffset(t,u);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const l="string"===a?i.backend_util.fromUint8ToStringArray(e):e,c=(0,i.buffer)(r,a,l),h=(0,i.buffer)(n,a);for(let e=0;e<h.size;++e){const n=h.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));h.set(c.get(...r),...n)}return"string"===a?i.backend_util.fromStringArrayToUint8(h.values):h.values}function Jt(e,t,n,r,a,s,o){const u=t[0],l=s[0],c=new Array(l),h=new Array(u),p=t[1];if(0===l){if(0!==u)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${u}`);return[i.util.getArrayFromDType(n,0),[0,p],i.util.getArrayFromDType(a,0),c,h]}let d=!0,f=0;const m=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*p];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=l)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${l}`);++m[n],d=d&&n>=f,f=n}let g=!0;for(let e=0;e<l;++e){const t=0===m[e];c[e]=t,g=g&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(g&&d){const t=e,n=r;for(let e=0;e<u;++e)h[e]=e;return[t,[u,p],n,c,h]}{const t=m[l-1],s=i.util.getArrayFromDType(n,t*p),d=i.util.getArrayFromDType(a,t),f=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*p],a=f[n],i=(0===n?0:m[n-1])+a;f[n]++;for(let n=0;n<p;++n)s[i*p+n]=e[t*p+n];d[i]=r[t],h[t]=i}for(let e=0;e<l;++e)if(0===f[e]){const t=0===e?0:m[e-1];s[t*p+0]=e;for(let e=1;e<p;++e)s[t*p+e]=0;d[t]=o}return[s,[t,p],d,c,h]}}function en(e,t,n,r,a){const s=i.util.sizeFromShape(r),o=t[0],u=a.length,l=[];let c=1,h=-1;for(let e=0;e<u;++e){const t=a[e];if(-1===t){if(-1!==h)throw new Error(`only one output dimension may be -1, not both ${h} and ${e}`);h=e,l.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);c*=t,l.push(t)}}if(-1!==h){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/c);if(c*e!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}\n          dense values, but the requested shape requires a multiple of ${c}. inputShape=${r} outputShape= ${l}`);l[h]=e}const p=i.util.sizeFromShape(l);if(p!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${p}. inputShape=${r} outputShape=${l}`);const d=r.length,f=[];if(d>0){f[d-1]=1;for(let e=d-2;e>=0;--e)f[e]=f[e+1]*r[e+1]}const m=[];if(u>0){m[u-1]=1;for(let e=u-2;e>=0;--e)m[e]=m[e+1]*l[e+1]}const g=i.util.getArrayFromDType(n,o*u);for(let t=0;t<o;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*f[r];for(let e=0;e<u;++e)g[t*u+e]=Math.trunc(n/m[e]),n%=m[e]}return[g,[o,u],l]}function tn(e,t,n,r,a,s=!1,o=0){const u=r.length;if(u!==a.length)throw new Error("segmentIds and indices should have same size.");const l=[t[0],e.length/t[0]],c=l[1],h=u>0?a[u-1]+1:0;if(h<0)throw new Error("segment ids must be >= 0");const p=t.slice();p[0]=h;const d=p.reduce(((e,t)=>e*t),1),f=i.util.getArrayFromDType(n,d);if(0===u)return h>0&&f.fill(o),[f,p];if(h<=0)throw new Error("segment ids must be >= 0");let m=0,g=1,y=0,b=a[m];for(;;){let t=0;if(g<u){if(t=a[g],b===t){++g;continue}if(b>=t)throw new Error("segment ids are not increasing")}if(b<0||b>=h)throw new Error(`Segment id ${b} out of range [0, ${h}), possibly because segmentIds input is not sorted.`);b>y&&f.fill(o,y*c,b*c);for(let t=m;t<g;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(`Bad: indices[${t}] == ${r[t]} out of range [0, ${l[0]})`);for(let t=0;t<c;t++)f[b*c+t]+=e[n*c+t]}if(s)for(let e=0;e<c;e++)f[b*c+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>u)break}return y<h&&f.fill(o,y*c,h*c),[f,p]}St(i.Sigmoid,(e=>1/(1+Math.exp(-e)))),i.Sigmoid,i.Slice;const nn=It((e=>Math.sqrt(e))),rn=(St(i.Sqrt,(e=>Math.sqrt(e))),i.Sqrt,pt(((e,t)=>{const n=e-t;return n*n})));function an(e,t,n,r){const a=(0,i.buffer)(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}yt(i.SquaredDifference,rn),i.SquaredDifference;class sn{constructor(e,t,n,r,a,s){this.separator=i.util.encodeString(e),this.nGramWidths=t,this.leftPad=i.util.encodeString(n),this.rightPad=i.util.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(a-(i+1))),c=s-(u+l),h=t+(u>0?0:i-o);let p=0;p+=u*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=l*this.rightPad.length,p+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(p);const d=n[r+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=i.util.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}const o=new Array(s[a]);for(let n=0;n<a;++n){const r=t[n];let a=s[n];if(this.nGramWidths.forEach((s=>{const i=t[n+1]-t[n],u=this.getNumNGrams(i,s);this.createNGrams(e,r,o,a,u,s),a+=u})),this.preserveShort&&a===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const i=s+2*this.padWidth,u=1;this.createNGrams(e,r,o,a,u,i)}}return[o,s]}}function on(e,t,n,r,a,s,i,o){return new sn(n,r,a,s,i,o).compute(e,t)}function un(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function ln(e,t,n){const r=e.length,a=[];let s=0,o=0;const u=new Array(r);for(let i=0;i<r;++i){const r=a.length;un(e[i],t,n,a);const l=a.length-r;u[i]=l,s+=l,o=Math.max(o,l)}const l=i.util.getArrayFromDType("int32",2*s),c=new Array(s),h=[r,o];let p=0;for(let e=0;e<r;++e)for(let t=0;t<u[e];++t)l[2*p]=e,l[2*p+1]=t,c[p]=a[p],++p;return[l,c,h]}function cn(e,t){const n=i.util.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=i.util.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}const hn=pt(((e,t)=>e-t)),pn=bt(((e,t,n,r)=>({real:e-n,imag:t-r})));function dn(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=(0,i.buffer)(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}yt(i.Sub,hn,pn),i.Sub;const fn=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function mn(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);mn(e,t,Math.max(n,Math.floor(t-s*o/a+u)),Math.min(r,Math.floor(t+(a-s)*o/a+u)))}const a=e[t];let s=n,o=r;for(i.util.swap(e,n,t),fn(e[r],a)>0&&i.util.swap(e,n,r);s<o;){for(i.util.swap(e,s,o),s++,o--;fn(e[s],a)<0;)s+=1;for(;fn(e[o],a)>0;)o-=1}0===fn(e[n],a)?i.util.swap(e,n,o):(o+=1,i.util.swap(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}function gn(e,t,n,r,a){const s=t[t.length-1],[o,u]=[e.length/s,s],l=i.util.getTypedArrayFromDType(n,o*r),c=i.util.getTypedArrayFromDType("int32",o*r);for(let t=0;t<o;t++){const n=t*u,s=e.subarray(n,n+u);let i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(mn(i,r),i=i.slice(0,r)),a&&i.sort(fn);const o=t*r,h=l.subarray(o,o+r),p=c.subarray(o,o+r);for(let e=0;e<r;e++)h[e]=i[e].value,p[e]=i[e].index}const h=t.slice();return h[h.length-1]=r,[(0,i.buffer)(h,n,l),(0,i.buffer)(h,"int32",c)]}function yn(e,t,n,r){const a=i.util.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const o={},u=new Int32Array(n[a]),l=new i.TensorBuffer(s,r,e),c=[],h=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(h)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==o[n])u[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,u[t]=e,c.push(t)}}const p=s.slice();p[1]=Object.keys(o).length;const d=new i.TensorBuffer(p,r);c.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,e,r),n,t,r)}));const f=n.slice();return f[a]=p[1],{outputValues:d.values,outputShape:f,indices:u}}const{addImpl:bn,bincountImpl:xn,bincountReduceImpl:vn,ceilImpl:wn,concatImpl:kn,equalImpl:In,expImpl:Sn,expm1Impl:Nn,floorImpl:Tn,gatherNdImpl:$n,gatherV2Impl:Cn,greaterImpl:En,greaterEqualImpl:_n,lessImpl:An,lessEqualImpl:Rn,linSpaceImpl:Fn,logImpl:On,maxImpl:Dn,maximumImpl:Mn,minimumImpl:Ln,multiplyImpl:Pn,negImpl:Bn,notEqualImpl:zn,prodImpl:Vn,rangeImpl:Wn,rsqrtImpl:Un,sigmoidImpl:Gn,simpleAbsImpl:Hn,sliceImpl:jn,sparseFillEmptyRowsImpl:Kn,sparseReshapeImpl:qn,sparseSegmentReductionImpl:Xn,sqrtImpl:Yn,stridedSliceImpl:Qn,stringNGramsImpl:Zn,stringSplitImpl:Jn,stringToHashBucketFastImpl:er,subImpl:tr,tileImpl:nr,topKImpl:rr,transposeImpl:ar,uniqueImpl:sr}=s;function ir(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function or(e,t){return 1===t?[e]:ir(e,t)}class ur{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=or("rc",t),r=Ee(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class lr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Oe(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):me(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":ye(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class cr{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=pr(t,n),a=dr(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=hr(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===d.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===d.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===d.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===d.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===d.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=pr(n,r),s=dr(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const o=hr(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=(0,i.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const l=this.usedTextures[s],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function hr(e,t,n,r,a){const s=function(e,t){switch(e){case d.PACKED_2X2_FLOAT32:return Qe(t);case d.PACKED_2X2_FLOAT16:return Je(t);case d.UNPACKED_FLOAT32:return He(t);case d.UNPACKED_FLOAT16:return Ke(t);case d.PACKED_4X1_UNSIGNED_BYTE:return Xe(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=g(e[0],e[1]);i=t*n}else{const[t,n]=f(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function pr(e,t){if(e===p.UPLOAD)return d.PACKED_2X2_FLOAT32;if(e===p.RENDER||null==e)return function(e){return(0,i.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?d.PACKED_2X2_FLOAT32:d.UNPACKED_FLOAT32:e?d.PACKED_2X2_FLOAT16:d.UNPACKED_FLOAT16}(t);if(e===p.DOWNLOAD||e===p.PIXELS)return d.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function dr(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class fr{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Oe(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const mr="return abs(x);",gr="return x;";class yr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Oe(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class br{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=or("rc",t),r=Ee(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const xr=i.kernel_impls.whereImpl,vr={},wr=(0,i.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class kr extends i.KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,i.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=c((0,i.env)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=(0,i.env)().getNumber("WEBGL_VERSION"))in vr||(vr[t]={}),vr[t]),this.gpgpu=new lt(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new cr(this.gpgpu),this.numMBBeforeWarning=null==(0,i.env)().global.screen?1024:(0,i.env)().global.screen.height*(0,i.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new i.DataStorage(this,(0,i.engine)())}nextDataId(){return kr.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,i.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,i.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:p.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if((0,i.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:p.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:o,isPacked:u}=t;if(null!=s){let t;t=u?new yr(o,gr):new fr(o,gr);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let c,h;if(l&&(c=i.util.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);h=i.backend_util.mergeRealAndImagArrays(e,t)}else h=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=i.util.now()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:o,isPacked:u}=t;if(null!=a){let t;t=u?new yr(r,gr):new fr(r,gr);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!(0,i.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,i.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,h=null;if("complex64"!==s&&(0,i.env)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(t.texture,...m(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];c=i.backend_util.mergeRealAndImagArrays(t,n)}else if(null==h)c=this.getValuesFromTexture(e);else{const e=i.util.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=h){const e=this.gpgpu.gl;b(e,(()=>e.deleteBuffer(h)))}const p=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,i.engine)().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>i.util.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,i.buffer)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!x(n)){if((0,i.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=i.util.sizeFromShape(t);if((0,i.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...m(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=(0,i.env)().getBool("WEBGL_PACK")&&!0===r,o=s?X(t):t,u=s?new Pe(o):new Le(o),l=this.runWebGLProgram(u,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=i.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=i.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if((0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=i.util.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:i.util.now(),endMs:null}}endTimer(e){return(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=i.util.now(),e)}async getQueryTime(e){if((0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=wr){return(0,i.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&i.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){i.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return xr(e.shape,t)}packedUnaryOp(e,t,n){const r=new yr(e.shape,t),a=this.compileAndRun(r,[e],n);return(0,i.engine)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Hn(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,i.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,mr,e.dtype);const t=new fr(e.shape,mr),n=this.compileAndRun(t,[e]);return(0,i.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&i.util.isString(n[0])){const a=n.map((e=>i.util.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return(0,i.engine)().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new br(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new ur(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[K(e.shape),...q(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[K(t),...q(t)],s=new lr(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=X(r);let i;const o=m(s);i=n?new Me(s):new De(s);const u=[o];return{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,u,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===h.DENSE){const t=m(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===i.util.sizeFromShape(s.shape))return o.values=i.util.getTypedArrayFromDType(s.dtype,0),s;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&i.util.sizeFromShape(t.shape)<=(0,i.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Z(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const c={shape:s.shape,texData:o,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:o,uniformShape:u,keptDims:l}=_e(e.packedInputs,t.shape,s);let c="",h="",p="";if(1===u.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){const e=i.util.computeStrides(u);p=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else h=`${u[0]>1}_${u[1]>1}`;const d=t.shape.length,f=2===u.length&&i.util.arraysEqual(t.shape,s),m=1===i.util.sizeFromShape(t.shape),g=i.backend_util.getBroadcastDims(t.shape,n.shape),y=!e.packedInputs&&d===n.shape.length&&i.util.arraysEqual(s,n.texData.texShape),b=e.packedInputs||u.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${y}_${o?l:""}_${u.length}_${m}_${g}_${f}_${c}_${h}_${p}_${b}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+`${(0,i.env)().getNumber("WEBGL_VERSION")}`,s}(e,l,c),d=this.getAndSaveBinary(p,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=ve(a,o,t),l=e.createProgram(u);let c=null;const h=e.getUniformLocation(l,"NAN",!1);1===(0,i.env)().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const p=!1,d={},f={},m={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];d[r]=e.getUniformLocation(l,r,p),d[`offset${r}`]=e.getUniformLocation(l,`offset${r}`,p),t.enableShapeUniforms&&(f[`${r}Shape`]=e.getUniformLocation(l,`${r}Shape`,p),m[`${r}TexShape`]=e.getUniformLocation(l,`${r}TexShape`,p))}let g,y,b;t.enableShapeUniforms&&(g=e.getUniformLocation(l,"outShape",p),b=e.getUniformLocation(l,"outShapeStrides",p),y=e.getUniformLocation(l,"outTexShape",p));const x=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{x[n]=e.getUniformLocation(l,t.name,p)})),{program:t,source:u,webGLProgram:l,uniformLocations:d,customUniformLocations:x,inShapeInfos:s,outShapeInfo:o,infLoc:c,nanLoc:h,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}(this.gpgpu,e,l,c))),f=null!=this.activeTimers;let g;f&&(g=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||(Fe(t.inShapeInfos,n),Fe([t.outShapeInfo],[r]));const s=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,o[0],o[1]):e.setOutputMatrixTexture(s,o[0],o[1]),e.setProgram(t.webGLProgram),1===(0,i.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],o=t.uniformLocations[`offset${a}`],u=t.inShapesLocations[`${a}Shape`],l=t.inTexShapesLocations[`${a}TexShape`];if(u){const{uniformShape:r}=_e(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(u,new Int32Array(r));break;case 2:e.gl.uniform2iv(u,new Int32Array(r));break;case 3:e.gl.uniform3iv(u,new Int32Array(r));break;case 4:e.gl.uniform4iv(u,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(i.util.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)}));const u=t.outShapeLocation;if(u)switch(r.shape.length){case 1:e.gl.uniform1iv(u,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(u,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(u,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(u,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=i.util.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const y=(0,i.env)().get("WEBGL_FLUSH_THRESHOLD");if(y>0){const e=i.util.now();e-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,i.env)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,i.env)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,i.tidy)((()=>{if(!(0,i.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,i.env)().getBool("DEBUG");(0,i.env)().set("DEBUG",!1);const t=this.abs((0,i.scalar)(1e-8)).dataSync()[0];if((0,i.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:o,isPacked:u}=t;if(null!=s)return;const l=null!=this.activeTimers;let c;l&&(c=i.util.now());let h=t.texShape;if(null==h&&(h=Y(n,u),t.texShape=h),null!=a){const e=X(n);let s,o=h[1],d=h[0];const f=a instanceof Uint8Array||a instanceof Uint8ClampedArray;u?([o,d]=g(h[0],h[1]),s=new ze(e,f)):s=new Be(e,f);const m=this.makeTensorInfo([d,o],r);this.texData.get(m.dataId).usage=f?p.PIXELS:p.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),o,d,a);const y=[[d,o]],b=!0,x=this.runWebGLProgram(s,[m],r,y,b),v=this.texData.get(x.dataId);t.texture=v.texture,t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,this.disposeIntermediateTensorInfo(m),this.texData.delete(x.dataId),t.values=null,l&&(this.uploadWaitMs+=i.util.now()-c)}else{const e=this.acquireTexture(h,o,r,u);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*i.util.bytesPerElement(t)}}kr.nextDataId=0;const Ir="3.11.0";function Sr(){(0,i.env)().set("WEBGL_FORCE_F16_TEXTURES",!0)}i.device_util.isBrowser()&&(0,i.registerBackend)("webgl",(()=>new kr),2);const Nr={forceHalfFloat:Sr};class Tr{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=i.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Oe(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class $r{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i.backend_util.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=Oe(a);let s="";if(r)if(0===a||1===i.util.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${Ee(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=or("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function Cr(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Er={kernelName:i.Identity,backendName:"webgl",kernelFunc:Cr};function _r(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=Cr({inputs:{x:r},backend:n}),u=Cr({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const Ar={kernelName:i.Complex,backendName:"webgl",kernelFunc:_r},Rr="return (a < 0.) ? b * a : a;",Fr="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Or={kernelName:i.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,o=n.makeTensorInfo([],"float32",i.util.createScalarValue(s,"float32")),u=(0,i.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $r(Fr,a.shape,o.shape):new Tr(Rr,a.shape,o.shape),l=n.runWebGLProgram(u,[a,o],"float32");return n.disposeIntermediateTensorInfo(o),l}},Dr="return (a < 0.) ? b * a : a;",Mr="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Lr={kernelName:i.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=(0,i.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $r(Mr,r.shape,a.shape):new Tr(Dr,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}};function Pr({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:o}=a,u=s,l=r||o.dtype;if(u.shouldExecuteOnCPU([o])&&null!=n){const e=u.texData.get(o.dataId),t=n(e.values,l);return u.makeTensorInfo(o.shape,l,t)}let c;return c=(0,i.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new yr(o.shape,t):new fr(o.shape,e),u.runWebGLProgram(c,[o],l)}}function Br({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:o,backend:u})=>{const{a:l,b:c}=o,h=u;if(r&&"complex64"===l.dtype){const t=h.texData.get(l.dataId),n=h.texData.get(c.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:c.shape},o=new Tr(e,l.shape,c.shape);return h.runWebGLProgram(o,[a,s],(0,i.upcastType)(n.dtype,r.dtype))})),s=_r({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),s}const p=s||(0,i.upcastType)(l.dtype,c.dtype);if(("string"===l.dtype||"string"===c.dtype||h.shouldExecuteOnCPU([l,c]))&&null!=a){const e=h.texData.get(l.dataId).values,t=h.texData.get(c.dataId).values,n="string"===l.dtype?i.backend_util.fromUint8ToStringArray(e):e,r="string"===l.dtype?i.backend_util.fromUint8ToStringArray(t):t,[s,o]=a(l.shape,c.shape,n,r,p),u=h.makeTensorInfo(o,p);return h.texData.get(u.dataId).values=s,u}let d;return d=(0,i.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new $r(t,l.shape,c.shape,n):new Tr(e,l.shape,c.shape),h.runWebGLProgram(d,[l,c],p)}}function zr(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Mr:Dr;if("leakyrelu"===e)return t?Fr:Rr;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class Vr{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Oe(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class Wr{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=i.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Ur="return a * b;";function Gr(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=i.backend_util.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new Wr("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new Wr("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=_r({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=Pn(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let o;return o=(0,i.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $r(Ur,r.shape,a.shape):new Tr(Ur,r.shape,a.shape),n.runWebGLProgram(o,[r,a],s)}const Hr={kernelName:i.Multiply,backendName:"webgl",kernelFunc:Gr};function jr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,o=n,u=i.util.sizeFromShape(a.shape),l=i.util.inferFromImplicitShape(s,u),c=i.util.sizeFromShape(l);i.util.assert(u===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${a.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const h=o.texData.get(a.dataId);return!h.isPacked||Z(a.shape,l)||null!==h.texture&&Z(h.shape,l)?(o.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){const r=[K(e.shape),...q(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[K(t),...q(t)],i=new lr(s,r),o=[r],u=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,l,o)}const Kr={kernelName:i.Reshape,backendName:"webgl",kernelFunc:jr};class qr{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const o=4*Math.floor(n/4),u=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${i.util.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Xr{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function Yr(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=i.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,h;c="mean"===n?0===i?new qr({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new qr({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new Xr({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=s,s=r.runWebGLProgram(c,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}class Qr{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=Ee(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Zr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Ee(this.rank),a=ir("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Jr(e,t,n){const r=(0,i.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Zr(e.shape,t):new Qr(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function ea(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r;return function(e,t,n,r){const a=t,s=e.shape.length,o=i.util.parseAxisParam(a,e.shape);let u=o;const l=i.backend_util.getAxesPermutation(u,s),c=null!=l;let h=e;c&&(h=Jr(e,l,r),u=i.backend_util.getInnerMostAxes(u.length,s)),i.backend_util.assertAxesAreInnerMostDims("sum",u,s);const[p,d]=i.backend_util.computeOutAndReduceShapes(h.shape,u);let f=p;n&&(f=i.backend_util.expandShapeToKeepDim(p,o));const m=i.util.sizeFromShape(d),g=jr({inputs:{x:h},attrs:{shape:[i.util.sizeFromShape(e.shape)/m,m]},backend:r}),y=Yr(g,(0,i.sumOutType)(e.dtype),"sum",r),b=jr({inputs:{x:y},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(y),c&&r.disposeIntermediateTensorInfo(h),b}(a,s,o,n)}const ta={kernelName:i.Sum,backendName:"webgl",kernelFunc:ea};function na(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=ar(e,a.shape,a.dtype,s,u);l=i.makeTensorInfo(u,a.dtype),i.texData.get(l.dataId).values=t}else l=Jr(a,s,i);return l}const ra={kernelName:i.Transpose,backendName:"webgl",kernelFunc:na};function aa({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:l=null}){const c=e.shape.length,h=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],d=r?t.shape[h-1]:t.shape[h-2],f=n?e.shape[c-1]:e.shape[c-2],m=r?t.shape[h-2]:t.shape[h-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=i.util.sizeFromShape(g),x=i.util.sizeFromShape(y),v=b===x||1===b||1===x;i.util.assert(c>=2&&h>=2&&v,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const w=(b>x?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);i.util.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[b,p,f]:[b,f,p],I=r?[x,m,d]:[x,d,m],S=jr({inputs:{x:e},backend:a,attrs:{shape:k}}),N=jr({inputs:{x:t},backend:a,attrs:{shape:I}}),T=[S,N],$=Math.max(b,x),C=n?S.shape[1]:S.shape[2],E=null!=s,_=null!=o,A="leakyrelu"===l,R=null!=l?zr(l,!0):null;let F;if((1===f||1===m)&&C>1e3&&!1===(E||_||A||null!=R)){let e=S,t=N;n&&(e=na({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),T.push(e)),r&&(t=na({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),T.push(t));const s=1===m;let i=e;1!==m&&(i=jr({inputs:{x:e},backend:a,attrs:{shape:[$,C,1]}}),T.push(i));const o=1===m?2:1;let u=t;s&&(u=jr({inputs:{x:t},backend:a,attrs:{shape:[$,1,C]}}),T.push(u));const l=Gr({inputs:{a:i,b:u},backend:a});F=ea({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),T.push(l)}else{const l=(0,i.upcastType)(e.dtype,t.dtype),c=new Vr(k,I,[$,f,m],n,r,E,R,_,A),h=[S,N];if(null!=s&&h.push(s),_&&h.push(o),A){const e=a.makeTensorInfo([],"float32",i.util.createScalarValue(u,"float32"));h.push(e),T.push(e)}F=a.runWebGLProgram(c,h,l)}const O=jr({inputs:{x:F},backend:a,attrs:{shape:w}});T.push(F);for(const e of T)a.disposeIntermediateTensorInfo(e);return O}const sa={kernelName:i._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return aa({a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},ia="return abs(x);",oa={kernelName:i.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Hn(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=(0,i.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new yr(r.shape,ia):new fr(r.shape,ia),n.runWebGLProgram(a,[r],r.dtype)}},ua=Pr({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),la={kernelName:i.Acos,backendName:"webgl",kernelFunc:ua},ca=Pr({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),ha={kernelName:i.Acosh,backendName:"webgl",kernelFunc:ca},pa="return a + b;",da=Br({opSnippet:pa,packedOpSnippet:pa,supportsComplex:!0,cpuKernelImpl:bn}),fa={kernelName:i.Add,backendName:"webgl",kernelFunc:da};class ma{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class ga{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const ya={kernelName:i.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return Cr({inputs:{x:a[0]},backend:r});if(a.length>(0,i.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>(0,i.upcastType)(e,t))),o=a.map((e=>e.shape)),u=(0,i.env)().getBool("WEBGL_PACK")?new ga(a[0].shape,o):new ma(a[0].shape,o);return r.runWebGLProgram(u,a,s)}},ba={kernelName:i.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,u=a.shape.length,l=i.util.parseAxisParam(s,a.shape);let c=l;const h=i.backend_util.getAxesPermutation(c,u);let p=a;null!=h&&(p=na({inputs:{x:a},backend:n,attrs:{perm:h}}),c=i.backend_util.getInnerMostAxes(c.length,u)),i.backend_util.assertAxesAreInnerMostDims("all",c,u);const[d,f]=i.backend_util.computeOutAndReduceShapes(p.shape,c),m=jr({inputs:{x:p},backend:n,attrs:{shape:[-1,i.util.sizeFromShape(f)]}}),g=Yr(m,m.dtype,"all",n);let y;return y=jr(o?{inputs:{x:g},backend:n,attrs:{shape:i.backend_util.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),y}},xa={kernelName:i.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,u=a.shape.length,l=i.util.parseAxisParam(s,a.shape);let c=l;const h=i.backend_util.getAxesPermutation(c,u);let p=a;null!=h&&(p=na({inputs:{x:a},backend:n,attrs:{perm:h}}),c=i.backend_util.getInnerMostAxes(c.length,u)),i.backend_util.assertAxesAreInnerMostDims("any",c,u);const[d,f]=i.backend_util.computeOutAndReduceShapes(p.shape,c),m=jr({inputs:{x:p},backend:n,attrs:{shape:[-1,i.util.sizeFromShape(f)]}}),g=Yr(m,m.dtype,"any",n);let y;return y=jr(o?{inputs:{x:g},backend:n,attrs:{shape:i.backend_util.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),y}};class va{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class wa{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,i.util.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,u=o.length,l=Ee(u),c=or("coords",u);let h,p;if(1===s){p=u+1;const e=Ee(p);h=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[u-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[u-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[u-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[u-2]};`}else p=u,h=`\n        ${l} sourceLocR = coords;\n        ++${c[u-1]};\n        ${l} sourceLocG = coords;\n        ++${c[u-2]};\n        ${l} sourceLocA = coords;\n        --${c[u-1]};\n        ${l} sourceLocB = coords;\n        --${c[u-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),f="."+d[p-1],m=d.map((e=>"int "+e)),g=or("sourceLocR",p-1).concat("inIdx.r"),y=or("sourceLocG",p-1).concat("inIdx.g"),b=or("sourceLocB",p-1).concat("inIdx.b"),x=or("sourceLocA",p-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[u-1]} < ${o[u-1]-1};\n        bool hasNextRow = ${c[u-2]} < ${o[u-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function ka(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const o=i.backend_util.computeOptimalWindowSize(s),u={windowSize:o,inSize:s,batchSize:a,outSize:Math.ceil(s/o)},l=new va(u,n,null==r),c=[t];null!=r&&c.push(r);const h=e.runWebGLProgram(l,c,"int32");if(1===h.shape[1])return h;const p=ka(e,t,n,h);return e.disposeIntermediateTensorInfo(h),p}function Ia(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=a[a.length-1],o=i.backend_util.computeOptimalWindowSize(s),u=new wa(a,o,n,null==r),l=null==r?[t]:[t,r],c=e.runWebGLProgram(u,l,"int32");if(c.shape.length===t.shape.length){const r=Ia(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function Sa(e,t,n,r){const a=[n];if(i.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!(0,i.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let o=t;null!==s&&s.isPacked&&(o=e.unpackTensor(t),n.push(o));const[u,l]=i.backend_util.computeOutAndReduceShapes(o.shape,a),c=i.util.sizeFromShape(l),h=jr({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(h);const p=ka(e,h,r);n.push(p);const d=jr({inputs:{x:p},backend:e,attrs:{shape:u}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return Ia(e,t,r)}const Na={kernelName:i.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let o=i.util.parseAxisParam(s,a.shape);const u=i.backend_util.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=na({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=i.backend_util.getInnerMostAxes(o.length,l.shape.length)),i.backend_util.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);const h=Sa(n,l,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},Ta={kernelName:i.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let o=i.util.parseAxisParam(s,a.shape);const u=i.backend_util.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=na({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=i.backend_util.getInnerMostAxes(o.length,l.shape.length)),i.backend_util.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);const h=Sa(n,l,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},$a=Pr({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Ca={kernelName:i.Asin,backendName:"webgl",kernelFunc:$a},Ea=Pr({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),_a={kernelName:i.Asinh,backendName:"webgl",kernelFunc:Ea},Aa=Pr({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Ra={kernelName:i.Atan,backendName:"webgl",kernelFunc:Aa},Fa=Br({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Oa={kernelName:i.Atan2,backendName:"webgl",kernelFunc:Fa},Da=Pr({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Ma={kernelName:i.Atanh,backendName:"webgl",kernelFunc:Da};class La{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class Pa{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const Ba={kernelName:i.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;pe(a,"avgPool");const{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=r;i.util.assert(i.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=i.backend_util.computePool2DInfo(a.shape,s,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&i.util.arraysEqual(c.inShape,c.outShape))return Cr({inputs:{x:a},backend:n});const h=new La(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},za={kernelName:i.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=r,h=i.backend_util.computePool3DInfo(a.shape,s,o,[1,1,1],u,l,c),p=new Pa(h,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};class Va{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Wa{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ua={kernelName:i.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s,{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=i.backend_util.computePool3DInfo(o.shape,u,l,[1,1,1],c,h),d=new Wa(p);return n.runWebGLProgram(d,[a],o.dtype)}},Ga={kernelName:i.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s;pe([a,s],"avgPoolGrad");const{filterSize:u,strides:l,pad:c}=r,h=i.backend_util.computePool2DInfo(o.shape,u,l,1,c),p=new Va(h);return n.runWebGLProgram(p,[a],o.dtype)}},Ha={kernelName:i.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return aa({a,b:s,transposeA:i,transposeB:o,backend:n})}};class ja{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],i.backend_util.assertAndGetBroadcastShape(e,t),i.backend_util.assertAndGetBroadcastShape(e,n);let o="0.0";null!=r&&(i.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="1.0";null!=a&&(i.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Ka{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],i.backend_util.assertAndGetBroadcastShape(e,t),i.backend_util.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=r&&(i.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=a&&(i.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const qa={kernelName:i.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:o,scale:u}=e;i.util.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.util.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.util.assert(null==u||a.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[r,a,s];let h=null;null!=o&&(h=o.shape,c.push(o));let p=null;null!=u&&(p=u.shape,c.push(u));const d=(0,i.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Ka(r.shape,a.shape,s.shape,h,p,l):new ja(r.shape,a.shape,s.shape,h,p,l);return t.runWebGLProgram(d,c,c[0].dtype)}};class Xa{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Ee(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Ya.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Ya[t]} = start[${t}] + coords.${Ya[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Ya=["x","y","z","w","u","v"];class Qa{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Ee(this.rank),n=or("coords",this.rank),r=or("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function Za(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:o}=r,[u,l]=i.slice_util.parseSliceParams(a,s,o);if(i.slice_util.assertParamsValid(a,u,l),0===i.util.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=jn(e.values,u,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),h=i.slice_util.isSliceContinous(a.shape,u,l);if(c||!h){const e=(0,i.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Qa(l):new Xa(l),t=[u];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),o=r.texData.get(s.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let u=i.slice_util.computeFlatOffset(t,i.util.computeStrides(e.shape));a.slice&&(u+=a.slice.flatOffset),o.slice={flatOffset:u,origDataId:a.slice&&a.slice.origDataId||e.dataId};const l=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,l+1),s}(a,u,l,n)}const Ja={kernelName:i.Slice,backendName:"webgl",kernelFunc:Za},es={kernelName:i.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:o}=r;i.util.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=s.reduce(((e,t)=>e*t)),l=i.backend_util.getReshaped(a.shape,s,u),c=i.backend_util.getPermuted(l.length,s.length),h=i.backend_util.getReshapedPermuted(a.shape,s,u),p=i.backend_util.getSliceBeginCoords(o,s.length),d=i.backend_util.getSliceSize(h,o,s.length),f=[],m=jr({inputs:{x:a},backend:n,attrs:{shape:l}}),g=na({inputs:{x:m},backend:n,attrs:{perm:c}}),y=jr({inputs:{x:g},backend:n,attrs:{shape:h}}),b=Za({inputs:{x:y},backend:n,attrs:{begin:p,size:d}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},ts={kernelName:i.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=xn(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},ns={kernelName:i.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),o=n.readSync(a.dataId),u=i.backend_util.assertAndGetBroadcastShape(Array.from(s),Array.from(o));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}},rs=Br({opSnippet:"return float(a != b);",cpuKernelImpl:zn,dtype:"bool"}),as={kernelName:i.NotEqual,backendName:"webgl",kernelFunc:rs};function ss(e){const{inputs:t,backend:n}=e,{input:r}=t;return Cr({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const is={kernelName:i.Real,backendName:"webgl",kernelFunc:ss},os={kernelName:i.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===s.dtype)return Cr({inputs:{x:s},backend:r});const t=i.zeros(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=_r({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=ss({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!i.util.hasEncodingLoss(s.dtype,o)){const e=Cr({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new fr(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",i.util.getTypedArrayFromDType("bool",1)),t=rs({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}},us="return ceil(x);",ls=Pr({opSnippet:us,packedOpSnippet:us,cpuKernelImpl:wn}),cs={kernelName:i.Ceil,backendName:"webgl",kernelFunc:ls};class hs{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class ps{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const ds={kernelName:i.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:o}=r;let u;u=(0,i.env)().getBool("WEBGL_PACK_CLIP")?new ps(a.shape):new hs(a.shape);const l=[[s],[o]];return n.runWebGLProgram(u,[a],a.dtype,l)}};class fs{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function ms(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const gs={kernelName:i.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new fs(r.shape),i=[ms(r,a.complexTensorInfos.real),ms(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class ys{constructor(e){this.outputShape=[],this.outputShape=i.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class bs{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=i.backend_util.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=Ee(r),s=or("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let n=1;n<u.length;n++)u[n]=u[n-1]+e[n][t];const l=o[t],c=o.slice(-2),h=o.join();let p=`if (${l} < ${u[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${c.join()}));\n        }`;for(let e=1;e<u.length;e++){const t=u[e-1];p+=`\n        if (${l} < ${u[e]}  && ${l} >= ${u[e-1]}) {\n          return getChannel(\n            getT${e}(${xs(o,l,t)}),\n            vec2(${xs(c,l,t)}));\n        }`}const d=u.length,f=u[u.length-1];p+=`\n        return getChannel(\n          getT${d}(${xs(o,l,f)}),\n          vec2(${xs(c,l,f)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function xs(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function vs(e){const{inputs:t,backend:n}=e,{input:r}=t;return Cr({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const ws={kernelName:i.Imag,backendName:"webgl",kernelFunc:vs};function ks(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>ss({inputs:{input:e},backend:n}))),a=e.map((e=>vs({inputs:{input:e},backend:n}))),s=ks(r,t,n),i=ks(a,t,n),o=_r({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=i.util.sizeFromShape(e.shape.slice(t));return jr({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=i.backend_util.computeOutShape(a.map((e=>e.shape)),1),u=1===a[0].shape[0],l=kn(s,o,r,u),c=i.backend_util.computeOutShape(e.map((e=>e.shape)),t),h=n.makeTensorInfo(c,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}if(e.length>(0,i.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=ks(e.slice(0,r),t,n),s=ks(e.slice(r),t,n),i=ks([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if((0,i.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new bs(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:o}=function(e,t,n){const r=i.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>jr({inputs:{x:e},attrs:{shape:[-1,i.util.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),u=new ys(s.map((e=>e.shape))),l=n.runWebGLProgram(u,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=jr({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function Is(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=i.util.parseAxisParam(a,t[0].shape)[0],o=i.backend_util.computeOutShape(t.map((e=>e.shape)),s);if(0===i.util.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>i.util.sizeFromShape(e.shape)>0));if(1===u.length)return Cr({inputs:{x:u[0]},backend:n});const l=u.map((e=>e.shape));return i.backend_util.assertParamsConsistent(l,s),ks(u,s,n)}const Ss={kernelName:i.Concat,backendName:"webgl",kernelFunc:Is};class Ns{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class Ts{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $s{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Oe(this.outputShape.length);const{dataFormat:n}=t,r=fe(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function Cs({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape,c=r.texData.get(e.dataId),h=n.inChannels,p=l[0]*l[1]*l[2],d=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[];if((1!==p&&1!==d||!(h>1e3))&&c.isPacked&&f&&null!=c.texture&&l[2]%2!=0&&i.util.arraysEqual(c.shape.slice(-3),l.slice(-3))){const h=l[0]*l[1]*(l[2]+1),p={dataId:e.dataId,shape:[1,h,n.inChannels],dtype:e.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,i.util.assert(Z(c.shape,p.shape),(()=>`packed reshape ${c.shape} to ${p.shape} isn't free`));const f=jr({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(f);const y=aa({a:p,b:f,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:u,preluActivationWeights:s,leakyreluAlpha:o}),b=r.texData.get(y.dataId);i.util.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,b.shape=n.outShape,m=Cr({inputs:{x:y},backend:r}),m.shape=n.outShape,g.push(y)}else{const i=jr({inputs:{x:e},backend:r,attrs:{shape:[1,f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=jr({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=aa({a:i,b:c,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:u,preluActivationWeights:s,leakyreluAlpha:o});m=jr({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(i),g.push(c),g.push(h)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function Es({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:u=null}){const{filterWidth:l,filterHeight:c,inChannels:h,outWidth:p,outHeight:d,dataFormat:f}=n,m="channelsLast"===f,g=l*c*h,y=d*p,b=[g,y],x=[],v=jr({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=jr({inputs:{x:t},backend:r,attrs:{shape:[1,g,i.util.sizeFromShape(t.shape)/g]}});x.push(v),x.push(w);const k=new $s(b,n),I=[v.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=r.runWebGLProgram(k,[v],"float32",I),N=jr({inputs:{x:S},backend:r,attrs:{shape:[1,b[0],b[1]]}});x.push(S),x.push(N);const T=null!=a,$=null!=s,C="leakyrelu"===u,E=u?zr(u,!0):null,_=new Vr(N.shape,w.shape,[1,y,n.outChannels],!0,!1,T,E,$,C),A=[N,w];if(a&&A.push(a),$&&A.push(s),C){const e=r.makeTensorInfo([],"float32",i.util.createScalarValue(o,"float32"));A.push(e),x.push(e)}const R=r.runWebGLProgram(_,A,"float32"),F=jr({inputs:{x:R},backend:r,attrs:{shape:m?[1,d,p,n.outChannels]:[1,n.outChannels,d,p]}});x.push(R);for(const e of x)r.disposeIntermediateTensorInfo(e);return F}const _s={kernelName:i.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:h}=r,p=i.backend_util.convertConv2DDataFormat(l),d=i.backend_util.computeConv2DInfo(a.shape,s.shape,o,c,u,h,!1,p);let f;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if((0,i.env)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])f=Es({x:a,filter:s,convInfo:d,backend:n});else{const e=new Ns(d);f=n.runWebGLProgram(e,[a,s],"float32")}else f=Cs({x:a,filter:s,convInfo:d,backend:n});const m=jr({inputs:{x:f},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class As{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Rs{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Fs{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Os{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ds={kernelName:i.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:h}=r,p=i.backend_util.convertConv2DDataFormat(l),d=i.backend_util.computeConv2DInfo(a.shape,h,o,1,u,c,!1,p),f=new As(d);return n.runWebGLProgram(f,[a,s],"float32")}},Ms={kernelName:i.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:o,strides:u,pad:l,dataFormat:c,dimRoundingMode:h}=r,p=i.backend_util.convertConv2DDataFormat(c),d=i.backend_util.computeConv2DInfo(o,s.shape,u,1,l,h,!1,p),f=new Rs(d);return n.runWebGLProgram(f,[a,s],"float32")}},Ls={kernelName:i.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:u,dilations:l}=r,c=i.backend_util.computeConv3DInfo(a.shape,s.shape,o,l,u),h=new Ts(c);return n.runWebGLProgram(h,[a,s],"float32")}},Ps={kernelName:i.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,pad:u,filterShape:l}=r,c=i.backend_util.computeConv3DInfo(a.shape,l,o,1,u),h=new Fs(c);return n.runWebGLProgram(h,[a,s],"float32")}},Bs={kernelName:i.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:o,strides:u,inputShape:l}=r,c=i.backend_util.computeConv3DInfo(l,s.shape,u,1,o),h=new Os(c);return n.runWebGLProgram(h,[a,s],"float32")}},zs=Pr({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),Vs={kernelName:i.Cos,backendName:"webgl",kernelFunc:zs},Ws=Pr({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Us={kernelName:i.Cosh,backendName:"webgl",kernelFunc:Ws};class Gs{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Hs={kernelName:i.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new Gs(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}};class js{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${Ks(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Ee(r)} coords = getOutputCoords();\n        int end = ${qs(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${qs(r,"coords")} = idx;\n          val += getX(${Ks(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function Ks(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function qs(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const Xs={kernelName:i.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:o,reverse:u}=r,l=a.shape.length,c=i.backend_util.getAxesPermutation([s],l);let h=a;null!=c&&(h=na({inputs:{x:a},backend:n,attrs:{perm:c}}));const p=i.backend_util.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const d=h.shape[p];let f=Cr({inputs:{x:h},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new js(h.shape,!1,u),r=[[e]],a=f;f=n.runWebGLProgram(t,[f],f.dtype,r),n.disposeIntermediateTensorInfo(a)}if(o){const e=new js(h.shape,o,u),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=na({inputs:{x:f},backend:n,attrs:{perm:i.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(h),e}return f}},Ys={kernelName:i.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=xn(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=vn(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class Qs{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Zs={kernelName:i.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h=new Qs("NHWC"===i?[o,u,l,c]:[o,c,u,l],s,i);return n.runWebGLProgram(h,[a],a.dtype)}};class Js{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Oe(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class ei{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Oe(this.outputShape.length);const s=e.outChannels/e.inChannels,o=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,p=h;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<h;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let e=0;e<h;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(p+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===u){if(t<h&&(o%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<h)){const e=o%2==0?i.util.nearestLargerEven(l):l;l%2==0&&o%2==1||l%2!=0&&o%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,l>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<h&&(o%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<h&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<h&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<h&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<h&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let f="",m="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const ti={kernelName:i.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:u,dilations:l,dimRoundingMode:c}=r;let h=l;null==h&&(h=[1,1]),i.util.assert(i.backend_util.eitherStridesOrDilationsAreOne(o,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`));const p=i.backend_util.computeConv2DInfo(a.shape,s.shape,o,h,u,c,!0);let d;d=(0,i.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new ei(p):new Js(p);const f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(d,[a,s],"float32",f)}};class ni{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ri{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ai={kernelName:i.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,filterShape:h}=r,p=i.backend_util.computeConv2DInfo(a.shape,h,o,u,l,c,!0),d=new ni(p);return n.runWebGLProgram(d,[a,s],"float32")}},si={kernelName:i.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,inputShape:h}=r,p=i.backend_util.computeConv2DInfo(h,s.shape,o,u,l,c,!0),d=new ri(p);return n.runWebGLProgram(d,[a,s],"float32")}};class ii{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const oi={kernelName:i.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=i.util.sizeFromShape(r.shape),o=jr({inputs:{x:r},backend:n,attrs:{shape:[s]}}),u=new ii(s),l=n.runWebGLProgram(u,[o],o.dtype),c=jr({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}};class ui{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const li={kernelName:i.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:u,dilations:l}=r,c=i.backend_util.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",l);let h;const p=new ui(c);h=n.runWebGLProgram(p,[a,s],"float32");const d=jr({inputs:{x:h},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(h),d}},ci={kernelName:i.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:o,summedDims:u,idDims:l}=i.backend_util.decodeEinsumEquation(a,s.length);i.backend_util.checkEinsumDimSizes(o.length,l,s);const{path:c,steps:h}=i.backend_util.getEinsumComputePath(u,l),p=h.length;let d=null,f=o.length;const m=[];for(let e=0;e<p;++e){for(const t of h[e]){const{permutationIndices:e,expandDims:r}=i.backend_util.getEinsumPermutation(f,l[t]);let a;i.backend_util.isIdentityPermutation(e)?a=s[t]:(a=na({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),m.push(a));const o=a.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);i.util.arraysEqual(a.shape,o)||(a=jr({inputs:{x:a},backend:n,attrs:{shape:o}}),m.push(a)),null===d?d=a:(d=Gr({inputs:{a,b:d},backend:n}),m.push(d))}e<p-1&&(c[e]>=0&&(d=ea({inputs:{x:d},backend:n,attrs:{axis:c[e]-(o.length-f),keepDims:!1}}),m.push(d)),f--)}for(const e of m)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},hi=Pr({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),pi={kernelName:i.Elu,backendName:"webgl",kernelFunc:hi},di={kernelName:i.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=(0,i.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $r("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new Tr("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},fi=Br({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:In}),mi={kernelName:i.Equal,backendName:"webgl",kernelFunc:fi},gi=Pr({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${i.backend_util.ERF_P};\n  float a1 = ${i.backend_util.ERF_A1};\n  float a2 = ${i.backend_util.ERF_A2};\n  float a3 = ${i.backend_util.ERF_A3};\n  float a4 = ${i.backend_util.ERF_A4};\n  float a5 = ${i.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),yi={kernelName:i.Erf,backendName:"webgl",kernelFunc:gi},bi="return exp(x);",xi=Pr({opSnippet:bi,packedOpSnippet:bi,cpuKernelImpl:Sn,dtype:"float32"}),vi={kernelName:i.Exp,backendName:"webgl",kernelFunc:xi};function wi(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,o=s.shape.length,u=s.shape.slice();let l=a;return a<0&&(i.util.assert(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+a+1),u.splice(l,0,1),jr({inputs:{x:s},backend:r,attrs:{shape:u}})}const ki={kernelName:i.ExpandDims,backendName:"webgl",kernelFunc:wi},Ii="return exp(x) - 1.0;",Si=Pr({opSnippet:Ii,packedOpSnippet:Ii,cpuKernelImpl:Nn}),Ni={kernelName:i.Expm1,backendName:"webgl",kernelFunc:Si};class Ti{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function $i(e,t,n){const r=n.texData.get(e.dataId),a=i.util.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],o=jr({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),u=o.shape,l=new Ti("real",u,t),c=new Ti("imag",u,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],p=n.runWebGLProgram(l,h,"float32"),d=n.runWebGLProgram(c,h,"float32"),f=_r({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);const m=jr({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const Ci={kernelName:i.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return $i(r,!1,n)}};class Ei{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function _i(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||i.util.inferDtype(a),"string"===s){const e=i.util.getArrayFromDType(s,i.util.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new Ei(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}const Ai={kernelName:i.Fill,backendName:"webgl",kernelFunc:_i};class Ri{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Fi={kernelName:i.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new Ri(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},Oi="return floor(x);",Di=Pr({opSnippet:Oi,packedOpSnippet:Oi,cpuKernelImpl:Tn}),Mi={kernelName:i.Floor,backendName:"webgl",kernelFunc:Di},Li=Br({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Pi={kernelName:i.FloorDiv,backendName:"webgl",kernelFunc:Li};class Bi{constructor(e){this.variableNames=["A"];const t=fe(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class zi{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=fe(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Vi={kernelName:i.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,o="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,c]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],h=[c,l],d=[c,l,s];(u||o)&&(null==Wi&&(Wi=document.createElement("canvas").getContext("2d")),Wi.canvas.width=l,Wi.canvas.height=c,Wi.drawImage(a,0,0,l,c),a=Wi.canvas);const f=n.makeTensorInfo(h,"int32");n.texData.get(f.dataId).usage=p.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),a);const m=(0,i.env)().getBool("WEBGL_PACK")?new zi(d):new Bi(d),g=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),g}};let Wi;const Ui={kernelName:i.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dataFormat:h,dilations:p,dimRoundingMode:d,activation:f,leakyreluAlpha:m}=r,g=i.backend_util.convertConv2DDataFormat(h),y=i.backend_util.computeConv2DInfo(a.shape,s.shape,l,p,c,d,!1,g);let b;const x=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if((0,i.env)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])b=Es({x:a,filter:s,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=null!=o,t=null!=u,r="leakyrelu"===f,l=f?zr(f,!1):null,c=new Ns(y,e,l,t,r),h=[a,s];if(o&&h.push(o),u&&h.push(u),r){const e=n.makeTensorInfo([],"float32",i.util.createScalarValue(m,"float32"));h.push(e),x.push(e)}b=n.runWebGLProgram(c,h,"float32")}else b=Cs({x:a,filter:s,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const v=jr({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},Gi={kernelName:i.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=[];let g=h;null==g&&(g=[1,1]),i.util.assert(i.backend_util.eitherStridesOrDilationsAreOne(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const y=i.backend_util.computeConv2DInfo(a.shape,s.shape,l,g,c,p,!0),b=(0,i.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=d?zr(d,b):null,v=[a,s],w=null!=o,k=null!=u,I="leakyrelu"===d;if(w&&v.push(o),k&&v.push(u),I){const e=n.makeTensorInfo([],"float32",i.util.createScalarValue(f,"float32"));v.push(e),m.push(e)}let S;S=b?new ei(y,w,x,k,I):new Js(y,w,x,k,I);const N=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],T=n.runWebGLProgram(S,v,"float32",N);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}};class Hi{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=Ee(t.length),a=Ee(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const ji={kernelName:i.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,o=s[s.length-1],u=i.util.sizeFromShape(r.shape),[l,c,h,p]=i.backend_util.prepareAndValidate(r,a),d=jr({inputs:{x:a},backend:n,attrs:{shape:[c,o]}}),f=jr({inputs:{x:r},backend:n,attrs:{shape:[i.util.sizeFromShape(r.shape)/h,h]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=$n(e,t,r.dtype,c,o,h,p,r.shape,u);return n.makeTensorInfo(l,r.dtype,s.values)}const m=new Hi(o,p,[c,h]),g=n.runWebGLProgram(m,[f,d],f.dtype),y=jr({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class Ki{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Ee(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function qi(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:o,batchDims:u}=r,l=i.util.parseAxisParam(o,a.shape)[0],c=n.readSync(s.dataId),h=a.shape[l];for(let e=0;e<c.length;++e){const t=c[e];i.util.assert(t<=h-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${h-1}]`))}const p=i.backend_util.segment_util.collectGatherOpShapeInfo(a,s,l,u),d=i.util.sizeFromShape(s.shape),f=[],m=jr({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=jr({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}});f.push(m),f.push(g);const y=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(g),t=n.bufferSync(m),r=Cn(t,e,y);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p.outputShape,r.dtype,r.values)}const b=new Ki(m.shape,y),x=n.runWebGLProgram(b,[m,g],m.dtype);f.push(x);const v=jr({inputs:{x},backend:n,attrs:{shape:p.outputShape}});return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}const Xi={kernelName:i.GatherV2,backendName:"webgl",kernelFunc:qi},Yi=Br({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:En,dtype:"bool"}),Qi={kernelName:i.Greater,backendName:"webgl",kernelFunc:Yi},Zi=Br({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:_n}),Ji={kernelName:i.GreaterEqual,backendName:"webgl",kernelFunc:Zi},eo={kernelName:i.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return $i(r,!0,n)}},to=Pr({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),no={kernelName:i.IsFinite,backendName:"webgl",kernelFunc:to},ro=Pr({opSnippet:"return float(isinf(x));",dtype:"bool"}),ao={kernelName:i.IsInf,backendName:"webgl",kernelFunc:ro},so=Pr({opSnippet:"return float(isnan(x));",dtype:"bool"}),io={kernelName:i.IsNan,backendName:"webgl",kernelFunc:so},oo=Br({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:An,dtype:"bool"}),uo={kernelName:i.Less,backendName:"webgl",kernelFunc:oo},lo=Br({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Rn,dtype:"bool"}),co={kernelName:i.LessEqual,backendName:"webgl",kernelFunc:lo},ho={kernelName:i.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=Fn(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},po=Pr({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:On}),fo={kernelName:i.Log,backendName:"webgl",kernelFunc:po},mo=Pr({opSnippet:"return log(1.0 + x);"}),go={kernelName:i.Log1p,backendName:"webgl",kernelFunc:mo},yo=Br({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),bo={kernelName:i.LogicalAnd,backendName:"webgl",kernelFunc:yo},xo=Pr({opSnippet:"return float(!(x >= 1.0));"}),vo={kernelName:i.LogicalNot,backendName:"webgl",kernelFunc:xo},wo=Br({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),ko={kernelName:i.LogicalOr,backendName:"webgl",kernelFunc:wo};class Io{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class So{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const No={kernelName:i.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:o,alpha:u,beta:l}=r,c=(0,i.env)().getBool("WEBGL_PACK_NORMALIZATION")?new So(a.shape,s,o,u,l):new Io(a.shape,s,o,u,l);return n.runWebGLProgram(c,[a],a.dtype)}};class To{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const $o={kernelName:i.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new To(a.shape,o,u,l,c);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function Co(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:o}=r,u=a.shape.length,l=i.util.parseAxisParam(s,a.shape);let c=l;const h=i.backend_util.getAxesPermutation(c,u),p=null!=h,d=n.shouldExecuteOnCPU([a]);let f=a;if(p){if(d){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=a.shape[h[e]];const r=ar(e,a.shape,a.dtype,h,t);f=n.makeTensorInfo(t,a.dtype),n.texData.get(f.dataId).values=r}else f=Jr(a,h,n);c=i.backend_util.getInnerMostAxes(c.length,u)}i.backend_util.assertAxesAreInnerMostDims("max",c,u);const[m,g]=i.backend_util.computeOutAndReduceShapes(f.shape,c);let y,b=m;if(o&&(b=i.backend_util.expandShapeToKeepDim(m,l)),d){const e=n.texData.get(f.dataId).values,t=Dn(e,i.util.sizeFromShape(g),b,a.dtype);y=n.makeTensorInfo(b,a.dtype),n.texData.get(y.dataId).values=t}else y=function(e,t,n,r){const a=i.util.sizeFromShape(t),s=jr({inputs:{x:e},attrs:{shape:[i.util.sizeFromShape(e.shape)/a,a]},backend:r}),o=Yr(s,e.dtype,"max",r),u=jr({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),u}(f,g,b,n);return p&&n.disposeIntermediateTensorInfo(f),y}const Eo={kernelName:i.Max,backendName:"webgl",kernelFunc:Co},_o=Br({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Mn}),Ao={kernelName:i.Maximum,backendName:"webgl",kernelFunc:_o},Ro={kernelName:i.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;pe(a,"maxPool");const{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=r;i.util.assert(i.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=i.backend_util.computePool2DInfo(a.shape,s,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&i.util.arraysEqual(c.inShape,c.outShape))return Cr({inputs:{x:a},backend:n});const h=new La(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},Fo={kernelName:i.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=i.backend_util.computePool3DInfo(a.shape,s,o,[1,1,1],u,c,l),p=new Pa(h,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};class Oo{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Do{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Mo={kernelName:i.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s,{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=i.backend_util.computePool3DInfo(o.shape,u,l,[1,1,1],c,h),d=new Pa(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new Do(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},Lo={kernelName:i.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:o}=t,u=s;pe([s,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:h,dimRoundingMode:p}=r,d=i.backend_util.computePool2DInfo(u.shape,l,c,1,h,p),f=new La(d,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),g=new Oo(d),y=n.runWebGLProgram(g,[a,m],u.dtype);return n.disposeIntermediateTensorInfo(m),y}},Po={kernelName:i.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:o,includeBatchInIndex:u}=t,l=n;i.util.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];i.util.assert(i.backend_util.eitherStridesOrDilationsAreOne(s,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`));const h=i.backend_util.computePool2DInfo(r.shape,a,s,c,o),[p,d]=function(e,t,n,r){let a=new La(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new La(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,u,h,l);return[p,d]}},Bo={kernelName:i.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,o=n,u=r.shape.length,l=i.util.parseAxisParam(s,r.shape);let c=l;const h=i.backend_util.getAxesPermutation(c,u),p=null!=h,d=o.shouldExecuteOnCPU([r]),f=[];let m=r;if(p){if(d){const e=o.texData.get(m.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=r.shape[h[e]];const n=ar(e,r.shape,r.dtype,h,t);m=o.makeTensorInfo(t,r.dtype),o.texData.get(m.dataId).values=n}else m=Jr(r,h,o);f.push(m),c=i.backend_util.getInnerMostAxes(c.length,u)}i.backend_util.assertAxesAreInnerMostDims("sum",c,u);const[g,y]=i.backend_util.computeOutAndReduceShapes(m.shape,c);let b=g;a&&(b=i.backend_util.expandShapeToKeepDim(g,l));const x=function(e,t,n,r){const a=i.util.sizeFromShape(t),s=jr({inputs:{x:e},attrs:{shape:[i.util.sizeFromShape(e.shape)/a,a]},backend:r}),o=Yr(s,"float32","mean",r),u=jr({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),u}(m,y,b,o);for(const e of f)o.disposeIntermediateTensorInfo(e);return x}},zo={kernelName:i.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,u=a.shape.length,l=i.util.parseAxisParam(s,a.shape);let c=l;const h=i.backend_util.getAxesPermutation(c,u);let p=a;null!=h&&(p=na({inputs:{x:a},backend:n,attrs:{perm:h}}),c=i.backend_util.getInnerMostAxes(c.length,a.shape.length)),i.backend_util.assertAxesAreInnerMostDims("min",c,u);const[d,f]=i.backend_util.computeOutAndReduceShapes(p.shape,c),m=jr({inputs:{x:p},backend:n,attrs:{shape:[-1,i.util.sizeFromShape(f)]}}),g=Yr(m,m.dtype,"min",n);let y;return y=jr(o?{inputs:{x:g},backend:n,attrs:{shape:i.backend_util.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),y}},Vo=Br({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Ln}),Wo={kernelName:i.Minimum,backendName:"webgl",kernelFunc:Vo};class Uo{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Ee(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Go{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Ee(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=or("rc",r),u=or("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Ho={kernelName:i.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,o=(0,i.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Go(r.shape,a,s):new Uo(r.shape,a,s);return t.runWebGLProgram(o,[r],r.dtype)}},jo=Br({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Ko={kernelName:i.Mod,backendName:"webgl",kernelFunc:jo};class qo{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const Xo=Br({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Yo={kernelName:i.RealDiv,backendName:"webgl",kernelFunc:Xo},Qo="return a - b;",Zo=Br({opSnippet:Qo,packedOpSnippet:Qo,supportsComplex:!0,cpuKernelImpl:tr}),Jo={kernelName:i.Sub,backendName:"webgl",kernelFunc:Zo};function eu(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,o=i.util.parseAxisParam([s],a.shape),u=Co({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=i.backend_util.expandShapeToKeepDim(u.shape,o),c=jr({inputs:{x:u},backend:n,attrs:{shape:l}}),h=Zo({inputs:{a,b:c},backend:n}),p=xi({inputs:{x:h},backend:n}),d=ea({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),f=jr({inputs:{x:d},backend:n,attrs:{shape:l}}),m=Xo({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}const tu={kernelName:i.Softmax,backendName:"webgl",kernelFunc:eu},nu={kernelName:i.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:eu({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new qo(l,c,s),p=[[i]],d=n.runWebGLProgram(h,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),d}},ru="return -x;",au={kernelName:i.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=Bn(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=(0,i.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new yr(r.shape,ru):new fr(r.shape,ru),n.runWebGLProgram(a,[r],r.dtype)}},su=i.kernel_impls.nonMaxSuppressionV3Impl,iu={kernelName:i.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){i.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p}=su(c,h,o,u,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},ou=i.kernel_impls.nonMaxSuppressionV4Impl,uu={kernelName:i.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){i.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,padToMaxOutputSize:c}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:d,validOutputs:f}=ou(h,p,o,u,l,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},lu=i.kernel_impls.nonMaxSuppressionV5Impl,cu={kernelName:i.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){i.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),d=o,f=u,m=l,g=c,{selectedIndices:y,selectedScores:b}=lu(h,p,d,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class hu{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const pu={kernelName:i.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:o,offValue:u}=r,l=i.util.sizeFromShape(a.shape),c=new hu(l,s,o,u),h=jr({inputs:{x:a},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(c,[h],a.dtype);n.disposeIntermediateTensorInfo(h);const d=jr({inputs:{x:p},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(p),d}};function du(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=ss({inputs:{input:r},backend:n}),t=du({inputs:{x:e},backend:n}),a=vs({inputs:{input:r},backend:n}),s=du({inputs:{x:a},backend:n}),i=_r({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return _i({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const fu={kernelName:i.ZerosLike,backendName:"webgl",kernelFunc:du},mu={kernelName:i.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=ss({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=vs({inputs:{input:a},backend:r}),i=du({inputs:{x:s},backend:r}),o=_r({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return _i({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},gu={kernelName:i.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return wi({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{i.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),i.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=Is({inputs:t.map((e=>{const t=wi({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class yu{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Ee(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class bu{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Ee(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=or("rc",r),u=or("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const xu=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:o}=r;if(0===i.util.sizeFromShape(a.shape))return _i({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:o,dtype:a.dtype}});const u=(0,i.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bu(a.shape,s,o):new yu(a.shape,s,o),l=[[o]];return n.runWebGLProgram(u,[a],a.dtype,l)},vu={kernelName:i.PadV2,backendName:"webgl",kernelFunc:xu},wu=Br({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),ku={kernelName:i.Pow,backendName:"webgl",kernelFunc:wu},Iu={kernelName:i.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,u=a.shape.length,l=[],c=i.util.parseAxisParam(s,a.shape);let h=c;const p=i.backend_util.getAxesPermutation(h,u);let d,f=a;if(null!=p&&(f=na({inputs:{x:a},backend:n,attrs:{perm:p}}),h=i.backend_util.getInnerMostAxes(h.length,u),l.push(f)),i.backend_util.assertAxesAreInnerMostDims("prod",h,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=Vn(f.shape,f.dtype,e,h);d=n.makeTensorInfo(r,a,t)}else{const[e,t]=i.backend_util.computeOutAndReduceShapes(f.shape,h),r=i.util.sizeFromShape(t),s=jr({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),o=Yr(s,(0,i.sumOutType)(a.dtype),"prod",n);d=jr({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(s),l.push(o)}if(o){l.push(d);const e=i.backend_util.expandShapeToKeepDim(d.shape,c);d=jr({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Su=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=Wn(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},Nu={kernelName:i.Range,backendName:"webgl",kernelFunc:Su},Tu=Pr({opSnippet:"return 1.0 / x;"}),$u={kernelName:i.Reciprocal,backendName:"webgl",kernelFunc:Tu},Cu=Pr({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Eu={kernelName:i.Relu,backendName:"webgl",kernelFunc:Cu},_u=Pr({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Au={kernelName:i.Relu6,backendName:"webgl",kernelFunc:_u};class Ru{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Fu{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Ou={kernelName:i.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:o,size:u}=r,[l,c]=u,h=(0,i.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Fu(a.shape,l,c,s,o):new Ru(a.shape,l,c,s,o);return n.runWebGLProgram(h,[a],"float32")}};class Du{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Mu={kernelName:i.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Du(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class Lu{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Pu{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const Bu={kernelName:i.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:o,size:u}=r,[l,c]=u,h=(0,i.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Pu(a.shape,l,c,s,o):new Lu(a.shape,l,c,s,o);return n.runWebGLProgram(h,[a],a.dtype)}};class zu{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Vu={kernelName:i.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new zu(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class Wu{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=Ee(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Uu{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=or("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Ee(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Gu={kernelName:i.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,o=a.shape.length,u=i.util.parseAxisParam(s,a.shape);if(0===o)return Cr({inputs:{x:a},backend:n});const l=(0,i.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Uu(a.shape,u):new Wu(a.shape,u);return n.runWebGLProgram(l,[a],a.dtype)}};class Hu{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const ju={kernelName:i.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:o}=t,u=n,l=new Hu(r.shape,s),[c,h]=i.backend_util.getImageCenter(o,r.shape[1],r.shape[2]),p=[[c,h,Math.sin(a),Math.cos(a)]];return u.runWebGLProgram(l,[r],r.dtype,p)}},Ku=Pr({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),qu={kernelName:i.Round,backendName:"webgl",kernelFunc:Ku},Xu=Pr({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Un}),Yu={kernelName:i.Rsqrt,backendName:"webgl",kernelFunc:Xu};class Qu{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=Ee(a.length),u=Ee(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const Zu={kernelName:i.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=i.backend_util.calculateShapes(s,a,o),d=[p/c,c];if(0===p)return n.makeTensorInfo(o,a.dtype);const f=jr({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=jr({inputs:{x:s},backend:n,attrs:{shape:[l,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new Qu(l,u,f.shape.length,m.shape.length,h,d),b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=jr({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class Ju{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=Ee(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const el={kernelName:i.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,o=new Ju(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(o,[r,a,s],(0,i.upcastType)(a.dtype,s.dtype))}},tl=Pr({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${i.backend_util.SELU_SCALEALPHA};\n  float scale = ${i.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),nl={kernelName:i.Selu,backendName:"webgl",kernelFunc:tl},rl="return 1.0 / (1.0 + exp(-1.0 * x));",al=Pr({opSnippet:rl,packedOpSnippet:rl,cpuKernelImpl:Gn}),sl={kernelName:i.Sigmoid,backendName:"webgl",kernelFunc:al},il=Pr({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),ol={kernelName:i.Sign,backendName:"webgl",kernelFunc:il},ul=Pr({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),ll={kernelName:i.Sin,backendName:"webgl",kernelFunc:ul},cl=Pr({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),hl={kernelName:i.Sinh,backendName:"webgl",kernelFunc:cl},pl=Pr({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),dl={kernelName:i.Softplus,backendName:"webgl",kernelFunc:pl},fl={kernelName:i.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:o}=r;i.util.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...o);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);const c=[],h=xu({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=i.backend_util.getReshaped(h.shape,s,u,!1),d=i.backend_util.getPermuted(p.length,s.length,!1),f=i.backend_util.getReshapedPermuted(h.shape,s,u,!1),m=jr({inputs:{x:h},backend:n,attrs:{shape:p}}),g=na({inputs:{x:m},backend:n,attrs:{perm:d}}),y=jr({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(h),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},ml={kernelName:i.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=Kn(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},gl={kernelName:i.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,h]=qn(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},yl={kernelName:i.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Xn(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},bl={kernelName:i.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Xn(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},xl={kernelName:i.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:o}=t,{outputShape:u}=r,{sliceRank:l,numUpdates:c,strides:h,outputSize:p}=i.backend_util.calculateShapes(s,a,u),d=new Qu(c,l,a.shape.length,s.shape.length,h,[p,1],!1),f=n.runWebGLProgram(d,[s,a,o],s.dtype),m=jr({inputs:{x:f},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(f),m}},vl={kernelName:i.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:o}=r,u=i.util.parseAxisParam(o,a.shape)[0],l=i.backend_util.prepareSplitSize(a,s,u),c=a.shape.length,h=new Array(c).fill(0),p=a.shape.slice();return l.map((e=>{const t=[...p];t[u]=e;const r=Za({inputs:{x:a},backend:n,attrs:{begin:h,size:t}});return h[u]+=e,r}))}},wl="return sqrt(x);",kl=Pr({opSnippet:wl,packedOpSnippet:wl,cpuKernelImpl:Yn}),Il={kernelName:i.Sqrt,backendName:"webgl",kernelFunc:kl},Sl=Pr({opSnippet:"return x * x;"}),Nl={kernelName:i.Square,backendName:"webgl",kernelFunc:Sl},Tl="return (a - b) * (a - b);",$l=Br({opSnippet:Tl,packedOpSnippet:Tl}),Cl={kernelName:i.SquaredDifference,backendName:"webgl",kernelFunc:$l},El={kernelName:i.Step,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new fr(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class _l{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=Ee(n.length),s=Ee(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const Al={kernelName:i.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:o,strides:u,beginMask:l,endMask:c,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=i.slice_util.sliceInfo(a.shape,s,o,u,l,c,h,p,d);let k;if(g)k=jr({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||b){i.util.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=i.slice_util.computeOutShape(x,v,w),t=Za({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});k=jr({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=(0,i.buffer)(a.shape,a.dtype,e),r=Qn(f,t,w,x);k=n.makeTensorInfo(m,a.dtype,r.values)}else{const e=new _l(x,w,f);k=n.runWebGLProgram(e,[a],a.dtype)}const I=jr({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),I}},Rl={kernelName:i.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=Zn(p,d,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},Fl={kernelName:i.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=Jn(o,u,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},Ol={kernelName:i.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=er(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},Dl=Pr({opSnippet:"return tan(x);"}),Ml={kernelName:i.Tan,backendName:"webgl",kernelFunc:Dl},Ll=Pr({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Pl={kernelName:i.Tanh,backendName:"webgl",kernelFunc:Ll};class Bl{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=Ee(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function zl(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>i.util.decodeString(e))):e,r=(0,i.buffer)(a.shape,a.dtype,t),o=nr(r,s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new Bl(a.shape,s);return n.runWebGLProgram(o,[a],a.dtype)}const Vl={kernelName:i.Tile,backendName:"webgl",kernelFunc:zl};class Wl{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Ul{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Gl(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Hl(e){let t=1;for(;t<e;)t*=2;return t}const jl={kernelName:i.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:o}=r,u=(0,i.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,i.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=a.shape,h=c[c.length-1];if(n.shouldExecuteOnCPU([a])||h<u||s>l){const e=n.readSync(a.dataId),[t,r]=rr(e,c,a.dtype,s,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return c[c.length-1]=0,[n.makeTensorInfo(c,a.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===h)return[a,_i({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const p=n.texData.get(a.dataId),d=null!==p&&p.isPacked,f=d?n.unpackTensor(a):a,m=i.util.sizeFromShape(c)/h,g=jr({inputs:{x:f},attrs:{shape:[m,h]},backend:n});d&&Gl(n,f);const y=Hl(s),b=Hl(h);let x=null;const v=()=>null===x?[g,g]:[g,x],w=(e,t,r)=>{const a=v(),s=new Wl(r),i=[[h],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(s,a,"int32",i),Gl(n,o)};for(let e=1;e<y;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[m,b])}for(let e=b;e>y;e/=2){const t=v(),r=new Ul([m,e/2]),a=[[h],[null===x?1:0],[y]],s=x;x=n.runWebGLProgram(r,t,"int32",a),Gl(n,s);const i=y/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,x.shape)}let k=x;x=Za({inputs:{x},backend:n,attrs:{begin:0,size:[m,s]}}),Gl(n,k);let I=qi({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});Gl(n,g);const S=c.slice(0,-1);S.push(s),k=x,x=jr({inputs:{x},attrs:{shape:S},backend:n}),Gl(n,k);const N=I;return I=jr({inputs:{x:I},attrs:{shape:S},backend:n}),Gl(n,N),[I,x]}};class Kl{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const ql={kernelName:i.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,p,d]=a.shape,[f,m]=null!=l?l:[h,p],g=new Kl(h,p,i,o,u,[c,f,m,d]);return n.runWebGLProgram(g,[a,s],"float32")}},Xl={kernelName:i.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;pe(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=sr(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},Yl={kernelName:i.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[s]=e;const t=Za({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),r=jr({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Ql{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const Zl=[No,$o,sa,oa,la,ha,fa,ya,ba,xa,Na,Ta,Ca,_a,Oa,Ra,Ma,za,Ba,Ua,Ga,Ha,qa,es,ts,ns,os,cs,ds,gs,Ar,Ss,Ds,Ms,_s,Ps,Bs,Ls,Vs,Us,Hs,Xs,Ys,Zs,ai,si,ti,oi,li,ci,pi,di,mi,yi,vi,ki,Ni,Ci,Ai,Fi,Mi,Pi,Vi,Ui,Gi,ji,Xi,Qi,Ji,Er,eo,ws,no,ao,io,Or,uo,co,ho,go,fo,bo,vo,ko,Eo,Fo,Ro,Mo,Lo,Po,Ao,Bo,zo,Wo,Ho,Ko,nu,Hr,au,iu,uu,cu,as,pu,mu,gu,vu,ku,Lr,Iu,Nu,is,Yo,$u,Au,Eu,Kr,Ou,Mu,Bu,Vu,Gu,ju,qu,Yu,Zu,el,nl,sl,ol,ll,hl,Ja,tu,dl,fl,ml,gl,yl,bl,xl,vl,Il,Nl,Cl,El,Al,Rl,Fl,Ol,Jo,ta,Ml,Pl,Vl,jl,ql,ra,Xl,Yl,{kernelName:i.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:o}=r,u=a.shape.length,l=[];let c=0;const h=i.backend_util.getAxesPermutation([c],u);let p=a;null!=h&&(p=na({inputs:{x:a},backend:n,attrs:{perm:h}}),l.push(p),c=i.backend_util.getInnerMostAxes(1,u)[0]);const d=i.backend_util.segment_util.computeOutShape(p.shape,c,o),f=i.util.sizeFromShape([p.shape[c]]),m=jr({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,i.sumOutType)(a.dtype),y=(e,t,r,a,s)=>{const o=e.shape[0],u=e.shape[1],c=i.backend_util.segment_util.segOpComputeOptimalWindowSize(u,s),h=new Ql({windowSize:c,inSize:u,batchSize:o,numSegments:s},t),p=n.compileAndRun(h,[e,r],a);if(l.push(p),p.shape[1]===s)return p;const d=Su({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=zl({inputs:{x:d},backend:n,attrs:{reps:[u/c]}});return l.push(d),l.push(f),y(p,t,f,a,s)},b=jr({inputs:{x:y(m,"unsortedSegmentSum",s,g,o)},backend:n,attrs:{shape:d}});let x=b;if(null!=h){l.push(b);const e=i.backend_util.getUndoAxesPermutation(h);x=na({inputs:{x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},fu];for(const e of Zl)(0,i.registerKernel)(e)},8713:(e,t,n)=>{"use strict";n.d(t,{JL:()=>r,Zu:()=>a});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3337:(e,t,n)=>{"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||a)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,a){return u(e,t,n,r,a,0)}function i(e,t,n,r,a,s){return u(e,t,n,r,a,0,!1,s,!0)}function o(e,t,n,r,a,s){return u(e,t,n,r,a,s,!0)}function u(e,t,n,a,s,i,o=!1,u=!1,p=!1){const d=[];for(let e=0;e<t.length;e++)t[e]>s&&d.push({score:t[e],boxIndex:e,suppressBeginIndex:0});d.sort(h);const f=i>0?-.5/i:0,m=[],g=[];for(;m.length<n&&d.length>0;){const t=d.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<s)break;let u=!1;for(let n=m.length-1;n>=o;--n){const r=l(e,i,m[n]);if(r>=a){u=!0;break}if(t.score=t.score*c(a,f,r),t.score<=s)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(i),g.push(t.score)):t.score>s&&r(d,t,h))}const y=m.length,b=n-y;u&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=g),p&&(x.validOutputs=y),x}function l(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),d=(o-s)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function h(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>s,qP:()=>i,pA:()=>o})},8333:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(2657);function a(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const a=(0,r.f)(e,"int32"),s=(0,r.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const r=a.indexToLoc(n[t]),i=t*e.length;s.values.set(r,i)}return s.toTensor()}},7097:(e,t,n)=>{"use strict";n.d(t,{BV:()=>v,wv:()=>x});var r=n(8713),a=n(2885),s=n(5938),i=n(9121),o=n(6151),u=n(9122),l=n(569);class c{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const o=u.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:u.now()-o})}if((0,a.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{h(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?l.oj(`${r}ms`,9):r.error,o=l.oj(e,25),u=t.rank,c=t.size,h=l.oj(t.shape.toString(),14);let p="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;p+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${h}\t%c${c}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var d=n(4077),f=n(747),m=n(4706);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(m.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new c(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,m.Z(`Initialization of backend ${e} failed`),m.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return m.Z(`Initialization of backend ${e} failed`),m.Z(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=v.runKernel(i.iJ,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return v.runKernel(i.RF,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==(0,o.pI)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const c=(0,o.pI)(t,this.backendName);l.hu(null!=c,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();u=c.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:h,attrs:p}=e,d=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,h,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),r&&this.addTapeNode(c,h,t,d,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=(0,o.uk)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(l.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&l.HD(e[0])&&(a=e.map((e=>u.encodeString(e))));const s=r.write(a,t,n),i=new d.es(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,l.Ub)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new d.es(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new d._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*l.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof d._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*l.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=(0,o.uk)(e);null!=u&&(r=u.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=l.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,f.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(l.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));l.hu(a instanceof d.es,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=(0,l.p8)((0,l.NA)(e),"float32");return v.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!l.cO(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),w);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return l.hu(l.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;l.hu(t.every((e=>e instanceof d.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),l.hu(n.value instanceof d.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),l.hu(l.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];l.hu(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),l.hu(s.every((e=>e instanceof d.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=(0,u.now)(),n=await this.backend.time(e);return n.wallMs=(0,u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const e=(0,s.D)();if(null==e._tfengine){const t=new a.qA(e);e._tfengine=new b(t)}return(0,a.iG)(e._tfengine.ENV),(0,d.Vi)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const v=x();function w(e,t){const n={a:e,b:t};return v.runKernel(i.mm,n)}},2885:(e,t,n)=>{"use strict";n.d(t,{qA:()=>s,OB:()=>o,Vi:()=>u,iG:()=>l});var r=n(569),a=n(4706);class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&a.Z(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];a.Z(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function i(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function o(){return u}let u=null;function l(e){u=e}},5938:(e,t,n)=>{"use strict";let r;function a(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function s(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{D:()=>a,R:()=>s})},4368:(e,t,n)=>{"use strict";n.d(t,{G4:()=>o,R:()=>u,cF:()=>l,MX:()=>c,N8:()=>h,SR:()=>p,sq:()=>d,N5:()=>f,lu:()=>m,B9:()=>g,Cn:()=>y,XV:()=>b,CQ:()=>x,Cd:()=>v,N_:()=>w,cj:()=>k,x3:()=>I,ze:()=>S,jq:()=>N,y3:()=>T,VY:()=>$});var r=n(7097),a=n(2885),s=n(4077),i=n(747);function o(){(0,a.OB)().set("PROD",!0)}function u(){(0,a.OB)().set("DEBUG",!0)}function l(){(0,a.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(e){(0,a.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function h(){r.BV.disposeVariables()}function p(){return r.BV}function d(){return r.BV.memory()}function f(e){return r.BV.profile(e)}function m(e,t){return r.BV.tidy(e,t)}function g(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return r.BV.keep(e)}function b(e){return r.BV.time(e)}function x(e){return r.BV.setBackend(e)}function v(){return r.BV.ready()}function w(){return r.BV.backendName}function k(e){r.BV.removeBackend(e)}function I(e){return r.BV.findBackend(e)}function S(e){return r.BV.findBackendFactory(e)}function N(e,t,n=1){return r.BV.registerBackend(e,t,n)}function T(){return r.BV.backend}function $(e,t){(0,a.OB)().setPlatform(e,t)}(0,s.FZ)(c)},633:(e,t,n)=>{"use strict";n.d(t,{cb:()=>p,pn:()=>h,h7:()=>l,fN:()=>c,UQ:()=>o,ti:()=>u});var r=n(7097),a=n(4077),s=n(3740),i=n(569);function o(e){return i.hu(i.mf(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const a=(0,s._1)(t,"x","tf.grad","string_or_numeric"),o=null!=n?(0,s._1)(n,"dy","tf.grad"):null;return r.BV.tidy((()=>{const{value:t,grads:n}=r.BV.gradients((()=>e(a)),[a],o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),d(n),n[0]}))}}function u(e){return i.hu(i.mf(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const a=(0,s.sI)(t,"args","tf.grads","string_or_numeric"),o=null!=n?(0,s._1)(n,"dy","tf.grads"):null;return r.BV.tidy((()=>{const{value:t,grads:n}=r.BV.gradients((()=>e(...a)),a,o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),d(n),n}))}}function l(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{i.hu(t instanceof a.es,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),i.hu(null==n||n instanceof a.es,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:o}=r.BV.gradients((()=>e(t)),[t],n);return d(s),{grad:s[0],value:o}}}function c(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t)&&t.every((e=>e instanceof a.es)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),i.hu(null==n||n instanceof a.es,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=r.BV.gradients((()=>e(...t)),t,n);return null!=n&&i.k5(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),d(s.grads),s}}function h(e,t){i.hu(i.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),i.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof a._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.BV.registeredVariables)t.push(r.BV.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),i.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:u,grads:l}=r.BV.gradients(e,t,null,!0);i.hu(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),i.hu(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=l[t]&&(c[e.name]=l[t])})),null!=s&&s.forEach((e=>c[e.name]=null)),{value:u,grads:c}}function p(e){return r.BV.customGrad(e)}function d(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},5363:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>Ke.SY,Acos:()=>Ke.VG,Acosh:()=>Ke.Sp,AdadeltaOptimizer:()=>Kt,AdagradOptimizer:()=>Xt,AdamOptimizer:()=>Zt,AdamaxOptimizer:()=>tn,Add:()=>Ke.mm,AddN:()=>Ke.Xz,All:()=>Ke.oT,Any:()=>Ke.IK,ArgMax:()=>Ke.sJ,ArgMin:()=>Ke.aJ,Asin:()=>Ke.M2,Asinh:()=>Ke.qw,Atan:()=>Ke.jM,Atan2:()=>Ke.QC,Atanh:()=>Ke.Oy,AvgPool:()=>Ke.Jh,AvgPool3D:()=>Ke._k,AvgPool3DGrad:()=>Ke.IM,AvgPoolGrad:()=>Ke.RO,BatchMatMul:()=>Ke.XL,BatchToSpaceND:()=>Ke.zw,Bincount:()=>Ke.zv,BroadcastArgs:()=>Ke.eE,BroadcastTo:()=>Ke.Ly,Cast:()=>Ke.RF,Ceil:()=>Ke.gJ,ClipByValue:()=>Ke.xn,Complex:()=>Ke.Zz,ComplexAbs:()=>Ke.yj,Concat:()=>Ke.Eh,Conv2D:()=>Ke.mh,Conv2DBackpropFilter:()=>Ke.wU,Conv2DBackpropInput:()=>Ke.wm,Conv3D:()=>Ke.x1,Conv3DBackpropFilterV2:()=>Ke.o2,Conv3DBackpropInputV2:()=>Ke.ik,Cos:()=>Ke.mc,Cosh:()=>Ke.TR,CropAndResize:()=>Ke.Vc,Cumsum:()=>Ke.iH,DataStorage:()=>sr.JL,DenseBincount:()=>Ke.QR,DepthToSpace:()=>Ke.T0,DepthwiseConv2dNative:()=>Ke.ci,DepthwiseConv2dNativeBackpropFilter:()=>Ke.sL,DepthwiseConv2dNativeBackpropInput:()=>Ke.y7,Diag:()=>Ke.$w,Dilation2D:()=>Ke.p4,Dilation2DBackpropFilter:()=>Ke.Vn,Dilation2DBackpropInput:()=>Ke.ek,ENV:()=>x.Vi,Einsum:()=>Ke.$g,Elu:()=>Ke.SX,EluGrad:()=>Ke.HE,Environment:()=>x.qA,Equal:()=>Ke.hd,Erf:()=>Ke.Om,Exp:()=>Ke.NE,ExpandDims:()=>Ke.YF,Expm1:()=>Ke.Y0,FFT:()=>Ke.vw,Fill:()=>Ke.de,FlipLeftRight:()=>Ke.Uy,Floor:()=>Ke.OR,FloorDiv:()=>Ke.je,FromPixels:()=>Ke.eB,FusedBatchNorm:()=>Ke.sH,FusedConv2D:()=>Ke._V,FusedDepthwiseConv2D:()=>Ke.lu,GatherNd:()=>Ke.q1,GatherV2:()=>Ke.qi,Greater:()=>Ke.iZ,GreaterEqual:()=>Ke.Ac,IFFT:()=>Ke.Qg,Identity:()=>Ke.iJ,Imag:()=>Ke.J_,IsFinite:()=>Ke.av,IsInf:()=>Ke.iW,IsNan:()=>Ke.r7,KernelBackend:()=>sr.Zu,LRN:()=>Ke.eZ,LRNGrad:()=>Ke.Hh,LeakyRelu:()=>Ke.J$,Less:()=>Ke.vt,LessEqual:()=>Ke.CA,LinSpace:()=>Ke.e7,Log:()=>Ke.Zb,Log1p:()=>Ke.kU,LogSoftmax:()=>Ke.qC,LogicalAnd:()=>Ke.PY,LogicalNot:()=>Ke.Vf,LogicalOr:()=>Ke.MZ,Max:()=>Ke.Yo,MaxPool:()=>Ke.mT,MaxPool3D:()=>Ke.OA,MaxPool3DGrad:()=>Ke.OU,MaxPoolGrad:()=>Ke.OV,MaxPoolWithArgmax:()=>Ke.vF,Maximum:()=>Ke.BM,Mean:()=>Ke.q2,Min:()=>Ke.c1,Minimum:()=>Ke.q8,MirrorPad:()=>Ke.jQ,Mod:()=>Ke.Vb,MomentumOptimizer:()=>rn,Multinomial:()=>Ke.NZ,Multiply:()=>Ke.wY,Neg:()=>Ke.ku,NonMaxSuppressionV3:()=>Ke.uv,NonMaxSuppressionV4:()=>Ke.cy,NonMaxSuppressionV5:()=>Ke.W0,NotEqual:()=>Ke.yQ,OP_SCOPE_SUFFIX:()=>un.zvA,OneHot:()=>Ke.we,OnesLike:()=>Ke.qW,Optimizer:()=>jt,OptimizerConstructors:()=>sn,Pack:()=>Ke.Qi,PadV2:()=>Ke.ly,Pool:()=>Ke.Kg,Pow:()=>Ke.pe,Prelu:()=>Ke.o0,Prod:()=>Ke.Dl,RMSPropOptimizer:()=>an,Range:()=>Ke.e6,Rank:()=>on.yw,Real:()=>Ke.xJ,RealDiv:()=>Ke.oH,Reciprocal:()=>Ke.$H,Reduction:()=>ln.I,Relu:()=>Ke.qk,Relu6:()=>Ke.Sb,Reshape:()=>Ke.HZ,ResizeBilinear:()=>Ke._Y,ResizeBilinearGrad:()=>Ke.zb,ResizeNearestNeighbor:()=>Ke.dp,ResizeNearestNeighborGrad:()=>Ke.Hm,Reverse:()=>Ke.mK,RotateWithOffset:()=>Ke.b9,Round:()=>Ke.e0,Rsqrt:()=>Ke.bV,SGDOptimizer:()=>nn,ScatterNd:()=>Ke.xQ,Select:()=>Ke.Ph,Selu:()=>Ke.oF,Sigmoid:()=>Ke.a5,Sign:()=>Ke.i5,Sin:()=>Ke.RQ,Sinh:()=>Ke.w3,Slice:()=>Ke.p2,Softmax:()=>Ke.Gc,Softplus:()=>Ke.MR,SpaceToBatchND:()=>Ke.TQ,SparseFillEmptyRows:()=>Ke.O3,SparseReshape:()=>Ke.nh,SparseSegmentMean:()=>Ke.YW,SparseSegmentSum:()=>Ke.Zj,SparseToDense:()=>Ke.D2,SplitV:()=>Ke.L8,Sqrt:()=>Ke.FK,Square:()=>Ke.bK,SquaredDifference:()=>Ke._t,Step:()=>Ke.h8,StridedSlice:()=>Ke.m2,StringNGrams:()=>Ke._J,StringSplit:()=>Ke.s1,StringToHashBucketFast:()=>Ke.Xk,Sub:()=>Ke.Tr,Sum:()=>Ke.GB,Tan:()=>Ke.sE,Tanh:()=>Ke.MI,Tensor:()=>ke.es,TensorBuffer:()=>ke.YD,Tile:()=>Ke.n9,TopK:()=>Ke.cW,Transform:()=>Ke.wx,Transpose:()=>Ke.G3,Unique:()=>Ke.kp,Unpack:()=>Ke.To,UnsortedSegmentSum:()=>Ke.Qv,Variable:()=>ke._w,ZerosLike:()=>Ke.Ru,_FusedMatMul:()=>Ke.us,abs:()=>un.WnP,acos:()=>un.Khb,acosh:()=>un.__u,add:()=>un.IHx,addN:()=>un.QBD,all:()=>un.$6P,any:()=>un.YjB,argMax:()=>un.NqF,argMin:()=>un.vHJ,asin:()=>un.ZRM,asinh:()=>un.VfV,atan:()=>un.z4N,atan2:()=>un.fvJ,atanh:()=>un.C80,avgPool:()=>un.wS1,avgPool3d:()=>un.uR5,backend:()=>Lt.y3,backend_util:()=>p,basicLSTMCell:()=>un.zEQ,batchNorm:()=>un.tgs,batchNorm2d:()=>un.Dxk,batchNorm3d:()=>un.JY5,batchNorm4d:()=>un.p3b,batchToSpaceND:()=>un.E4h,bincount:()=>un.yE8,booleanMaskAsync:()=>un.anm,broadcastArgs:()=>un.XsQ,broadcastTo:()=>un.UFq,browser:()=>i,buffer:()=>un.f3b,cast:()=>un.pju,ceil:()=>un.mDi,clipByValue:()=>un.iUl,clone:()=>un.d9v,complex:()=>un.PYB,concat:()=>un.zoF,concat1d:()=>un.gME,concat2d:()=>un.Izb,concat3d:()=>un.MNy,concat4d:()=>un.ZaL,conv1d:()=>un.PAt,conv2d:()=>un.Tek,conv2dTranspose:()=>un.bc,conv3d:()=>un.pdZ,conv3dTranspose:()=>un.$QV,copyRegisteredKernels:()=>qe.T3,cos:()=>un.mCk,cosh:()=>un.f9Y,cosineWindow:()=>un.mew,cumsum:()=>un.zbp,customGrad:()=>Gt.cb,denseBincount:()=>un.ppE,deprecationWarn:()=>Lt.MX,depthToSpace:()=>un.nTT,depthwiseConv2d:()=>un.B10,device_util:()=>r,diag:()=>un.Ka3,dilation2d:()=>un.WmZ,disableDeprecationWarnings:()=>Lt.cF,dispose:()=>Lt.B9,disposeVariables:()=>Lt.N8,div:()=>un.hiC,divNoNan:()=>un.NTj,dot:()=>un.AKD,dropout:()=>un.rvX,einsum:()=>un.WYO,elu:()=>un.pyx,enableDebugMode:()=>Lt.R,enableProdMode:()=>Lt.G4,enclosingPowerOfTwo:()=>un.GRh,engine:()=>Lt.SR,env:()=>x.OB,equal:()=>un.DgJ,erf:()=>un.qNN,exp:()=>un.Qqt,expandDims:()=>un.dt4,expm1:()=>un.t$B,eye:()=>un.iyy,fft:()=>un.kp_,fill:()=>un.hlL,findBackend:()=>Lt.x3,findBackendFactory:()=>Lt.ze,floor:()=>un.GWj,floorDiv:()=>un.qPi,fused:()=>un.imm,gather:()=>un.Iqj,gatherND:()=>un.dbB,gather_util:()=>o,getBackend:()=>Lt.N_,getGradient:()=>qe.uk,getKernel:()=>qe.pI,getKernelsForBackend:()=>qe.tr,grad:()=>Gt.UQ,grads:()=>Gt.ti,greater:()=>un.pjt,greaterEqual:()=>un.brS,ifft:()=>un.Sxn,imag:()=>un.asL,image:()=>un.BHj,inTopKAsync:()=>un.V3u,io:()=>a,irfft:()=>un.wx0,isFinite:()=>un.xVT,isInf:()=>un.UWc,isNaN:()=>un.i2d,keep:()=>Lt.Cn,kernel_impls:()=>d,leakyRelu:()=>un.hi7,less:()=>un.d9m,lessEqual:()=>un.zN1,linalg:()=>un.$r2,linspace:()=>un.SX3,localResponseNormalization:()=>un.G9k,log:()=>un.cM7,log1p:()=>un.Krr,logSigmoid:()=>un.e_t,logSoftmax:()=>un.CmS,logSumExp:()=>un.l_t,logicalAnd:()=>un.HvI,logicalNot:()=>un.hJK,logicalOr:()=>un.K5V,logicalXor:()=>un.egP,losses:()=>un.MB5,matMul:()=>un.OI3,math:()=>s,max:()=>un.Fp7,maxPool:()=>un._sB,maxPool3d:()=>un.YQQ,maxPoolWithArgmax:()=>un.Ip$,maximum:()=>un.gWQ,mean:()=>un.J69,memory:()=>Lt.sq,meshgrid:()=>un.ry_,min:()=>un.VV$,minimum:()=>un.LTh,mirrorPad:()=>un.VdP,mod:()=>un.wQq,moments:()=>un.Gi7,movingAverage:()=>un.p_,mul:()=>un.dC7,multiRNNCell:()=>un.rq4,multinomial:()=>un.SJ_,neg:()=>un.W76,nextFrame:()=>pn,norm:()=>un.KOy,notEqual:()=>un.Quu,oneHot:()=>un.lfX,ones:()=>un.iUs,onesLike:()=>un.JpU,op:()=>un.op,outerProduct:()=>un.N2O,pad:()=>un.vku,pad1d:()=>un.pNR,pad2d:()=>un.koy,pad3d:()=>un.t1L,pad4d:()=>un.lGY,pool:()=>un.d_R,pow:()=>un.sQ3,prelu:()=>un.AL3,print:()=>un.S0v,prod:()=>un.WVs,profile:()=>Lt.N5,rand:()=>un.TN_,randomGamma:()=>un.wzB,randomNormal:()=>un.nGf,randomUniform:()=>un.LGj,range:()=>un.w6H,ready:()=>Lt.Cd,real:()=>un.kwC,reciprocal:()=>un.M25,registerBackend:()=>Lt.jq,registerGradient:()=>qe.Li,registerKernel:()=>qe.wC,relu:()=>un.UYe,relu6:()=>un.btT,removeBackend:()=>Lt.cj,reshape:()=>un.XLQ,reverse:()=>un.GYS,reverse1d:()=>un.SDf,reverse2d:()=>un.diP,reverse3d:()=>un.sx7,reverse4d:()=>un.mG2,rfft:()=>un.QEs,round:()=>un.NMM,rsqrt:()=>un.bp0,scalar:()=>un.iD$,scatterND:()=>un.snQ,scatter_util:()=>nt,selu:()=>un.U8D,separableConv2d:()=>un.U_I,serialization:()=>l,setBackend:()=>Lt.CQ,setPlatform:()=>Lt.VY,setdiff1dAsync:()=>un.ODp,sigmoid:()=>un.XD2,sign:()=>un.Xxe,signal:()=>un.tdS,sin:()=>un.O$l,sinh:()=>un.R_K,slice:()=>un.tPi,slice1d:()=>un.jZU,slice2d:()=>un.SmN,slice3d:()=>un.CnO,slice4d:()=>un.p0P,slice_util:()=>u,softmax:()=>un.XAC,softplus:()=>un.Wvh,spaceToBatchND:()=>un.fBT,sparse:()=>un.rVs,sparseToDense:()=>un.ers,spectral:()=>un.uN7,split:()=>un.Vl2,sqrt:()=>un._b3,square:()=>un.h62,squaredDifference:()=>un.$i,squeeze:()=>un.L9e,stack:()=>un.knu,step:()=>un.Nbs,stridedSlice:()=>un.NXj,string:()=>un.Z_8,sub:()=>un.luU,sum:()=>un.Smz,sumOutType:()=>on.z4,tan:()=>un.ORZ,tanh:()=>un.AEp,tensor:()=>un.XeE,tensor1d:()=>un.RRF,tensor2d:()=>un.odF,tensor3d:()=>un.wOQ,tensor4d:()=>un.yXz,tensor5d:()=>un.Bfx,tensor6d:()=>un.xZs,tensor_util:()=>It,test_util:()=>c,tidy:()=>Lt.lu,tile:()=>un.Gg6,time:()=>Lt.XV,topk:()=>un.hg7,train:()=>cn,transpose:()=>un.p4s,truncatedNormal:()=>un.Xu6,unique:()=>un.Two,unregisterGradient:()=>qe.bt,unregisterKernel:()=>qe.nE,unsortedSegmentSum:()=>un.pUJ,unstack:()=>un.HHK,upcastType:()=>on.x8,util:()=>St,valueAndGrad:()=>Gt.h7,valueAndGrads:()=>Gt.fN,variable:()=>un.VD$,variableGrads:()=>Gt.pn,version_core:()=>Mt,where:()=>un.arb,whereAsync:()=>un.itS,zeros:()=>un.lls,zerosLike:()=>un.P84});var r={};n.r(r),n.d(r,{isBrowser:()=>b,isMobile:()=>y,mockIsMobile:()=>g});var a={};n.r(a),n.d(a,{browserFiles:()=>$e,browserHTTPRequest:()=>Me,concatenateArrayBuffers:()=>_,copyModel:()=>fe,decodeWeights:()=>T,encodeWeights:()=>N,fromMemory:()=>Be,getLoadHandlers:()=>z,getModelArtifactsForJSON:()=>F,getModelArtifactsInfoForJSON:()=>O,getSaveHandlers:()=>B,http:()=>De,isHTTPScheme:()=>Fe,listModels:()=>pe,loadWeights:()=>_e,moveModel:()=>me,registerLoadRouter:()=>P,registerSaveRouter:()=>L,removeModel:()=>de,weightsLoaderFactory:()=>Ae,withSaveHandler:()=>ze});var s={};n.r(s),n.d(s,{confusionMatrix:()=>je});var i={};n.r(i),n.d(i,{fromPixels:()=>et,fromPixelsAsync:()=>Ze,toPixels:()=>Je});var o={};n.r(o),n.d(o,{prepareAndValidate:()=>tt});var u={};n.r(u),n.d(u,{assertParamsValid:()=>rt,computeFlatOffset:()=>gt,computeOutShape:()=>st,getNormalizedAxes:()=>lt,isSliceContinous:()=>mt,maskToAxes:()=>at,parseSliceParams:()=>yt,sliceInfo:()=>bt,startForAxis:()=>dt,startIndicesWithElidedDims:()=>ct,stopForAxis:()=>ft,stopIndicesWithElidedDims:()=>ht,stridesForAxis:()=>pt,stridesWithElidedDims:()=>it});var l={};n.r(l),n.d(l,{Serializable:()=>vt,SerializationMap:()=>wt,registerClass:()=>kt});var c={};n.r(c),n.d(c,{TEST_EPSILON_FLOAT16:()=>Nt,encodeStrings:()=>Dt,expectArrayBuffersEqual:()=>Ot,expectArraysClose:()=>Tt,expectArraysEqual:()=>_t,expectNumbersClose:()=>At,expectPromiseToFail:()=>Et,expectValuesInRange:()=>Ft,testEpsilon:()=>$t});var h={};n.r(h),n.d(h,{collectGatherOpShapeInfo:()=>er,computeOutShape:()=>Jn,segOpComputeOptimalWindowSize:()=>Zn});var p={};n.r(p),n.d(p,{ERF_A1:()=>_n,ERF_A2:()=>An,ERF_A3:()=>Rn,ERF_A4:()=>Fn,ERF_A5:()=>On,ERF_P:()=>En,PARALLELIZE_THRESHOLD:()=>xn,SELU_SCALE:()=>Cn,SELU_SCALEALPHA:()=>$n,applyActivation:()=>bn.QH,assertAndGetBroadcastShape:()=>fn.$N,assertAxesAreInnerMostDims:()=>dn.lB,assertParamsConsistent:()=>mn,assignToTypedArray:()=>Vn,axesAreInnerMostDims:()=>dn.YB,calculateShapes:()=>nt.calculateShapes,checkEinsumDimSizes:()=>Kn,combineLocations:()=>dn.Vh,complexWithEvenIndex:()=>Pn,complexWithOddIndex:()=>Bn,computeConv2DInfo:()=>yn.Ix,computeConv3DInfo:()=>yn.jw,computeDefaultPad:()=>yn.aO,computeDilation2DInfo:()=>yn.Rf,computeOptimalWindowSize:()=>vn,computeOutAndReduceShapes:()=>dn.kz,computeOutShape:()=>gn,computePool2DInfo:()=>yn.Xw,computePool3DInfo:()=>yn.pl,convertConv2DDataFormat:()=>yn.sl,decodeEinsumEquation:()=>Hn,eitherStridesOrDilationsAreOne:()=>yn.jT,expandShapeToKeepDim:()=>dn.rv,exponent:()=>Un,exponents:()=>Wn,fromStringArrayToUint8:()=>nr,fromUint8ToStringArray:()=>tr,getAxesPermutation:()=>dn.Q3,getBroadcastDims:()=>fn.XF,getComplexWithIndex:()=>zn,getEinsumComputePath:()=>qn,getEinsumPermutation:()=>jn,getFusedBiasGradient:()=>bn.pf,getFusedDyActivation:()=>bn.Fr,getImageCenter:()=>wn,getInnerMostAxes:()=>dn.sY,getPermuted:()=>In,getReductionAxes:()=>fn.RR,getReshaped:()=>kn,getReshapedPermuted:()=>Sn,getSliceBeginCoords:()=>Nn,getSliceSize:()=>Tn,getUndoAxesPermutation:()=>dn.LJ,isIdentityPermutation:()=>Xn,log:()=>Dn.c,mergeRealAndImagArrays:()=>Mn,prepareAndValidate:()=>tt,prepareSplitSize:()=>Qn,segment_util:()=>h,shouldFuse:()=>bn.uy,slice_util:()=>u,splitRealAndImagArrays:()=>Ln,tupleValuesAreOne:()=>yn.I0,upcastType:()=>on.x8,validateInput:()=>nt.validateInput,validateUpdateShape:()=>nt.validateUpdateShape,warn:()=>Dn.Z});var d={};n.r(d),n.d(d,{nonMaxSuppressionV3Impl:()=>rr.GP,nonMaxSuppressionV4Impl:()=>rr.qP,nonMaxSuppressionV5Impl:()=>rr.pA,whereImpl:()=>ar.Z});var f=n(7097);let m;function g(e){m=e}function y(e){if(void 0!==m)return m;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function b(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var x=n(2885);const v=(0,x.OB)();v.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),v.registerFlag("IS_BROWSER",(()=>b())),v.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),v.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),v.registerFlag("PROD",(()=>!1)),v.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>v.getBool("DEBUG"))),v.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),v.registerFlag("IS_TEST",(()=>!1)),v.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),v.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var w=n(1661),k=n(701),I=n(569);const S={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function N(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:$(await Promise.all(r)),specs:n}}function T(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=(0,I.NA)(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=S[n.dtype],c=e.slice(a,a+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=D()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*o}else if("string"===i){const t=(0,I.NA)(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=S[i],s=e.slice(a,a+u*r);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=(0,k.X)(e,o,"float32"),i=(0,k.X)(r,o,"float32");n[t]=(0,w.P)(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=(0,k.X)(l,o,i))}return n}function $(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const C="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function E(e){return C?Buffer.byteLength(e):new Blob([e]).size}function _(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function A(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function R(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function F(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function O(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:E(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:E(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function D(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}class M{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==M.instance&&(M.instance=new M),M.instance}static registerSaveRouter(e){M.getInstance().saveRouters.push(e)}static registerLoadRouter(e){M.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return M.getHandlers(e,"save")}static getLoadHandlers(e,t){return M.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?M.getInstance().loadRouters:M.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const L=e=>M.registerSaveRouter(e),P=e=>M.registerLoadRouter(e),B=e=>M.getSaveHandlers(e),z=(e,t)=>M.getLoadHandlers(e,t),V="tensorflowjs",W="models_store",U="model_info_store";function G(){if(!(0,x.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function H(e){const t=e.result;t.createObjectStore(W,{keyPath:"modelPath"}),t.createObjectStore(U,{keyPath:"modelPath"})}class j{constructor(e){if(this.indexedDB=G(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(V,1);r.onupgradeneeded=()=>H(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(W,"readonly"),r=t.objectStore(W).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=O(t),s=a.transaction(U,"readwrite");let i=s.objectStore(U);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(W,"readwrite");const o=u.objectStore(W).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(U);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}j.URL_SCHEME="indexeddb://";const K=e=>{return(0,x.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(j.URL_SCHEME)?(t=e.slice(j.URL_SCHEME.length),new j(t)):null;var t};M.registerSaveRouter(K),M.registerLoadRouter(K);class q{constructor(){this.indexedDB=G()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(V,1);n.onupgradeneeded=()=>H(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(U,"readonly"),s=a.objectStore(U).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(j.URL_SCHEME)?t.slice(j.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(V,1);r.onupgradeneeded=()=>H(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(U,"readwrite"),i=s.objectStore(U),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(W,"readwrite");const r=u.objectStore(W).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const X="/",Y="tensorflowjs_models",Q="info",Z="model_topology",J="weight_specs",ee="weight_data",te="model_metadata";function ne(e){return{info:[Y,e,Q].join(X),topology:[Y,e,Z].join(X),weightSpecs:[Y,e,J].join(X),weightData:[Y,e,ee].join(X),modelMetadata:[Y,e,te].join(X)}}function re(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ae(e){const t=e.split(X);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(X)}class se{constructor(e){if(!(0,x.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ne(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=O(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(C)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw re(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(C){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}se.URL_SCHEME="localstorage://";const ie=e=>{return(0,x.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(se.URL_SCHEME)?(t=e.slice(se.URL_SCHEME.length),new se(t)):null;var t};M.registerSaveRouter(ie),M.registerLoadRouter(ie);class oe{constructor(){(0,I.hu)((0,x.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,I.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Y+X,n=X+Q;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[ae(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=ne(e=(t=e).startsWith(se.URL_SCHEME)?t.slice(se.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return re(n),r}}const ue="://";class le{constructor(){this.managers={}}static getInstance(){return null==le.instance&&(le.instance=new le),le.instance}static registerManager(e,t){(0,I.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(ue)&&(e=e.slice(0,e.indexOf(ue))),(0,I.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=le.getInstance();(0,I.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function ce(e){if(-1===e.indexOf(ue))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${le.getSchemes().join(",")}`);return{scheme:e.split(ue)[0],path:e.split(ue)[1]}}async function he(e,t,n=!1){(0,I.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=M.getLoadHandlers(e);(0,I.hu)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,I.hu)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=M.getSaveHandlers(t);(0,I.hu)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,I.hu)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=ce(e).scheme,u=ce(e).path,l=o===ce(e).scheme,c=await a.load();n&&l&&await le.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await le.getManager(o).removeModel(u),h.modelArtifactsInfo}async function pe(){const e=le.getSchemes(),t={};for(const n of e){const e=await le.getManager(n).listModels();for(const r in e)t[n+ue+r]=e[r]}return t}async function de(e){const t=ce(e);return le.getManager(t.scheme).removeModel(t.path)}async function fe(e,t){return he(e,t,!1)}async function me(e,t){return he(e,t,!0)}class ge{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,x.OB)().get("IS_BROWSER")){(0,x.OB)().setPlatform("browser",new ge);try{le.registerManager(se.URL_SCHEME,new oe)}catch(e){}try{le.registerManager(j.URL_SCHEME,new q)}catch(e){}}let ye;(0,x.OB)().get("IS_NODE")&&(0,x.OB)().setPlatform("node",new class{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,x.OB)().global.fetch?(0,x.OB)().global.fetch(e,t):(null==ye&&(ye=n(5410)),ye(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var be=n(2657),xe=n(2271),ve=n(8723),we=n(9798),ke=n(4077);(0,f.wv)();const Ie={buffer:be.f,cast:xe.p,clone:ve.d,print:we.S};function Se(e){return new Promise((e=>setTimeout(e))).then(e)}(0,ke.Vp)(Ie);class Ne{constructor(e){if(!(0,x.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ne.URL_SCHEME)&&(e=e.slice(Ne.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=R(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Se((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Se((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:O(e)}}}}Ne.URL_SCHEME="downloads://";class Te{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=F(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,_(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>A(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=A(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function $e(e){return new Te(e)}function Ce(e,t,n,r){!function(e){(0,I.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,I.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,I.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,I.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}async function Ee(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,x.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ce(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ce(a,t.onProgress,.5,1)}async function _e(e,t="",n,r){return Ae((e=>Ee(e,{requestInit:r})))(e,t,n)}function Ae(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=S[u]*I.NA(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let p=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[p+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{const t=T(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}M.registerSaveRouter((e=>(0,x.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ne.URL_SCHEME)?function(e="model"){return new Ne(e)}(e.slice(Ne.URL_SCHEME.length)):null));class Re{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,I.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,x.OB)().platform.fetch,(0,I.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,I.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=R(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:O(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return F(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,_(await Ee(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Fe(e){return null!=e.match(Re.URL_SCHEME_REGEX)}Re.URL_SCHEME_REGEX=/^https?:\/\//;const Oe=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Fe(e))):Fe(e),n)return De(e,t)}return null};function De(e,t){return new Re(e,t)}function Me(e,t){return De(e,t)}M.registerSaveRouter(Oe),M.registerLoadRouter(Oe);class Le{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Pe{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Be(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Le(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Le({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Le({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function ze(e){return new Pe(e)}var Ve=n(3740),We=n(8687),Ue=n(6708),Ge=n(2668),He=n(9065);const je=(0,Ge.op)({confusionMatrix_:function(e,t,n){const r=(0,Ve._1)(e,"labels","confusionMatrix"),a=(0,Ve._1)(t,"predictions","confusionMatrix");I.hu(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),I.hu(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),I.hu(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),I.hu(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),I.hu(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=(0,Ue.l)((0,xe.p)(r,"int32"),n),i=(0,Ue.l)((0,xe.p)(a,"int32"),n),o=(0,He.p)(s),u=(0,We.O)(o,i);return(0,xe.p)(u,"int32")}});var Ke=n(9121),qe=n(6151),Xe=n(9906);let Ye;function Qe(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,qe.pI)(Ke.eB,f.BV.backendName)){const n={pixels:e},r={numChannels:t};return f.BV.runKernel(Ke.eB,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(s||a||o){if(null==Ye)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Ye=new OffscreenCanvas(1,1).getContext("2d")}else Ye=document.createElement("canvas").getContext("2d");Ye.canvas.width=u,Ye.canvas.height=l,Ye.drawImage(e,0,0,u,l),c=Ye.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}const p=[l,u,t];return(0,Xe.w)(h,p,"int32")}async function Ze(e,t=3){let n=null;if((0,x.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Qe(n,t)}async function Je(e,t){let n=(0,Ve._1)(e,"img","toPixels");if(!(e instanceof ke.es)){const e=n;n=(0,xe.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const et=(0,Ge.op)({fromPixels_:Qe});function tt(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,I.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[...(0,I.e3)(e.shape).map((e=>e/l)),1].slice(0,s);return[u,i,l,c]}var nt=n(3028);function rt(e,t,n){const r=e.shape.length;I.hu(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),I.hu(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)I.hu(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function at(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function st(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function it(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function ot(e,t,n){return n<=e?n:n-(t-1)}function ut(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function lt(e,t,n,r,a,s,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),p=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=ct(i,u,l,r,e),h=ht(o,u,l,a,e),p=it(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=dt(i,r,s,e,t,u),h[t]=ft(o,a,s,e,t,u),p[t]=pt(s,t,u);return{begin:c,end:h,strides:p}}function ct(e,t,n,r,a){const s=[...a],i=ut(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=ot(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function ht(e,t,n,r,a){const s=[...a],i=ut(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=ot(t,n,a);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=I.uZ(0,s[e],a[e])}return s}function pt(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function dt(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=I.uZ(0,i,u-1),i}function ft(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?I.uZ(0,i,u):I.uZ(-1,i,u-1),i}function mt(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function gt(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function yt(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{I.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(I.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function bt(e,t,n,r,a,s,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[p.beginMask&1<<t,p.endMask&1<<t],s=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=xt(p.begin[t],0,p.strides[t],r,a,s),p.end[t]=xt(p.end[t],1,p.strides[t],r,a,s);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;d=d&&e,f=f&&(0===t&&1===p.strides[t]||e)}else d=d&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,u=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function xt(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}class vt{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class wt{constructor(){this.classNameMap={}}static getMap(){return null==wt.instance&&(wt.instance=new wt),wt.instance}static register(e){wt.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function kt(e){(0,I.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,I.hu)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,I.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),wt.register(e)}var It=n(747),St=n(9122);const Nt=.1;function Tt(e,t,n){return null==n&&(n=$t()),Ct(e,t,((e,t)=>Rt(e,t,n)))}function $t(){return 32===f.BV.backend.floatPrecision()?.001:Nt}function Ct(e,t,n){let r=!0;if(((0,I.fU)(e)||(0,I.fU)(t))&&(r=!1),(0,I.fU)(e)&&(0,I.fU)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,Ve.C)(e),r=(0,Ve.C)(t);if(!(0,I.cO)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=(0,I.fU)(e)?e:(0,I.xH)(e),s=(0,I.fU)(t)?t:(0,I.xH)(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Et(e,t){e().then((()=>t.fail()),(()=>t()))}function _t(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return(0,I.HD)(e)||(0,I.HD)(e[0])||(0,I.HD)(t)||(0,I.HD)(t[0])?Ct(e,n,((e,t)=>e==t)):Ct(e,t,((e,t)=>Rt(e,t,0)))}function At(e,t,n){if(null==n&&(n=$t()),!Rt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Rt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Ft(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Ot(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function Dt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Dt(n):e[t]=(0,St.encodeString)(n)}return e}const Mt="3.11.0";var Lt=n(4368),Pt=n(6407),Bt=n(1274),zt=n(4841),Vt=n(3261),Wt=n(248),Ut=n(6577),Gt=n(633),Ht=n(9494);class jt extends vt{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return(0,Lt.B9)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,Gt.pn)(e,t)}dispose(){null!=this.iterations_&&(0,Lt.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,Ht.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(jt,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Kt extends jt{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=f.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=f.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,Lt.lu)((()=>(0,Ut.P)(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,Lt.lu)((()=>(0,Ut.P)(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,Lt.lu)((()=>{const e=(0,Pt.I)((0,zt.d)(s,this.rho),(0,zt.d)((0,Wt.h)(a),1-this.rho)),t=(0,zt.d)((0,Bt.h)((0,Vt._)((0,Pt.I)(i,this.epsilon)),(0,Vt._)((0,Pt.I)(s,this.epsilon))),a),n=(0,Pt.I)((0,zt.d)(i,this.rho),(0,zt.d)((0,Wt.h)(t),1-this.rho));s.assign(e),i.assign(n);const o=(0,Pt.I)((0,zt.d)(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,Lt.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,Lt.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Kt.className="Adadelta",kt(Kt);var qt=n(4006);class Xt extends jt{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=f.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,Lt.lu)((()=>(0,qt.h)(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;(0,Lt.lu)((()=>{const e=(0,Pt.I)(s,(0,Wt.h)(a));s.assign(e);const t=(0,Pt.I)((0,zt.d)((0,Bt.h)(a,(0,Vt._)((0,Pt.I)(e,f.BV.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,Lt.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Xt.className="Adagrad",kt(Xt);var Yt=n(3453),Qt=n(827);class Zt extends jt{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,Lt.lu)((()=>{this.accBeta1=(0,Ht.i)(t).variable(),this.accBeta2=(0,Ht.i)(n).variable()})),null==r&&(this.epsilon=f.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Lt.lu)((()=>{const n=(0,Qt.l)(1,this.accBeta1),r=(0,Qt.l)(1,this.accBeta2);t.forEach(((t,a)=>{const s=f.BV.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,Lt.lu)((()=>(0,Ut.P)(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:(0,Lt.lu)((()=>(0,Ut.P)(s).variable(!1)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=(0,Pt.I)((0,zt.d)(o,this.beta1),(0,zt.d)(i,1-this.beta1)),c=(0,Pt.I)((0,zt.d)(u,this.beta2),(0,zt.d)((0,Wt.h)(i),1-this.beta2)),h=(0,Bt.h)(l,n),p=(0,Bt.h)(c,r);o.assign(l),u.assign(c);const d=(0,Pt.I)((0,zt.d)((0,Bt.h)(h,(0,Pt.I)((0,Vt._)(p),this.epsilon)),-this.learningRate),s);s.assign(d)})),this.accBeta1.assign((0,zt.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,zt.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,Lt.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,Lt.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,Lt.lu)((()=>{this.accBeta1.assign((0,Yt.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,Yt.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Zt.className="Adam",kt(Zt);var Jt=n(6235),en=n(632);class tn extends jt{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,Lt.lu)((()=>{this.iteration=(0,Ht.i)(0).variable(),this.accBeta1=(0,Ht.i)(t).variable()})),null==r&&(this.epsilon=f.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Lt.lu)((()=>{const n=(0,Qt.l)(1,this.accBeta1),r=(0,Bt.h)(-this.learningRate,(0,Pt.I)((0,zt.d)(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=f.BV.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,Ut.P)(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:(0,Ut.P)(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=(0,Pt.I)((0,zt.d)(o,this.beta1),(0,zt.d)(i,1-this.beta1)),c=(0,zt.d)(u,this.beta2),h=(0,Jt.W)(i),p=(0,en.g)(c,h);o.assign(l),u.assign(p);const d=(0,Pt.I)((0,zt.d)((0,Bt.h)(r,n),(0,Bt.h)(l,(0,Pt.I)(p,this.epsilon))),s);s.assign(d)})),this.iteration.assign((0,Pt.I)(this.iteration,1)),this.accBeta1.assign((0,zt.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,Lt.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,Lt.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}tn.className="Adamax",kt(tn);class nn extends jt{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=f.BV.registeredVariables[t];(0,Lt.lu)((()=>{const e=(0,Pt.I)((0,zt.d)(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,Lt.Cn)((0,Ht.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}nn.className="SGD",kt(nn);class rn extends nn{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,Ht.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=f.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,Lt.lu)((()=>(0,Ut.P)(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&(0,Lt.lu)((()=>{let e;const t=(0,Pt.I)((0,zt.d)(this.m,a),s);e=this.useNesterov?(0,Pt.I)((0,zt.d)(this.c,(0,Pt.I)(s,(0,zt.d)(t,this.m))),r):(0,Pt.I)((0,zt.d)(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,Lt.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}rn.className="Momentum",kt(rn);class an extends jt{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=f.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=f.BV.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,Lt.lu)((()=>(0,Ut.P)(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,Lt.lu)((()=>(0,Ut.P)(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,Lt.lu)((()=>(0,Ut.P)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,Lt.lu)((()=>{const e=(0,Pt.I)((0,zt.d)(i,this.decay),(0,zt.d)((0,Wt.h)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=(0,Pt.I)((0,zt.d)(t,this.decay),(0,zt.d)(s,1-this.decay)),u=(0,Bt.h)((0,zt.d)(s,this.learningRate),(0,Vt._)((0,Qt.l)(e,(0,Pt.I)((0,Wt.h)(a),this.epsilon)))),l=(0,Pt.I)((0,zt.d)(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=(0,Qt.l)(r,l);r.assign(c)}else{const e=(0,Pt.I)((0,zt.d)(i,this.decay),(0,zt.d)((0,Wt.h)(s),1-this.decay)),t=(0,Pt.I)((0,zt.d)(o,this.momentum),(0,Bt.h)((0,zt.d)(s,this.learningRate),(0,Vt._)((0,Pt.I)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,Qt.l)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,Lt.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,Lt.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,Lt.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}an.className="RMSProp",kt(an);class sn{static sgd(e){return new nn(e)}static momentum(e,t,n=!1){return new rn(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new an(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Zt(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Kt(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new tn(e,t,n,r,a)}static adagrad(e,t=.1){return new Xt(e,t)}}var on=n(1221),un=n(4885),ln=n(9876);const cn={sgd:sn.sgd,momentum:sn.momentum,adadelta:sn.adadelta,adagrad:sn.adagrad,rmsprop:sn.rmsprop,adamax:sn.adamax,adam:sn.adam},hn="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function pn(){return new Promise((e=>hn((()=>e()))))}var dn=n(3591),fn=n(2200);function mn(e,t){const n=e[0].length;e.forEach(((e,t)=>{I.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),I.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)I.hu(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function gn(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var yn=n(2582),bn=n(9323);const xn=30;function vn(e){return e<=xn?e:(0,I.jP)(e,Math.floor(Math.sqrt(e)))}function wn(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function kn(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function In(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Sn(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Nn(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Tn(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}const $n=1.7580993408473768,Cn=1.0507009873554805,En=.3275911,_n=.254829592,An=-.284496736,Rn=1.421413741,Fn=-1.453152027,On=1.061405429;var Dn=n(4706);function Mn(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Ln(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Pn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Bn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function zn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Vn(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Wn(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Un(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Gn=/->/g;function Hn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Gn,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");(0,I.hu)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function jn(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Kn(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:(0,I.hu)(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function qn(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=Yn(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Xn(e){return e.every(((e,t)=>e===t))}function Yn(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Qn(e,t,n=0){let r=[];if("number"==typeof t)(0,I.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,I.hu)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}(0,I.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Zn(e,t){let n,r=!1;for(e<=xn?(n=e,r=!0):n=(0,I.jP)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,I.jP)(e,n+1);return n}function Jn(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function er(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function tr(e){try{return e.map((e=>(0,St.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function nr(e){return e.map((e=>(0,St.encodeString)(e)))}var rr=n(3337),ar=n(8333),sr=n(8713)},9121:(e,t,n)=>{"use strict";n.d(t,{SY:()=>r,VG:()=>a,Sp:()=>s,mm:()=>i,Xz:()=>o,oT:()=>u,IK:()=>l,sJ:()=>c,aJ:()=>h,M2:()=>p,qw:()=>d,jM:()=>f,Oy:()=>m,QC:()=>g,Jh:()=>y,RO:()=>b,_k:()=>x,IM:()=>v,XL:()=>w,zw:()=>k,zv:()=>I,Ly:()=>S,eE:()=>N,RF:()=>T,gJ:()=>$,xn:()=>C,Zz:()=>E,yj:()=>_,Eh:()=>A,mh:()=>R,wU:()=>F,wm:()=>O,x1:()=>D,o2:()=>M,ik:()=>L,mc:()=>P,TR:()=>B,iH:()=>z,Vc:()=>V,QR:()=>W,T0:()=>U,ci:()=>G,sL:()=>H,y7:()=>j,$w:()=>K,p4:()=>q,ek:()=>X,Vn:()=>Y,oH:()=>Q,$g:()=>Z,SX:()=>J,HE:()=>ee,Om:()=>te,hd:()=>ne,NE:()=>re,YF:()=>ae,Y0:()=>se,vw:()=>ie,de:()=>oe,Uy:()=>ue,OR:()=>le,je:()=>ce,sH:()=>he,qi:()=>pe,q1:()=>de,iZ:()=>fe,Ac:()=>me,iJ:()=>ge,Qg:()=>ye,J_:()=>be,av:()=>xe,iW:()=>ve,r7:()=>we,J$:()=>ke,vt:()=>Ie,CA:()=>Se,e7:()=>Ne,Zb:()=>Te,kU:()=>$e,PY:()=>Ce,Vf:()=>Ee,MZ:()=>_e,qC:()=>Ae,eZ:()=>Re,Hh:()=>Fe,Yo:()=>Oe,BM:()=>De,mT:()=>Me,OV:()=>Le,OA:()=>Pe,OU:()=>Be,vF:()=>ze,q2:()=>Ve,c1:()=>We,q8:()=>Ue,jQ:()=>Ge,Vb:()=>He,NZ:()=>je,wY:()=>Ke,ku:()=>qe,yQ:()=>Xe,uv:()=>Ye,cy:()=>Qe,W0:()=>Ze,qW:()=>Je,we:()=>et,Qi:()=>tt,ly:()=>nt,Kg:()=>rt,pe:()=>at,o0:()=>st,Dl:()=>it,e6:()=>ot,xJ:()=>ut,$H:()=>lt,qk:()=>ct,HZ:()=>ht,dp:()=>pt,Hm:()=>dt,_Y:()=>ft,zb:()=>mt,Sb:()=>gt,mK:()=>yt,e0:()=>bt,bV:()=>xt,xQ:()=>vt,Ph:()=>wt,oF:()=>kt,p2:()=>It,RQ:()=>St,w3:()=>Nt,i5:()=>Tt,a5:()=>$t,MR:()=>Ct,FK:()=>Et,GB:()=>_t,TQ:()=>At,L8:()=>Rt,Gc:()=>Ft,O3:()=>Ot,nh:()=>Dt,YW:()=>Mt,Zj:()=>Lt,D2:()=>Pt,_t:()=>Bt,bK:()=>zt,m2:()=>Vt,_J:()=>Wt,s1:()=>Ut,Xk:()=>Gt,Tr:()=>Ht,sE:()=>jt,MI:()=>Kt,n9:()=>qt,cW:()=>Xt,wx:()=>Yt,G3:()=>Qt,kp:()=>Zt,To:()=>Jt,Qv:()=>en,Ru:()=>tn,h8:()=>nn,eB:()=>rn,b9:()=>an,us:()=>sn,_V:()=>on,lu:()=>un});const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",l="Any",c="ArgMax",h="ArgMin",p="Asin",d="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",I="Bincount",S="BroadcastTo",N="BroadcastArgs",T="Cast",$="Ceil",C="ClipByValue",E="Complex",_="ComplexAbs",A="Concat",R="Conv2D",F="Conv2DBackpropFilter",O="Conv2DBackpropInput",D="Conv3D",M="Conv3DBackpropFilterV2",L="Conv3DBackpropInputV2",P="Cos",B="Cosh",z="Cumsum",V="CropAndResize",W="DenseBincount",U="DepthToSpace",G="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",j="DepthwiseConv2dNativeBackpropInput",K="Diag",q="Dilation2D",X="Dilation2DBackpropInput",Y="Dilation2DBackpropFilter",Q="RealDiv",Z="Einsum",J="Elu",ee="EluGrad",te="Erf",ne="Equal",re="Exp",ae="ExpandDims",se="Expm1",ie="FFT",oe="Fill",ue="FlipLeftRight",le="Floor",ce="FloorDiv",he="FusedBatchNorm",pe="GatherV2",de="GatherNd",fe="Greater",me="GreaterEqual",ge="Identity",ye="IFFT",be="Imag",xe="IsFinite",ve="IsInf",we="IsNan",ke="LeakyRelu",Ie="Less",Se="LessEqual",Ne="LinSpace",Te="Log",$e="Log1p",Ce="LogicalAnd",Ee="LogicalNot",_e="LogicalOr",Ae="LogSoftmax",Re="LRN",Fe="LRNGrad",Oe="Max",De="Maximum",Me="MaxPool",Le="MaxPoolGrad",Pe="MaxPool3D",Be="MaxPool3DGrad",ze="MaxPoolWithArgmax",Ve="Mean",We="Min",Ue="Minimum",Ge="MirrorPad",He="Mod",je="Multinomial",Ke="Multiply",qe="Neg",Xe="NotEqual",Ye="NonMaxSuppressionV3",Qe="NonMaxSuppressionV4",Ze="NonMaxSuppressionV5",Je="OnesLike",et="OneHot",tt="Pack",nt="PadV2",rt="Pool",at="Pow",st="Prelu",it="Prod",ot="Range",ut="Real",lt="Reciprocal",ct="Relu",ht="Reshape",pt="ResizeNearestNeighbor",dt="ResizeNearestNeighborGrad",ft="ResizeBilinear",mt="ResizeBilinearGrad",gt="Relu6",yt="Reverse",bt="Round",xt="Rsqrt",vt="ScatterNd",wt="Select",kt="Selu",It="Slice",St="Sin",Nt="Sinh",Tt="Sign",$t="Sigmoid",Ct="Softplus",Et="Sqrt",_t="Sum",At="SpaceToBatchND",Rt="SplitV",Ft="Softmax",Ot="SparseFillEmptyRows",Dt="SparseReshape",Mt="SparseSegmentMean",Lt="SparseSegmentSum",Pt="SparseToDense",Bt="SquaredDifference",zt="Square",Vt="StridedSlice",Wt="StringNGrams",Ut="StringSplit",Gt="StringToHashBucketFast",Ht="Sub",jt="Tan",Kt="Tanh",qt="Tile",Xt="TopK",Yt="Transform",Qt="Transpose",Zt="Unique",Jt="Unpack",en="UnsortedSegmentSum",tn="ZerosLike",nn="Step",rn="FromPixels",an="RotateWithOffset",sn="_FusedMatMul",on="FusedConv2D",un="FusedDepthwiseConv2D"},6151:(e,t,n)=>{"use strict";n.d(t,{pI:()=>u,uk:()=>l,tr:()=>c,wC:()=>h,Li:()=>p,nE:()=>d,bt:()=>f,T3:()=>m});var r=n(2885),a=n(5938),s=n(4706);const i=(0,a.R)("kernelRegistry",(()=>new Map)),o=(0,a.R)("gradRegistry",(()=>new Map));function u(e,t){const n=g(e,t);return i.get(n)}function l(e){return o.get(e)}function c(e){const t=i.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function h(e){const{kernelName:t,backendName:n}=e,r=g(t,n);i.has(r)&&s.Z(`The kernel '${t}' for backend '${n}' is already registered`),i.set(r,e)}function p(e){const{kernelName:t}=e;o.has(t)&&(0,r.OB)().getBool("DEBUG")&&s.Z(`Overriding the gradient for '${t}'`),o.set(t,e)}function d(e,t){const n=g(e,t);if(!i.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);i.delete(n)}function f(e){if(!o.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);o.delete(e)}function m(e,t){c(e).forEach((e=>{h(Object.assign({},e,{backendName:t}))}))}function g(e,t){return`${t}_${e}`}},4706:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a,c:()=>s});var r=n(2885);function a(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.warn(...e)}function s(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.log(...e)}},6235:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({abs_:function(e){const t=(0,s._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.BV.runKernel(a.yj,e)}{const e={x:t};return r.BV.runKernel(a.SY,e)}}})},7839:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({acos_:function(e){const t={x:(0,s._1)(e,"x","acos")};return r.BV.runKernel(a.VG,t)}})},1470:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({acosh_:function(e){const t={x:(0,s._1)(e,"x","acosh")};return r.BV.runKernel(a.Sp,t)}})},6407:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({add_:function(e,t){let n=(0,i._1)(e,"a","add"),o=(0,i._1)(t,"b","add");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.mm,u)}})},3135:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({addN_:function(e){i.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),i.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,s._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!i.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const o=t;return r.BV.runKernel(a.Xz,o)}})},781:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({all_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","all","bool")},o={axis:t,keepDims:n};return r.BV.runKernel(a.oT,i,o)}})},2998:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({any_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","any","bool")},o={axis:t,keepDims:n};return r.BV.runKernel(a.IK,i,o)}})},47:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({argMax_:function(e,t=0){const n={x:(0,s._1)(e,"x","argMax")},i={axis:t};return r.BV.runKernel(a.sJ,n,i)}})},7394:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({argMin_:function(e,t=0){const n={x:(0,s._1)(e,"x","argMin")},i={axis:t};return r.BV.runKernel(a.aJ,n,i)}})},2421:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({asin_:function(e){const t={x:(0,s._1)(e,"x","asin")};return r.BV.runKernel(a.M2,t)}})},1891:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({asinh_:function(e){const t={x:(0,s._1)(e,"x","asinh")};return r.BV.runKernel(a.qw,t)}})},7037:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({atan_:function(e){const t={x:(0,s._1)(e,"x","atan")};return r.BV.runKernel(a.jM,t)}})},9812:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({atan2_:function(e,t){let n=(0,i._1)(e,"a","atan2"),o=(0,i._1)(t,"b","atan2");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.QC,u)}})},369:(e,t,n)=>{"use strict";n.d(t,{C:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({atanh_:function(e){const t={x:(0,s._1)(e,"x","atanh")};return r.BV.runKernel(a.Oy,t)}})},5176:(e,t,n)=>{"use strict";n.d(t,{w:()=>h});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2271),u=n(2582),l=n(2668),c=n(4968);const h=(0,l.op)({avgPool_:function(e,t,n,l,h){const p=(0,s._1)(e,"x","avgPool","float32");i.hu(u.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let d=p,f=!1;3===p.rank&&(f=!0,d=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===d.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${d.rank}.`)),null!=h&&i.hu(i.GN(l),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${h} but got pad ${l}.`));const m={x:d},g={filterSize:t,strides:n,pad:l,dimRoundingMode:h};let y=r.BV.runKernel(a.Jh,m,g);return y=(0,o.p)(y,p.dtype),f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1749:(e,t,n)=>{"use strict";n.d(t,{u:()=>c});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2271),u=n(2668),l=n(4968);const c=(0,u.op)({avgPool3d_:function(e,t,n,u,c,h="NDHWC"){const p=(0,s._1)(e,"x","avgPool3d","float32");let d=p,f=!1;4===p.rank&&(f=!0,d=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),i.hu(5===d.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${d.rank}.`)),i.hu("NDHWC"===h,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${h}`)),null!=c&&i.hu(i.GN(u),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const m={x:d},g={filterSize:t,strides:n,pad:u,dimRoundingMode:c,dataFormat:h};let y=r.BV.runKernel(a._k,m,g);return y=(0,o.p)(y,d.dtype),f?(0,l.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},3591:(e,t,n)=>{"use strict";n.d(t,{YB:()=>a,Vh:()=>s,kz:()=>i,rv:()=>o,lB:()=>u,Q3:()=>l,LJ:()=>c,sY:()=>h});var r=n(569);function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function i(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function o(e,t){return s(e,t.map((e=>1)),t)}function u(e,t,n){r.hu(a(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function h(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},8441:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({batchToSpaceND_:function(e,t,n){const o=(0,s._1)(e,"x","batchToSpaceND"),u=t.reduce(((e,t)=>e*t));i.hu(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),i.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),i.hu(o.shape[0]%u==0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`));const l={x:o},c={blockShape:t,crops:n};return r.BV.runKernel(a.zw,l,c)}})},7505:(e,t,n)=>{"use strict";n.d(t,{t:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(4968);const u=(0,n(2668).op)({batchNorm_:function(e,t,n,u,l,c){null==c&&(c=.001);const h=(0,s._1)(e,"x","batchNorm"),p=(0,s._1)(t,"mean","batchNorm"),d=(0,s._1)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,s._1)(l,"scale","batchNorm")),null!=u&&(m=(0,s._1)(u,"offset","batchNorm")),i.hu(p.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.hu(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.hu(null==f||p.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g=function(e){let t;return t=0===e.rank||1===e.rank?(0,o.X)(e,[1,1,1,e.size]):2===e.rank?(0,o.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(h),y={x:g,scale:f,offset:m,mean:p,variance:d},b={varianceEpsilon:c},x=r.BV.runKernel(a.sH,y,b);return(0,o.X)(x,h.shape)}})},3865:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({bincount_:function(e,t,n){const o=(0,s._1)(e,"x","bincount"),u=(0,s._1)(t,"weights","bincount");i.hu("int32"===o.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`)),i.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.hu(u.size===o.size||0===u.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${u.shape}.`));const l={x:o,weights:u},c={size:n};return r.BV.runKernel(a.zv,l,c)}})},8194:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({broadcastArgs_:function(e,t){const n=(0,s._1)(e,"s0","broadcastArgs","int32"),i=(0,s._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==i.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${i.rank}`);const o={s0:n,s1:i};return r.BV.runKernel(a.eE,o)}})},8247:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(8723),o=n(2668),u=n(4968);const l=(0,o.op)({broadcastTo_:function(e,t){let n=(0,s._1)(e,"broadcastTo","x");const o=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,u.X)(n,e)}const l=n.shape,c=Array.from(t);for(let e=t.length-1;e>=0;e--)if(l[e]===t[e])c[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(0===c.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.d)(n);const h={x:n},p={reps:c};return r.BV.runKernel(a.n9,h,p)}})},2200:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}n.d(t,{XF:()=>r,RR:()=>a,$N:()=>s})},2657:(e,t,n)=>{"use strict";n.d(t,{f:()=>s});var r=n(4077),a=n(569);function s(e,t="float32",n){return t=t||"float32",a.Mu(e),new r.YD(e,t,n)}},2271:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({cast_:function(e,t){const n=(0,s._1)(e,"x","cast");if(!i.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:t};return r.BV.runKernel(a.RF,o,u)}})},6825:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({ceil_:function(e){const t={x:(0,s._1)(e,"x","ceil","float32")};return r.BV.runKernel(a.gJ,t)}})},2279:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({clipByValue_:function(e,t,n){const o=(0,s._1)(e,"x","clipByValue");i.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const u={x:o},l={clipValueMin:t,clipValueMax:n};return r.BV.runKernel(a.xn,u,l)}})},8723:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({clone_:function(e){const t={x:(0,s._1)(e,"x","clone","string_or_numeric")};return r.BV.runKernel(a.iJ,t)}})},1661:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({complex_:function(e,t){const n=(0,s._1)(e,"real","complex"),o=(0,s._1)(t,"imag","complex");i.k5(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r.BV.runKernel(a.Zz,u)}})},6884:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(8723);const u=(0,n(2668).op)({concat_:function(e,t=0){(0,i.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,s.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.d)(n[0]);const u=n,l={axis:t};return r.BV.runKernel(a.Eh,u,l)}})},1355:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var r=n(3740),a=n(569),s=n(4794),i=n(2582),o=n(2668),u=n(4968);const l=(0,o.op)({conv1d_:function(e,t,n,o,l="NWC",c=1,h){const p=(0,r._1)(e,"x","conv1d"),d=(0,r._1)(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=(0,u.X)(p,[1,p.shape[0],p.shape[1]])),a.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),a.hu(3===d.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${d.rank}.`)),null!=h&&a.hu(a.GN(o),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${o}.`)),a.hu(f.shape[2]===d.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${d.shape[1]}.`)),a.hu(i.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),a.hu("NWC"===l,(()=>`Error in conv1d: got dataFormat of ${l} but only NWC is currently supported.`));const g=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),y=(0,u.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],x=[1,c],v=(0,s.T)(y,g,b,o,"NHWC",x,h);return m?(0,u.X)(v,[v.shape[2],v.shape[3]]):(0,u.X)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},4794:(e,t,n)=>{"use strict";n.d(t,{T:()=>c});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv2d_:function(e,t,n,u,c="NHWC",h=[1,1],p){const d=(0,s._1)(e,"x","conv2d","float32"),f=(0,s._1)(t,"filter","conv2d","float32");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),null!=p&&i.hu(i.GN(u),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${u}.`));const y="NHWC"===c?m.shape[3]:m.shape[1];i.hu(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),i.hu(o.jT(n,h),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`));const b={x:m,filter:f},x={strides:n,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p},v=r.BV.runKernel(a.mh,b,x);return g?(0,l.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},9832:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var r=n(7097),a=n(9121),s=n(569),i=n(2668),o=n(4968);const u=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,u,l="NHWC",c){s.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let h=e,p=t,d=!1;3===t.rank&&(d=!0,p=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),s.hu(4===h.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${h.length}.`)),s.hu(4===p.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`)),s.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const f="NHWC"===l?h[3]:h[1],m="NHWC"===l?p.shape[3]:p.shape[1];s.hu(f===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`)),s.hu(m===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`)),null!=c&&s.hu(s.GN(u),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const g={dy:p,filter:n},y={strides:i,pad:u,dataFormat:l,dimRoundingMode:c,inputShape:h},b=r.BV.runKernel(a.wm,g,y);return d?(0,o.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},1405:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var r=n(3740),a=n(9832);const s=(0,n(2668).op)({conv2dTranspose_:function(e,t,n,s,i,o){const u=(0,r._1)(e,"x","conv2dTranspose"),l=(0,r._1)(t,"filter","conv2dTranspose");return(0,a._)(n,u,l,s,i,"NHWC",o)}})},473:(e,t,n)=>{"use strict";n.d(t,{p:()=>c});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv3d_:function(e,t,n,u,c="NDHWC",h=[1,1,1]){const p=(0,s._1)(e,"x","conv3d"),d=(0,s._1)(t,"filter","conv3d");let f=p,m=!1;4===p.rank&&(m=!0,f=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),i.hu(5===f.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`)),i.hu(5===d.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${d.rank}.`)),i.hu(f.shape[4]===d.shape[3],(()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${d.shape[3]}.`)),i.hu((0,o.jT)(n,h),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`)),i.hu("NDHWC"===c,(()=>`Error in conv3d: got dataFormat of ${c} but only NDHWC is currently supported.`));const g={x:f,filter:d},y={strides:n,pad:u,dataFormat:c,dilations:h},b=r.BV.runKernel(a.x1,g,y);return m?(0,l.X)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},2582:(e,t,n)=>{"use strict";function r(e,t,n,r,a="NHWC",s){return i(e,[...t,e[3]],n,s,r,null,null,m(a))}function a(e,t,n,r,a,s,o="channelsLast"){const[u,c]=l(t);let h;if("channelsLast"===o)h=[u,c,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);h=[u,c,e[1],e[1]]}return i(e,h,n,r,a,s,!1,o)}function s(e,t,n,r,a,s,i="NDHWC"){const[u,l,h]=c(t);let p,d;if("NDHWC"===i)d="channelsLast",p=[u,l,h,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",p=[u,l,h,e[1],e[1]]}return o(e,p,n,r,a,!1,d,s)}function i(e,t,n,r,a,s,i=!1,o="channelsLast"){let[c,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[c,d,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[c,m,d,f]=e}const[g,y,,b]=t,[x,v]=l(n),[w,k]=l(r),I=h(g,w),S=h(y,k),{padInfo:N,outHeight:T,outWidth:$}=function(e,t,n,r,a,s,i,o,l){let c,h,d;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=u(e,t,n));const s=e[1];return[p((e[0]-t+2*r)/n+1,a),p((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);h=a[0],d=a[1]}else if("same"===e){h=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(h-1)*r+s-t),o=Math.max(0,(d-1)*a+i-n),u=Math.floor(e/2),l=e-u,p=Math.floor(o/2);c={top:u,bottom:l,left:p,right:o-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-s+1)/r),d=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const u="channelsLast"===l?e[1][0]:e[2][0],f="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];c={top:u,bottom:f,left:m,right:g,type:0===u&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},h=p((t-s+u+f)/r+1,o),d=p((n-i+m+g)/a+1,o)}}return{padInfo:c,outHeight:h,outWidth:d}}(a,d,f,x,v,I,S,s,o),C=i?b*m:b;let E;return"channelsFirst"===o?E=[c,C,T,$]:"channelsLast"===o&&(E=[c,T,$,C]),{batchSize:c,dataFormat:o,inHeight:d,inWidth:f,inChannels:m,outHeight:T,outWidth:$,outChannels:C,padInfo:N,strideHeight:x,strideWidth:v,filterHeight:g,filterWidth:y,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationHeight:w,dilationWidth:k,inShape:e,outShape:E,filterShape:t}}function o(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,d,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,d,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,g,d,f,m]=e}const[y,b,x,,v]=t,[w,k,I]=c(n),[S,N,T]=c(r),$=h(y,S),C=h(b,N),E=h(x,T),{padInfo:_,outDepth:A,outHeight:R,outWidth:F}=function(e,t,n,r,a,s,i,o,l,c,h){let d,f,m,g;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=u(e,t,r));const i=e[1],o=e[2];return[p((e[0]-t+2*a)/r+1,s),p((i-t+2*a)/r+1,s),p((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,h);f=s[0],m=s[1],g=s[2]}else if("same"===e){f=Math.ceil(t/a),m=Math.ceil(n/s),g=Math.ceil(r/i);const e=(f-1)*a+o-t,u=(m-1)*s+l-n,h=(g-1)*i+c-r,p=Math.floor(e/2),y=e-p,b=Math.floor(u/2),x=u-b,v=Math.floor(h/2);d={top:b,bottom:x,left:v,right:h-v,front:p,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-o+1)/a),m=Math.ceil((n-l+1)/s),g=Math.ceil((r-c+1)/i)}return{padInfo:d,outDepth:f,outHeight:m,outWidth:g}}(a,d,f,m,w,k,I,$,C,E,o),O=s?v*g:v;let D;return"channelsFirst"===i?D=[l,O,A,R,F]:"channelsLast"===i&&(D=[l,A,R,F,O]),{batchSize:l,dataFormat:i,inDepth:d,inHeight:f,inWidth:m,inChannels:g,outDepth:A,outHeight:R,outWidth:F,outChannels:O,padInfo:_,strideDepth:w,strideHeight:k,strideWidth:I,filterDepth:y,filterHeight:b,filterWidth:x,effectiveFilterDepth:$,effectiveFilterHeight:C,effectiveFilterWidth:E,dilationDepth:S,dilationHeight:N,dilationWidth:T,inShape:e,outShape:D,filterShape:t}}function u(e,t,n,r=1){const a=h(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function l(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function c(e){return"number"==typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function d(e){const[t,n,r]=l(e);return 1===t&&1===n&&1===r}function f(e,t){return d(e)||d(t)}function m(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}n.d(t,{Rf:()=>r,Xw:()=>a,pl:()=>s,Ix:()=>i,jw:()=>o,aO:()=>u,I0:()=>d,jT:()=>f,sl:()=>m})},173:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({cos_:function(e){const t={x:(0,s._1)(e,"x","cos","float32")};return r.BV.runKernel(a.mc,t)}})},2699:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({cosh_:function(e){const t={x:(0,s._1)(e,"x","cosh","float32")};return r.BV.runKernel(a.TR,t)}})},7405:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({cumsum_:function(e,t=0,n=!1,i=!1){const o={x:(0,s._1)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:i};return r.BV.runKernel(a.iH,o,u)}})},5746:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({denseBincount_:function(e,t,n,o=!1){const u=(0,s._1)(e,"x","denseBincount"),l=(0,s._1)(t,"weights","denseBincount");i.hu("int32"===u.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${u.dtype}`)),i.hu(u.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`)),i.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.hu(l.size===u.size||0===l.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: ${l.shape}.`));const c={x:u,weights:l},h={size:n,binaryOutput:o};return r.BV.runKernel(a.QR,c,h)}})},9112:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({depthToSpace_:function(e,t,n="NHWC"){const o=(0,s._1)(e,"x","depthToSpace","float32"),u="NHWC"===n?o.shape[1]:o.shape[2],l="NHWC"===n?o.shape[2]:o.shape[3],c="NHWC"===n?o.shape[3]:o.shape[1];i.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),i.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),i.hu(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),i.hu(c%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${o.shape}`));const h={x:o},p={blockSize:t,dataFormat:n};return r.BV.runKernel(a.T0,h,p)}})},4718:(e,t,n)=>{"use strict";n.d(t,{B:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({depthwiseConv2d_:function(e,t,n,o,l="NHWC",c=[1,1],h){const p=(0,s._1)(e,"x","depthwiseConv2d","float32"),d=(0,s._1)(t,"filter","depthwiseConv2d","float32");let f=p,m=!1;3===p.rank&&(m=!0,f=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===f.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),i.hu(4===d.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),i.hu(f.shape[3]===d.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null!=h&&i.hu(i.GN(o),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${o}.`));const g={x:f,filter:d},y={strides:n,pad:o,dataFormat:l,dilations:c,dimRoundingMode:h},b=r.BV.runKernel(a.ci,g,y);return m?(0,u.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},557:(e,t,n)=>{"use strict";n.d(t,{W:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({dilation2d_:function(e,t,n,o,l=[1,1],c="NHWC"){const h=(0,s._1)(e,"x","dilation2d"),p=(0,s._1)(t,"filter","dilation2d");i.hu(3===h.rank||4===h.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${h.rank}.`)),i.hu(3===p.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${p.rank}.`)),i.hu("NHWC"===c,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`));let d=h,f=!1;3===h.rank&&(d=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),f=!0);const m={x:d,filter:p},g={strides:n,pad:o,dilations:l},y=r.BV.runKernel(a.p4,m,g);return f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1274:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(9165);const u=(0,n(2668).op)({div_:function(e,t){let n=(0,i._1)(e,"a","div"),u=(0,i._1)(t,"b","div");if([n,u]=(0,s.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,o.q)(n,u);const l={a:n,b:u};return r.BV.runKernel(a.oH,l,{})}})},9322:(e,t,n)=>{"use strict";n.d(t,{N:()=>c});var r=n(747),a=n(3740),s=n(1274),i=n(6477),o=n(2668),u=n(5912),l=n(6577);const c=(0,o.op)({divNoNan_:function(e,t){let n=(0,a._1)(e,"a","div"),o=(0,a._1)(t,"b","div");[n,o]=(0,r.makeTypesMatch)(n,o);const c=(0,s.h)(n,o),h=(0,l.P)(c),p=(0,i.D)(o,h);return(0,u.a)(p,h,c)}})},4653:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,s._1)(e,`tensors${t}`,"einsum"))),i={equation:e};return r.BV.runKernel(a.$g,n,i)}})},3233:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({elu_:function(e){const t={x:(0,s._1)(e,"x","elu","float32")};return r.BV.runKernel(a.SX,t)}})},6477:(e,t,n)=>{"use strict";n.d(t,{D:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({equal_:function(e,t){let n=(0,i._1)(e,"a","equal","string_or_numeric"),u=(0,i._1)(t,"b","equal","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.hd,l)}})},4650:(e,t,n)=>{"use strict";n.d(t,{q:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2271);const u=(0,n(2668).op)({erf_:function(e){let t=(0,s._1)(e,"x","erf");i.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,o.p)(t,"float32"));const n={x:t};return r.BV.runKernel(a.Om,n)}})},4842:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({exp_:function(e){const t={x:(0,s._1)(e,"x","exp")};return r.BV.runKernel(a.NE,t)}})},1300:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({expandDims_:function(e,t=0){const n=(0,s._1)(e,"x","expandDims","string_or_numeric");i.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},u={dim:t};return r.BV.runKernel(a.YF,o,u)}})},3426:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({expm1_:function(e){const t={x:(0,s._1)(e,"x","expm1")};return r.BV.runKernel(a.Y0,t)}})},4006:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(7097),a=n(9121);function s(e,t,n){const s={shape:e,value:t,dtype:n};return r.BV.runKernel(a.de,{},s)}},6943:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({floor_:function(e){const t={x:(0,s._1)(e,"x","floor","float32")};return r.BV.runKernel(a.OR,t)}})},9165:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,i._1)(e,"a","floorDiv"),o=(0,i._1)(t,"b","floorDiv");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.je,u)}})},2277:(e,t,n)=>{"use strict";n.r(t),n.d(t,{conv2d:()=>b,depthwiseConv2d:()=>k,matMul:()=>S});var r=n(7097),a=n(633),s=n(9121),i=n(747),o=n(3740),u=n(569),l=n(6407),c=n(2200),h=n(4794),p=n(2668),d=n(4968);const f=(0,p.op)({conv2DBackpropFilter_:function(e,t,n,a,i,o="NHWC",l){let c=e;3===e.rank&&(c=(0,d.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,d.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),u.hu(4===c.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${c.shape}.`)),u.hu(4===h.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${h.shape}.`)),u.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const p="NHWC"===o?c.shape[3]:c.shape[1],f="NHWC"===o?h.shape[3]:h.shape[1];u.hu(p===n[2],(()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${n[2]}.`)),u.hu(f===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`)),null!=l&&u.hu(u.GN(i),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${l} but got pad ${i}.`));const m={x:c,dy:h},g={strides:a,pad:i,dataFormat:o,dimRoundingMode:l,filterShape:n};return r.BV.runKernel(s.wU,m,g)}});var m=n(9832),g=n(2582),y=n(9323);const b=(0,p.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:p,dataFormat:b="NHWC",dilations:x=[1,1],dimRoundingMode:v,bias:w,activation:k="linear",preluActivationWeights:I,leakyreluAlpha:S}){if(k=k||"linear",!1===(0,y.uy)(r.BV.state.gradientDepth,k)){let r=(0,h.T)(e,t,n,p,b,x,v);return null!=w&&(r=(0,l.I)(r,w)),(0,y.QH)(r,k,I,S)}const N=(0,o._1)(e,"x","conv2d","float32"),T=(0,o._1)(t,"filter","conv2d","float32");let $=N,C=!1;3===N.rank&&(C=!0,$=(0,d.X)(N,[1,N.shape[0],N.shape[1],N.shape[2]])),u.hu(4===$.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${$.rank}.`)),u.hu(4===T.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${T.rank}.`)),null!=v&&u.hu(u.GN(p),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${v} but got pad ${p}.`)),u.hu($.shape[3]===T.shape[2],(()=>`Error in conv2d: depth of input (${$.shape[3]}) must match input depth for filter ${T.shape[2]}.`)),u.hu(g.jT(n,x),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${x}'`)),u.hu("NHWC"===b,(()=>`Error in conv2d: got dataFormat of ${b} but only NHWC is currently supported.`));const E=g.Ix($.shape,T.shape,n,x,p,v);let _,A;null!=w&&(_=(0,o._1)(w,"bias","fused conv2d"),[_]=(0,i.makeTypesMatch)(_,N),c.$N(E.outShape,_.shape)),null!=I&&(A=(0,o._1)(I,"prelu weights","fused conv2d"));const R=(e,t)=>{const[r,a,s,i]=t,o=(0,y.Fr)(e,s,k);u.hu(g.I0(x),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${x}'`));const l=[(0,m._)(a.shape,o,r,n,p),f(a,o,r.shape,n,p)];if(null!=i){const e=(0,y.pf)(i,o);l.push(e)}return l},F={x:$,filter:T,bias:_,preluActivationWeights:A},O={strides:n,pad:p,dataFormat:b,dilations:x,dimRoundingMode:v,activation:k,leakyreluAlpha:S};if(null==w){const e=(0,a.cb)(((e,t,n)=>{let a=r.BV.runKernel(s._V,F,O);return n([t,e,a]),C&&(a=(0,d.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:R}}));return e($,T)}{const e=(0,a.cb)(((e,t,n,a)=>{let i=r.BV.runKernel(s._V,F,O);return a([t,e,i,n]),C&&(i=(0,d.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:R}}));return e($,T,_)}}});var x=n(4718);const v=(0,p.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,i,o=[1,1],u){let l=e;3===e.rank&&(l=(0,d.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=(0,d.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:l,dy:c},p={strides:a,pad:i,dimRoundingMode:u,dilations:o,filterShape:n};return r.BV.runKernel(s.sL,h,p)}}),w=(0,p.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,i,o=[1,1],u){let l=t,c=!1;3===t.rank&&(c=!0,l=(0,d.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:l,filter:n},p={strides:a,pad:i,dimRoundingMode:u,dilations:o,inputShape:e},f=r.BV.runKernel(s.y7,h,p);return c?(0,d.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),k=(0,p.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:h,dataFormat:p="NHWC",dilations:f=[1,1],dimRoundingMode:m,bias:b,activation:k="linear",preluActivationWeights:I,leakyreluAlpha:S}){if(!1===(0,y.uy)(r.BV.state.gradientDepth,k)){let r=(0,x.B)(e,t,n,h,p,f,m);return null!=b&&(r=(0,l.I)(r,b)),(0,y.QH)(r,k,I,S)}const N=(0,o._1)(e,"x","depthwiseConv2d","float32"),T=(0,o._1)(t,"filter","depthwiseConv2d","float32");let $=N,C=!1;3===N.rank&&(C=!0,$=(0,d.X)(N,[1,N.shape[0],N.shape[1],N.shape[2]])),u.hu(4===$.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${$.rank}.`)),u.hu(4===T.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${T.rank}.`)),u.hu($.shape[3]===T.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${$.shape[3]}) must match the inChannels dimension in filter ${T.shape[2]}.`)),null==f&&(f=[1,1]),u.hu(g.jT(n,f),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${f}'`)),null!=m&&u.hu(u.GN(h),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${m} but got pad ${h}.`));const E=g.Ix($.shape,T.shape,n,f,h,m,!0);let _,A;null!=b&&(_=(0,o._1)(b,"bias","fused conv2d"),[_]=(0,i.makeTypesMatch)(_,N),c.$N(E.outShape,_.shape)),null!=I&&(A=(0,o._1)(I,"prelu weights","fused depthwiseConv2d"));const R=(e,t)=>{u.hu(g.I0(f),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${f}'`));const[r,a,s,i]=t,o=(0,y.Fr)(e,s,k),l=w(a.shape,o,r,n,h,f,m),c=v(a,o,r.shape,n,h,f,m);return null!=i?[l,c,(0,y.pf)(_,o)]:[l,c]},F={x:$,filter:T,bias:_,preluActivationWeights:A},O={strides:n,pad:h,dataFormat:p,dilations:f,dimRoundingMode:m,activation:k,leakyreluAlpha:S};if(null==b){const e=(0,a.cb)(((e,t,n)=>{let a=r.BV.runKernel(s.lu,F,O);return n([t,e,a]),C&&(a=(0,d.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:R}}));return e($,T)}{const e=(0,a.cb)(((e,t,n,a)=>{let i=r.BV.runKernel(s.lu,F,O);return a([t,e,i,n]),C&&(i=(0,d.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:R}}));return e($,T,_)}}});var I=n(8687);const S=(0,p.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:h=!1,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}){if(!1===(0,y.uy)(r.BV.state.gradientDepth,f)){let r=(0,I.O)(e,t,n,h);return null!=p&&(r=(0,l.I)(r,p)),(0,y.QH)(r,f,m,g)}let b=(0,o._1)(e,"a","fused matMul"),x=(0,o._1)(t,"b","fused matMul");[b,x]=(0,i.makeTypesMatch)(b,x);const v=n?b.shape[b.rank-2]:b.shape[b.rank-1],w=h?x.shape[x.rank-1]:x.shape[x.rank-2],k=n?b.shape[b.rank-1]:b.shape[b.rank-2],S=h?x.shape[x.rank-2]:x.shape[x.rank-1],N=b.shape.slice(0,-2),T=x.shape.slice(0,-2),$=u.NA(N),C=u.NA(T);u.hu(b.rank>=2&&x.rank>=2&&b.rank===x.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${b.rank} and ${x.rank}.`)),u.hu(u.cO(N,T),(()=>`Error in fused matMul: outer dimensions (${N}) and (${T}) of Tensors with shapes ${b.shape} and ${x.shape} must match.`)),u.hu(v===w,(()=>`Error in fused matMul: inner shapes (${v}) and (${w}) of Tensors with shapes ${b.shape} and ${x.shape} and transposeA=${n} and transposeB=${h} must match.`));const E=b.shape.slice(0,-2).concat([k,S]),_=n?(0,d.X)(b,[$,v,k]):(0,d.X)(b,[$,k,v]),A=h?(0,d.X)(x,[C,S,w]):(0,d.X)(x,[C,w,S]);let R,F;null!=p&&(R=(0,o._1)(p,"bias","fused matMul"),[R]=(0,i.makeTypesMatch)(R,b),c.$N(E,R.shape)),null!=m&&(F=(0,o._1)(m,"prelu weights","fused matMul"));const O=(e,t)=>{const[r,a,s,i]=t,o=(0,y.Fr)((0,d.X)(e,s.shape),s,f);let u,l;return n||h?!n&&h?(u=(0,I.O)(o,a,!1,!1),l=(0,I.O)(o,r,!0,!1)):n&&!h?(u=(0,I.O)(a,o,!1,!0),l=(0,I.O)(r,o,!1,!1)):(u=(0,I.O)(a,o,!0,!0),l=(0,I.O)(o,r,!0,!0)):(u=(0,I.O)(o,a,!1,!0),l=(0,I.O)(r,o,!0,!1)),null!=p?[u,l,(0,y.pf)(i,o)]:[u,l]},D={a:_,b:A,bias:R,preluActivationWeights:F},M={transposeA:n,transposeB:h,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,a.cb)(((e,t,n)=>{const a=r.BV.runKernel(s.us,D,M);return n([e,t,a]),{value:(0,d.X)(a,E),gradFunc:O}}));return e(_,A)}{const e=(0,a.cb)(((e,t,n,a)=>{const i=r.BV.runKernel(s.us,D,M);return a([e,t,i,n]),{value:(0,d.X)(i,E),gradFunc:O}}));return e(_,A,R)}}})},9323:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>f,pf:()=>m,QH:()=>g,uy:()=>y});var r=n(2200),a=n(3233),s=n(9133),i=n(4841),o=n(8151),u=n(7409),l=n(3582),c=n(4968),h=n(625),p=n(1901),d=n(5475);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,i.d)(e,(0,p.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const a=r.RR(e.shape,t.shape);return a.length>0&&(n=(0,d.S)(n,a)),(0,c.X)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,u.U)(e);if("elu"===t)return(0,a.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,o.A)(e,n);if("leakyrelu"===t)return(0,s.h)(e,r);if("sigmoid"===t)return(0,h.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},4926:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({gather_:function(e,t,n=0,i=0){const o={x:(0,s._1)(e,"x","gather"),indices:(0,s._1)(t,"indices","gather","int32")},u={axis:n,batchDims:i};return r.BV.runKernel(a.qi,o,u)}})},7494:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({gatherND_:function(e,t){const n=(0,s._1)(t,"indices","gatherND","int32"),i={params:(0,s._1)(e,"x","gatherND","string_or_numeric"),indices:n};return r.BV.runKernel(a.q1,i)}})},636:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({greater_:function(e,t){let n=(0,i._1)(e,"a","greater","string_or_numeric"),u=(0,i._1)(t,"b","greater","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.iZ,l)}})},7630:(e,t,n)=>{"use strict";n.d(t,{b:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,i._1)(e,"a","greaterEqual","string_or_numeric"),u=(0,i._1)(t,"b","greaterEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.Ac,l)}})},4386:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({imag_:function(e){const t={input:(0,s._1)(e,"input","imag")};return r.BV.runKernel(a.J_,t)}})},6230:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({isNaN_:function(e){const t={x:(0,s._1)(e,"x","isNaN")};return r.BV.runKernel(a.r7,t)}})},9133:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,s._1)(e,"x","leakyRelu")},i={alpha:t};return r.BV.runKernel(a.J$,n,i)}})},6573:(e,t,n)=>{"use strict";n.d(t,{d:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({less_:function(e,t){let n=(0,i._1)(e,"a","less","string_or_numeric"),u=(0,i._1)(t,"b","less","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.vt,l)}})},624:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,i._1)(e,"a","lessEqual","string_or_numeric"),u=(0,i._1)(t,"b","lessEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.CA,l)}})},4135:(e,t,n)=>{"use strict";n.d(t,{S:()=>s});var r=n(7097),a=n(9121);function s(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return r.BV.runKernel(a.e7,{},s)}},9648:(e,t,n)=>{"use strict";n.d(t,{G:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({localResponseNormalization_:function(e,t=5,n=1,o=1,l=.5){const c=(0,s._1)(e,"x","localResponseNormalization");i.hu(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),i.hu(i.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let h=c,p=!1;3===c.rank&&(p=!0,h=(0,u.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const d={x:h},f={depthRadius:t,bias:n,alpha:o,beta:l},m=r.BV.runKernel(a.eZ,d,f);return p?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},2597:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({log_:function(e){const t={x:(0,s._1)(e,"x","log","float32")};return r.BV.runKernel(a.Zb,t)}})},7474:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({log1p_:function(e){const t={x:(0,s._1)(e,"x","log1p")};return r.BV.runKernel(a.kU,t)}})},1510:(e,t,n)=>{"use strict";n.d(t,{C:()=>d});var r=n(633),a=n(3740),s=n(2271),i=n(4842),o=n(2597),u=n(3307),l=n(4841),c=n(2668),h=n(827),p=n(5475);const d=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const c=(0,r.cb)(((e,n)=>{const r=(0,u.F)(e,t,!0),a=(0,h.l)(e,r),c=(0,h.l)((0,s.p)(a,"float32"),(0,o.c)((0,p.S)((0,i.Q)(a),t,!0)));return n([c]),{value:c,gradFunc:(e,n)=>{const[r]=n,a=(0,i.Q)(r);return(0,h.l)(e,(0,l.d)((0,p.S)(e,t,!0),a))}}}));return c(n)}})},2856:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(2200);const o=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,s._1)(e,"a","logicalAnd","bool"),o=(0,s._1)(t,"b","logicalAnd","bool");(0,i.$N)(n.shape,o.shape);const u={a:n,b:o};return r.BV.runKernel(a.PY,u)}})},8651:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({logicalNot_:function(e){const t={x:(0,s._1)(e,"x","logicalNot","bool")};return r.BV.runKernel(a.Vf,t)}})},5750:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(2200);const o=(0,n(2668).op)({logicalOr_:function(e,t){const n=(0,s._1)(e,"a","logicalOr","bool"),o=(0,s._1)(t,"b","logicalOr","bool");(0,i.$N)(n.shape,o.shape);const u={a:n,b:o};return r.BV.runKernel(a.MZ,u)}})},9876:(e,t,n)=>{"use strict";var r;n.d(t,{I:()=>r}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},8687:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({matMul_:function(e,t,n=!1,o=!1){let u=(0,i._1)(e,"a","matMul"),l=(0,i._1)(t,"b","matMul");[u,l]=(0,s.makeTypesMatch)(u,l);const c={a:u,b:l},h={transposeA:n,transposeB:o};return r.BV.runKernel(a.XL,c,h)}})},3307:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({max_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","max")},o={reductionIndices:t,keepDims:n};return r.BV.runKernel(a.Yo,i,o)}})},1174:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({maxPool_:function(e,t,n,u,c){const h=(0,s._1)(e,"x","maxPool");let p=h,d=!1;3===h.rank&&(d=!0,p=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.hu(4===p.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`)),i.hu(o.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=c&&i.hu(i.GN(u),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const f={x:p},m={filterSize:t,strides:n,pad:u,dimRoundingMode:c},g=r.BV.runKernel(a.mT,f,m);return d?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},5020:(e,t,n)=>{"use strict";n.d(t,{Y:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({maxPool3d_:function(e,t=[1,1,1],n,o,l,c="NDHWC"){const h=(0,s._1)(e,"x","maxPool3d");let p=h,d=!1;4===h.rank&&(d=!0,p=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.hu(5===p.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${p.rank}.`)),i.hu("NDHWC"===c,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${c}`)),null!=l&&i.hu(i.GN(o),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${o}.`));const f={x:p},m={filterSize:t,strides:n,pad:o,dimRoundingMode:l,dataFormat:c},g=r.BV.runKernel(a.OA,f,m);return d?(0,u.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},6877:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({maxPoolWithArgmax_:function(e,t,n,i,o=!1){const u={x:(0,s._1)(e,"x","maxPoolWithArgmax")},l={filterSize:t,strides:n,pad:i,includeBatchInIndex:o},c=r.BV.runKernel(a.vF,u,l);return{result:c[0],indexes:c[1]}}})},632:(e,t,n)=>{"use strict";n.d(t,{g:()=>l});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200),u=n(2271);const l=(0,n(2668).op)({maximum_:function(e,t){let n=(0,i._1)(e,"a","maximum"),l=(0,i._1)(t,"b","maximum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.$N)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(a.BM,c)}})},5130:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({mean_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","mean")},o={axis:t,keepDims:n};return r.BV.runKernel(a.q2,i,o)}})},5735:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({min_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","min")},o={axis:t,keepDims:n};return r.BV.runKernel(a.c1,i,o)}})},4513:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200),u=n(2271);const l=(0,n(2668).op)({minimum_:function(e,t){let n=(0,i._1)(e,"a","minimum"),l=(0,i._1)(t,"b","minimum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.$N)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(a.q8,c)}})},1483:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({mirrorPad_:function(e,t,n){i.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=(0,s._1)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.hu(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const u="reflect"===n?1:0;for(let e=0;e<o.rank;e++)i.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.hu(t[e][0]>=0&&t[e][0]<=o.shape[e]-u&&t[e][1]>=0&&t[e][1]<=o.shape[e]-u,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${o.shape[e]-u} or less than 0 for input of shape ${o.shape}`));const l={paddings:t,mode:n},c={x:o};return r.BV.runKernel(a.jQ,c,l)}})},5228:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({mod_:function(e,t){let n=(0,i._1)(e,"a","mod"),o=(0,i._1)(t,"b","mod");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.Vb,u)}})},4841:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({mul_:function(e,t){let n=(0,i._1)(e,"a","mul"),o=(0,i._1)(t,"b","mul");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.wY,u)}})},686:(e,t,n)=>{"use strict";n.d(t,{S:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(2668),o=n(4968);const u=(0,i.op)({multinomial_:function(e,t,n,i=!1){const u=(0,s._1)(e,"logits","multinomial"),l=u.size,c=u.rank;if(l<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${l}.`);if(c>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${c}`);n=n||Math.random();const h={logits:1===c?(0,o.X)(u,[1,-1]):u},p={numSamples:t,seed:n,normalized:i},d=r.BV.runKernel(a.NZ,h,p);return 1===c?(0,o.X)(d,[d.size]):d}})},7370:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({neg_:function(e){const t={x:(0,s._1)(e,"x","neg")};return r.BV.runKernel(a.ku,t)}})},6500:(e,t,n)=>{"use strict";n.d(t,{Q:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,i._1)(e,"a","notEqual","string_or_numeric"),u=(0,i._1)(t,"b","notEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.yQ,l)}})},6708:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({oneHot_:function(e,t,n=1,i=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:(0,s._1)(e,"indices","oneHot","int32")},u={depth:t,onValue:n,offValue:i};return r.BV.runKernel(a.we,o,u)}})},4917:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var r=n(7097),a=n(569),s=n(1661),i=n(9640);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=(0,i.l)(e,"float32");return(0,s.P)(t,n)}const n=(0,a.p8)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},7846:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({onesLike_:function(e){const t={x:(0,s._1)(e,"x","onesLike")};return r.BV.runKernel(a.qW,t)}})},2668:(e,t,n)=>{"use strict";n.d(t,{z:()=>s,op:()=>i});var r=n(7097),a=n(569);const s="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const o=(...e)=>{r.BV.startScope(n);try{const t=i(...e);return(0,a.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(e){throw r.BV.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},4885:(e,t,n)=>{"use strict";n.d(t,{zvA:()=>I.z,WnP:()=>r.W,Khb:()=>a.K,__u:()=>s._,IHx:()=>i.I,QBD:()=>o.Q,$6P:()=>u.$,YjB:()=>l.Y,NqF:()=>c.N,vHJ:()=>h.v,ZRM:()=>p.Z,VfV:()=>d.V,z4N:()=>f.z,fvJ:()=>m.f,C80:()=>g.C,wS1:()=>y.w,uR5:()=>b.u,zEQ:()=>$,tgs:()=>E.t,Dxk:()=>A,JY5:()=>R,p3b:()=>F,E4h:()=>C.E,yE8:()=>O.y,anm:()=>Pn,XsQ:()=>D.X,UFq:()=>M.U,f3b:()=>L.f,pju:()=>P.p,mDi:()=>B.m,iUl:()=>z.i,d9v:()=>V.d,PYB:()=>W.P,zoF:()=>v.z,gME:()=>U,Izb:()=>G,MNy:()=>H,ZaL:()=>j,PAt:()=>K.P,Tek:()=>q.T,bc:()=>X.b,pdZ:()=>Y.p,$QV:()=>te,mCk:()=>ne.m,f9Y:()=>re.f,mew:()=>Xn,zbp:()=>ae.z,ppE:()=>se.p,nTT:()=>ie.n,B10:()=>oe.B,Ka3:()=>ue,WmZ:()=>le.W,hiC:()=>ce.h,NTj:()=>he.N,AKD:()=>pe,rvX:()=>Kn,WYO:()=>de.W,pyx:()=>fe.p,GRh:()=>qn,DgJ:()=>me.D,qNN:()=>ge.q,Qqt:()=>ye.Q,dt4:()=>be.d,t$B:()=>xe.t,iyy:()=>we,kp_:()=>un.k,hlL:()=>ke.h,GWj:()=>Ie.G,qPi:()=>Se.q,imm:()=>Qn,Iqj:()=>Ne.I,dbB:()=>jn.d,pjt:()=>Te.p,brS:()=>$e.b,Sxn:()=>ln.S,asL:()=>Ce.a,BHj:()=>Br,V3u:()=>Yn,wx0:()=>cn.w,xVT:()=>Ee,UWc:()=>_e,i2d:()=>Ae.i,hi7:()=>Re.h,d9m:()=>Fe.d,zN1:()=>Oe.z,$r2:()=>zr,SX3:()=>De.S,G9k:()=>Me.G,cM7:()=>Le.c,Krr:()=>Pe.K,e_t:()=>We,CmS:()=>Ue.C,l_t:()=>qe,HvI:()=>Xe.H,hJK:()=>Ye.h,K5V:()=>Qe.K,egP:()=>Je,MB5:()=>Vr,OI3:()=>w.O,Fp7:()=>He.F,_sB:()=>et._,YQQ:()=>tt.Y,Ip$:()=>nt.I,gWQ:()=>rt.g,J69:()=>at.J,ry_:()=>ot,VV$:()=>ut.V,LTh:()=>lt.L,VdP:()=>ct.V,wQq:()=>ht.w,Gi7:()=>dt,p_:()=>Un,dC7:()=>k.d,rq4:()=>ft,SJ_:()=>mt.S,W76:()=>ze.W,KOy:()=>Vn,Quu:()=>gt.Q,lfX:()=>yt.l,iUs:()=>st.i,JpU:()=>bt.J,op:()=>I.op,N2O:()=>xt,vku:()=>vt.v,pNR:()=>wt,koy:()=>kt,t1L:()=>It,lGY:()=>St,d_R:()=>$t,sQ3:()=>Ct.s,AL3:()=>Et.A,S0v:()=>_t.S,WVs:()=>At.W,TN_:()=>Rt,wzB:()=>Ot,nGf:()=>Dt,LGj:()=>Mt.L,w6H:()=>Lt.w,kwC:()=>Pt.k,M25:()=>Bt.M,UYe:()=>zt.U,btT:()=>Vt.b,XLQ:()=>J.X,GYS:()=>Wt.G,SDf:()=>Ut,diP:()=>Gt,sx7:()=>Ht,mG2:()=>jt,QEs:()=>hn.Q,NMM:()=>Kt.N,bp0:()=>qt.b,iD$:()=>Xt.i,snQ:()=>Gn.s,U8D:()=>Yt.U,U_I:()=>Qt,ODp:()=>Zt.O,XD2:()=>S.X,Xxe:()=>Jt.X,tdS:()=>Pr,O$l:()=>en.O,R_K:()=>tn.R,tPi:()=>N.t,jZU:()=>nn,SmN:()=>rn,CnO:()=>an,p0P:()=>sn,XAC:()=>on.X,Wvh:()=>Ve.W,fBT:()=>Tt.f,rVs:()=>Wr,ers:()=>Hn.e,uN7:()=>Lr,Vl2:()=>pn.V,_b3:()=>dn._,h62:()=>pt.h,$i:()=>fn.$,L9e:()=>mn.L,knu:()=>gn.k,Nbs:()=>yn.N,NXj:()=>bn.N,Z_8:()=>Ur,luU:()=>je.l,Smz:()=>Ke.S,ORZ:()=>xn.O,AEp:()=>T.A,XeE:()=>vn.X,RRF:()=>wn.R,odF:()=>In,wOQ:()=>Sn.w,yXz:()=>Nn,Bfx:()=>Tn,xZs:()=>$n,Gg6:()=>ve.G,hg7:()=>Cn.h,p4s:()=>Bn.p,Xu6:()=>En.X,Two:()=>_n.T,pUJ:()=>An,HHK:()=>Rn.H,VD$:()=>Fn,arb:()=>On.a,itS:()=>Dn.i,lls:()=>Mn.l,P84:()=>Ln.P});var r=n(6235),a=n(7839),s=n(1470),i=n(6407),o=n(3135),u=n(781),l=n(2998),c=n(47),h=n(7394),p=n(2421),d=n(1891),f=n(7037),m=n(9812),g=n(369),y=n(5176),b=n(1749),x=n(3740),v=n(6884),w=n(8687),k=n(4841),I=n(2668),S=n(625),N=n(2676),T=n(1869);const $=(0,I.op)({basicLSTMCell_:function(e,t,n,r,a,s){const o=(0,x._1)(e,"forgetBias","basicLSTMCell"),u=(0,x._1)(t,"lstmKernel","basicLSTMCell"),l=(0,x._1)(n,"lstmBias","basicLSTMCell"),c=(0,x._1)(r,"data","basicLSTMCell"),h=(0,x._1)(a,"c","basicLSTMCell"),p=(0,x._1)(s,"h","basicLSTMCell"),d=(0,v.z)([c,p],1),f=(0,w.O)(d,u),m=(0,i.I)(f,l),g=m.shape[0],y=m.shape[1]/4,b=[g,y],I=(0,N.t)(m,[0,0],b),$=(0,N.t)(m,[0,y],b),C=(0,N.t)(m,[0,2*y],b),E=(0,N.t)(m,[0,3*y],b),_=(0,i.I)((0,k.d)((0,S.X)(I),(0,T.A)($)),(0,k.d)(h,(0,S.X)((0,i.I)(o,C))));return[_,(0,k.d)((0,T.A)(_),(0,S.X)(E))]}});var C=n(8441),E=n(7505),_=n(569);const A=(0,I.op)({batchNorm2d_:function(e,t,n,r,a,s){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let l,c;return null!=a&&(l=(0,x._1)(a,"scale","batchNorm")),null!=r&&(c=(0,x._1)(r,"offset","batchNorm")),_.hu(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),_.hu(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),_.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&_.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&_.hu(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),(0,E.t)(i,o,u,c,l,s)}}),R=(0,I.op)({batchNorm3d_:function(e,t,n,r,a,s){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let l,c;return null!=a&&(l=(0,x._1)(a,"scale","batchNorm")),null!=r&&(c=(0,x._1)(r,"offset","batchNorm")),_.hu(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),_.hu(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),_.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&_.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&_.hu(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),(0,E.t)(i,o,u,c,l,s)}}),F=(0,I.op)({batchNorm4d_:function(e,t,n,r,a,s){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let l,c;return null!=a&&(l=(0,x._1)(a,"scale","batchNorm")),null!=r&&(c=(0,x._1)(r,"offset","batchNorm")),_.hu(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),_.hu(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),_.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&_.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&_.hu(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),(0,E.t)(i,o,u,c,l,s)}});var O=n(3865),D=n(8194),M=n(8247),L=n(2657),P=n(2271),B=n(6825),z=n(2279),V=n(8723),W=n(1661);const U=(0,I.op)({concat1d_:function(e){return(0,v.z)(e,0)}}),G=(0,I.op)({concat2d_:function(e,t){return(0,v.z)(e,t)}}),H=(0,I.op)({concat3d_:function(e,t){return(0,v.z)(e,t)}}),j=(0,I.op)({concat4d_:function(e,t){return(0,v.z)(e,t)}});var K=n(1355),q=n(4794),X=n(1405),Y=n(473),Q=n(7097),Z=n(9121),J=n(4968);const ee=(0,I.op)({conv3DBackpropInput_:function(e,t,n,r,a){_.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=(0,J.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];_.hu(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),_.hu(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),_.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),_.hu(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),_.hu(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},p=Q.BV.runKernel(Z.ik,c,h);return o?(0,J.X)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),te=(0,I.op)({conv3dTranspose_:function(e,t,n,r,a){const s=(0,x._1)(e,"x","conv3dTranspose"),i=(0,x._1)(t,"filter","conv3dTranspose");return ee(n,s,i,r,a)}});var ne=n(173),re=n(2699),ae=n(7405),se=n(5746),ie=n(9112),oe=n(4718);const ue=(0,I.op)({diag_:function(e){const t={x:(0,x._1)(e,"x","diag")};return Q.BV.runKernel(Z.$w,t)}});var le=n(557),ce=n(1274),he=n(9322);const pe=(0,I.op)({dot_:function(e,t){const n=(0,x._1)(e,"t1","dot"),r=(0,x._1)(t,"t2","dot");_.hu(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(_.hu(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=(0,J.X)(n,[1,-1]),t=(0,J.X)(r,[-1,1]),a=(0,w.O)(e,t);return(0,J.X)(a,[])}if(1===n.rank&&2===r.rank){const e=(0,J.X)(n,[1,-1]),t=(0,J.X)(r,[r.shape[0],r.shape[1]]),a=(0,w.O)(e,t);return(0,J.X)(a,[a.size])}if(2===n.rank&&1===r.rank){const e=(0,J.X)(r,[-1,1]),t=(0,w.O)(n,e);return(0,J.X)(t,[t.size])}{const e=(0,J.X)(r,[r.shape[0],r.shape[1]]);return(0,w.O)(n,e)}}});var de=n(4653),fe=n(3233),me=n(6477),ge=n(4650),ye=n(4842),be=n(1300),xe=n(3426),ve=n(7501);const we=(0,I.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=(0,L.f)([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=(0,J.X)(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,ve.G)((0,be.d)(i,0),[n[0],1,1]);if(2===n.length)return(0,ve.G)((0,be.d)((0,be.d)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,ve.G)((0,be.d)((0,be.d)((0,be.d)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var ke=n(4006),Ie=n(6943),Se=n(9165),Ne=n(4926),Te=n(636),$e=n(7630),Ce=n(4386);const Ee=(0,I.op)({isFinite_:function(e){const t={x:(0,x._1)(e,"x","isFinite")};return Q.BV.runKernel(Z.av,t)}}),_e=(0,I.op)({isInf_:function(e){const t={x:(0,x._1)(e,"x","isInf")};return Q.BV.runKernel(Z.iW,t)}});var Ae=n(6230),Re=n(9133),Fe=n(6573),Oe=n(624),De=n(4135),Me=n(9648),Le=n(2597),Pe=n(7474),Be=n(633),ze=n(7370),Ve=n(3694);const We=(0,I.op)({logSigmoid_:function(e){const t=(0,x._1)(e,"x","logSigmoid"),n=(0,Be.cb)((e=>({value:(0,ze.W)((0,Ve.W)((0,ze.W)(e))),gradFunc:t=>(0,k.d)(t,(0,S.X)((0,ze.W)(e)))})));return n(t)}});var Ue=n(1510),Ge=n(3591),He=n(3307),je=n(827),Ke=n(5475);const qe=(0,I.op)({logSumExp_:function(e,t=null,n=!1){const r=(0,x._1)(e,"x","logSumExp"),a=(0,_.EC)(t,r.shape),s=(0,He.F)(r,a,!0),o=(0,je.l)(r,s),u=(0,ye.Q)(o),l=(0,Ke.S)(u,a),c=(0,Le.c)(l),h=(0,i.I)((0,J.X)(s,c.shape),c);if(n){const e=(0,Ge.rv)(h.shape,a);return(0,J.X)(h,e)}return h}});var Xe=n(2856),Ye=n(8651),Qe=n(5750),Ze=n(2200);const Je=(0,I.op)({logicalXor_:function(e,t){const n=(0,x._1)(e,"a","logicalXor","bool"),r=(0,x._1)(t,"b","logicalXor","bool");return(0,Ze.$N)(n.shape,r.shape),(0,Xe.H)((0,Qe.K)(e,t),(0,Ye.h)((0,Xe.H)(e,t)))}});var et=n(1174),tt=n(5020),nt=n(6877),rt=n(632),at=n(5130),st=n(4917),it=n(4077);function ot(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,x._1)(e,"x","meshgrid",e instanceof it.es?e.dtype:"float32");if(void 0===t)return[r];let a=(0,x._1)(t,"y","meshgrid",t instanceof it.es?t.dtype:"float32");const s=(0,_.NA)(r.shape),i=(0,_.NA)(a.shape);return"xy"===n?(r=(0,J.X)(r,[1,-1]),a=(0,J.X)(a,[-1,1]),[(0,w.O)((0,st.i)([i,1],r.dtype),r),(0,w.O)(a,(0,st.i)([1,s],a.dtype))]):(r=(0,J.X)(r,[-1,1]),a=(0,J.X)(a,[1,-1]),[(0,w.O)(r,(0,st.i)([1,i],r.dtype)),(0,w.O)((0,st.i)([s,1],a.dtype),a)])}var ut=n(5735),lt=n(4513),ct=n(1483),ht=n(5228),pt=n(248);const dt=(0,I.op)({moments_:function(e,t=null,n=!1){e=(0,x._1)(e,"x","moments");const r=(0,_.EC)(t,e.shape),a=(0,at.J)(e,r,n);let s=a.shape;n||(s=(0,Ge.rv)(a.shape,r));const i=(0,pt.h)((0,je.l)((0,P.p)(e,"float32"),(0,J.X)(a,s)));return{mean:a,variance:(0,at.J)(i,r,n)}}}),ft=(0,I.op)({multiRNNCell_:function(e,t,n,r){const a=(0,x._1)(t,"data","multiRNNCell"),s=(0,x.sI)(n,"c","multiRNNCell"),i=(0,x.sI)(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}});var mt=n(686),gt=n(6500),yt=n(6708),bt=n(7846);const xt=(0,I.op)({outerProduct_:function(e,t){const n=(0,x._1)(e,"v1","outerProduct"),r=(0,x._1)(t,"v2","outerProduct");_.hu(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=(0,J.X)(n,[-1,1]),s=(0,J.X)(r,[1,-1]);return(0,w.O)(a,s)}});var vt=n(9682);const wt=(0,I.op)({pad1d_:function(e,t,n=0){return(0,_.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,vt.v)(e,[t],n)}}),kt=(0,I.op)({pad2d_:function(e,t,n=0){return(0,_.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,vt.v)(e,t,n)}}),It=(0,I.op)({pad3d_:function(e,t,n=0){return(0,_.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,vt.v)(e,t,n)}}),St=(0,I.op)({pad4d_:function(e,t,n=0){return(0,_.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,vt.v)(e,t,n)}});var Nt=n(2582),Tt=n(7918);const $t=(0,I.op)({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const i=(0,x._1)(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=(0,J.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),_.hu(Nt.jT(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const l=Nt.Xw(o.shape,t,s,a,r),c=[l.dilationHeight,l.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[d,f]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([l.inHeight,l.inWidth],c,h),m=p?r:"valid",g=p?o:(0,Tt.f)(o,c,d),b=("avg"===n?()=>(0,y.w)(g,t,s,m):()=>(0,et._)(g,t,s,m))(),v=p?b:(0,C.E)(b,c,f);return u?(0,J.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});var Ct=n(3453),Et=n(8151),_t=n(9798),At=n(9451);const Rt=(0,I.op)({rand_:function(e,t,n){const r=(0,_.NA)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return Q.BV.makeTensor(a,e,n)}});var Ft=n(6845);const Ot=(0,I.op)({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new Ft.T9(t,n,r,a),i=(0,L.f)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),Dt=(0,I.op)({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Ft.Yi(t,n,r,!1,a),i=(0,L.f)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var Mt=n(5002),Lt=n(7245),Pt=n(766),Bt=n(9036),zt=n(7409),Vt=n(3582),Wt=n(7486);const Ut=(0,I.op)({reverse1d_:function(e){const t=(0,x._1)(e,"x","reverse");return _.hu(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,Wt.G)(t,0)}}),Gt=(0,I.op)({reverse2d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return _.hu(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,Wt.G)(n,t)}}),Ht=(0,I.op)({reverse3d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return _.hu(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,Wt.G)(n,t)}}),jt=(0,I.op)({reverse4d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return _.hu(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,Wt.G)(n,t)}});var Kt=n(7809),qt=n(2634),Xt=n(9494),Yt=n(5503);const Qt=(0,I.op)({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){const o=(0,x._1)(e,"x","separableConv2d"),u=(0,x._1)(t,"depthwiseFilter","separableConv2d"),l=(0,x._1)(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=(0,J.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");_.hu(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),_.hu(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),_.hu(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),_.hu(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),_.hu(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const p=u.shape[2],d=u.shape[3];_.hu(l.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${l.shape[2]}.`));const f=(0,oe.B)(c,u,r,a,i,s),m=(0,q.T)(f,l,1,"valid",i);return h?(0,J.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var Zt=n(6567),Jt=n(4434),en=n(9331),tn=n(3254);const nn=(0,I.op)({slice1d_:function(e,t,n){const r=(0,x._1)(e,"x","slice1d");return _.hu(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,N.t)(r,[t],[n])}}),rn=(0,I.op)({slice2d_:function(e,t,n){const r=(0,x._1)(e,"x","slice2d");return _.hu(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,N.t)(r,t,n)}}),an=(0,I.op)({slice3d_:function(e,t,n){const r=(0,x._1)(e,"x","slice3d");return _.hu(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,N.t)(r,t,n)}}),sn=(0,I.op)({slice4d_:function(e,t,n){const r=(0,x._1)(e,"x","slice4d");return _.hu(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,N.t)(r,t,n)}});var on=n(682),un=n(7020),ln=n(8447),cn=n(4415),hn=n(3710),pn=n(8644),dn=n(3261),fn=n(5265),mn=n(9590),gn=n(2991),yn=n(1901),bn=n(5158),xn=n(1173),vn=n(701),wn=n(6092),kn=n(7852);function In(e,t,n){if((0,_.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,x.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,kn.H)(e,t,r,n)}var Sn=n(9906);function Nn(e,t,n){if((0,_.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,x.C)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,kn.H)(e,t,r,n)}function Tn(e,t,n){if((0,_.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,x.C)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,kn.H)(e,t,r,n)}function $n(e,t,n){if((0,_.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,x.C)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,(0,kn.H)(e,t,r,n)}var Cn=n(3243),En=n(3596),_n=n(9608);const An=(0,I.op)({unsortedSegmentSum_:function(e,t,n){const r=(0,x._1)(e,"x","unsortedSegmentSum"),a=(0,x._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,_.hu)((0,_.GN)(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},i={numSegments:n};return Q.BV.runKernel(Z.Qv,s,i)}});var Rn=n(4136);function Fn(e,t=!0,n,r){return Q.BV.makeVariable(e,t,n,r)}var On=n(5912),Dn=n(6380),Mn=n(9640),Ln=n(6577);const Pn=async function(e,t,n){const r=(0,x._1)(e,"tensor","boolMask"),a=(0,x._1)(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;_.hu(i>0,(()=>"mask cannot be scalar")),_.k5(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];const l=o.slice(0,s).concat([u],o.slice(s+i)),c=(0,J.X)(r,l),h=(0,J.X)(a,[-1]),p=await(0,Dn.i)(h),d=(0,mn.L)(p,[1]),f=(0,Ne.I)(c,d,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f};var Bn=n(9065);function zn(e,t,n=null){if(0===e.rank)return(0,r.W)(e);if(1!==e.rank&&null===n)return zn((0,J.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,Ke.S)((0,r.W)(e),n);if(t===1/0)return(0,He.F)((0,r.W)(e),n);if(t===-1/0)return(0,ut.V)((0,r.W)(e),n);if("euclidean"===t||2===t)return(0,dn._)((0,Ke.S)((0,Ct.s)((0,r.W)(e),(0,Xt.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,He.F)((0,Ke.S)((0,r.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,He.F)((0,Ke.S)((0,r.W)(e),n[1]),n[0]);if(t===-1/0)return(0,ut.V)((0,Ke.S)((0,r.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,dn._)((0,Ke.S)((0,pt.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Vn=(0,I.op)({norm_:function(e,t="euclidean",n=null,r=!1){const a=zn(e=(0,x._1)(e,"x","norm"),t,n);let s=a.shape;if(r){const t=(0,_.EC)(n,e.shape);s=Ge.rv(a.shape,t)}return(0,J.X)(a,s)}});var Wn=n(747);const Un=(0,I.op)({movingAverage_:function(e,t,n,r,a=!0){const s=(0,x._1)(e,"v","movingAverage"),o=(0,x._1)(t,"x","movingAverage"),u=(0,x._1)(n,"decay","movingAverage");(0,Wn.assertTypesMatch)(s,o),_.hu(_.cO(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=(0,Xt.i)(1),c=(0,je.l)(l,u);let h=(0,k.d)((0,je.l)(o,s),c);if(a){_.hu(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,x._1)(r,"step","movingAverage");h=(0,ce.h)(h,(0,je.l)(l,(0,Ct.s)(u,e)))}return(0,i.I)(s,h)}});var Gn=n(3100),Hn=n(9758),jn=n(7494);const Kn=(0,I.op)({dropout_:function(e,t,n,r){const a=(0,x._1)(e,"x","dropout");if(_.hu("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),_.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof it.es?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(_.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),o=1-t,u=(0,ce.h)((0,Ie.G)((0,i.I)((0,Mt.L)(s,0,1,"float32",r),o)),o);return(0,k.d)(a,u)}});function qn(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Xn(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return(0,wn.R)(a,"float32")}const Yn=async function(e,t,n=1){const r=(0,x._1)(e,"predictions","inTopK"),a=(0,x._1)(t,"targets","inTopK");(0,_.hu)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,_.hu)(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),(0,_.k5)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];(0,_.hu)(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[u,l]=[i.length/s,s],c=(0,_.WP)("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),(0,vn.X)(c,a.shape,"bool")};var Qn=n(2277);const Zn=(0,I.op)({hammingWindow_:function(e){return Xn(e,.54,.46)}}),Jn=(0,I.op)({hannWindow_:function(e){return Xn(e,.5,.5)}}),er=(0,I.op)({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push((0,N.t)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=(0,v.z)([(0,N.t)(e,s,t-r),(0,ke.h)([r],a)]);i.push(o),s+=n}return 0===i.length?In([],[0,t]):(0,J.X)((0,v.z)(i),[i.length,t])}}),tr=(0,I.op)({stft_:function(e,t,n,r,a=Jn){null==r&&(r=qn(t));const s=er(e,t,n),i=(0,k.d)(s,a(t));return(0,hn.Q)(i,r)}}),nr=(0,I.op)({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=(0,x._1)(e,"image","cropAndResize"),o=(0,x._1)(t,"boxes","cropAndResize","float32"),u=(0,x._1)(n,"boxInd","cropAndResize","int32"),l=o.shape[0];_.hu(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),_.hu(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),_.hu(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),_.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),_.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),_.hu("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:u},h={method:a,extrapolationValue:s,cropSize:r};return Q.BV.runKernel(Z.Vc,c,h)}}),rr=(0,I.op)({flipLeftRight_:function(e){const t=(0,x._1)(e,"image","flipLeftRight","float32");_.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Q.BV.runKernel(Z.Uy,n,{})}}),ar=(0,I.op)({grayscaleToRGB_:function(e){const t=(0,x._1)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];_.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),_.hu(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,(0,ve.G)(t,a)}}),sr=(0,I.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=(0,x._1)(e,"image","rotateWithOffset","float32");_.hu(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return Q.BV.runKernel(Z.b9,s,i)}});function ir(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),_.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),_.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),_.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),_.hu(1===t.rank,(()=>"scores must be a 1D tensor")),_.hu(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),_.hu(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const or=(0,I.op)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,x._1)(e,"boxes","nonMaxSuppression","float32"),i=(0,x._1)(t,"scores","nonMaxSuppression","float32"),o=ir(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return Q.BV.runKernel(Z.uv,{boxes:s,scores:i},u)}});var ur=n(3337);const lr=(0,I.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=(0,x._1)(e,"boxes","nonMaxSuppression"),o=(0,x._1)(t,"scores","nonMaxSuppression"),u=ir(i,o,n,r,a,s),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},h=Q.BV.runKernel(Z.W0,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),cr=(0,I.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=(0,x._1)(e,"boxes","nonMaxSuppression"),o=(0,x._1)(t,"scores","nonMaxSuppression"),u=ir(i,o,n,r,a,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},h=Q.BV.runKernel(Z.cy,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),hr=(0,I.op)({resizeBilinear_:function(e,t,n=!1,r=!1){const a=(0,x._1)(e,"images","resizeBilinear");_.hu(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),_.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),_.hu(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=(0,J.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=Q.BV.runKernel(Z._Y,o,u);return i?(0,J.X)(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),pr=(0,I.op)({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=(0,x._1)(e,"images","resizeNearestNeighbor");_.hu(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),_.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),_.hu("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),_.hu(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=(0,J.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=Q.BV.runKernel(Z.dp,o,u);return i?(0,J.X)(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),dr=(0,I.op)({threshold_:function(e,t="binary",n=!1,r=.5){const a=(0,x._1)(e,"image","threshold"),s=a.shape[0]*a.shape[1];let o,u,l,c,h=(0,k.d)((0,wn.R)([r]),255);if(_.hu(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),_.hu(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),_.hu("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),_.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[o,u,l]=(0,pn.V)(a,[1,1,1],-1);const e=(0,k.d)(o,.2989),t=(0,k.d)(u,.587),n=(0,k.d)(l,.114);c=(0,i.I)((0,i.I)(e,t),n)}else c=e;"otsu"===t&&(h=function(e,t){let n,r,a,s,o,u,l=(0,wn.R)([-1]),c=(0,wn.R)([0]),h=(0,wn.R)([0]);for(let p=0;p<e.size-1;p++){n=(0,N.t)(e,0,p+1),r=(0,N.t)(e,p+1),o=(0,ce.h)((0,Ke.S)(n),t),u=(0,ce.h)((0,Ke.S)(r),t);const d=(0,Ke.S)((0,k.d)(n,(0,Lt.w)(0,n.size)));a=(0,ce.h)(d,(0,Ke.S)(n));const f=(0,ke.h)(r.shape,n.size),m=(0,i.I)((0,Lt.w)(0,r.size),f),g=(0,k.d)(r,m);s=(0,ce.h)((0,Ke.S)(g),(0,Ke.S)(r));const y=(0,je.l)(a,s),b=(0,je.l)(a,s),x=(0,k.d)(o,u);h=(0,k.d)((0,k.d)(x,y),b);const v=(0,Te.p)(h,c);c=(0,On.a)(v,h,c),l=(0,On.a)(v,(0,wn.R)([p]),l)}return l}((0,O.y)((0,P.p)((0,Kt.N)(c),"int32"),(0,vn.X)([]),256),s));const p=n?(0,Oe.z)(c,h):(0,Te.p)(c,h);return(0,P.p)((0,k.d)(p,255),"int32")}}),fr=(0,I.op)({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=(0,x._1)(e,"image","transform","float32"),o=(0,x._1)(t,"transforms","transform","float32");_.hu(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),_.hu(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),_.hu(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Q.BV.runKernel(Z.wx,u,l)}}),mr=(0,I.op)({bandPart_:function(e,t,n){(0,_.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,_.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=(0,x._1)(e,"a","bandPart");(0,_.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=(0,J.X)((0,Lt.w)(0,s,1,"int32"),[-1,1]),u=(0,Lt.w)(0,i,1,"int32"),l=(0,je.l)(o,u),c=(0,Xe.H)((0,Oe.z)(l,(0,Xt.i)(+t,"int32")),(0,$e.b)(l,(0,Xt.i)(-n,"int32"))),h=(0,Mn.l)([s,i],r.dtype);return(0,J.X)((0,gn.k)((0,Rn.H)((0,J.X)(r,[-1,s,i])).map((e=>(0,On.a)(c,e,h)))),a)}}),gr=(0,I.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,_.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,_.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,pn.V)(e,e.shape[0],0).map((e=>(0,mn.L)(e,[0])));(0,_.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Q.BV.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=(0,k.d)((0,Ke.S)((0,k.d)(n[r],e)),n[r]);e=(0,je.l)(e,t)}return(0,ce.h)(e,Vn(e,"euclidean"))})));return t?(0,gn.k)(n,0):n}});var yr=n(4368);function br(e,t=!1){return Q.BV.tidy((()=>{(0,_.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=we(n),s=(0,V.d)(e);const i=In([[1]],[1,1]);let o=(0,V.d)(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=Q.BV.tidy((()=>{const t=(0,N.t)(s,[e,e],[n-e,1]),u=Vn(t),l=(0,N.t)(s,[e,e],[1,1]),c=(0,On.a)((0,Te.p)(l,0),In([[-1]]),In([[1]])),h=(0,je.l)(l,(0,k.d)(c,u)),p=(0,ce.h)(t,h);o=1===p.shape[0]?(0,V.d)(i):(0,v.z)([i,(0,N.t)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=(0,ze.W)((0,ce.h)((0,w.O)(c,h),u)),f=(0,N.t)(s,[e,0],[n-e,r]),m=(0,k.d)(d,o),g=(0,Bn.p)(o);if(0===e)s=(0,je.l)(f,(0,w.O)(m,(0,w.O)(g,f)));else{const t=(0,je.l)(f,(0,w.O)(m,(0,w.O)(g,f)));s=(0,v.z)([(0,N.t)(s,[0,0],[e,r]),t],0)}const y=(0,Bn.p)(m),b=(0,N.t)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=(0,je.l)(b,(0,w.O)((0,w.O)(b,o),y));else{const t=(0,je.l)(b,(0,w.O)((0,w.O)(b,o),y));a=(0,v.z)([(0,N.t)(a,[0,0],[n,e]),t],1)}return[o,s,a]})),(0,yr.B9)([t,u,l])}return!t&&n>r&&(a=(0,N.t)(a,[0,0],[n,r]),s=(0,N.t)(s,[0,0],[r,r])),[a,s]}))}const xr=(0,I.op)({qr_:function(e,t=!1){if((0,_.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return br(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,Rn.H)((0,J.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=br(e,t);a.push(n),s.push(r)})),[(0,J.X)((0,gn.k)(a,0),e.shape),(0,J.X)((0,gn.k)(s,0),e.shape)]}}});var vr=n(9876);const wr=(0,I.op)({computeWeightedLoss_:function(e,t,n=vr.I.SUM_BY_NONZERO_WEIGHTS){const r=(0,x._1)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=(0,x._1)(t,"weights","computeWeightedLoss"));const s=null==a?r:(0,k.d)(r,a);if(n===vr.I.NONE)return s;if(n===vr.I.SUM)return(0,Ke.S)(s);if(n===vr.I.MEAN){if(null==a)return(0,at.J)(s);{const e=r.size/a.size,t=(0,ce.h)((0,Ke.S)(s),(0,Ke.S)(a));return e>1?(0,ce.h)(t,(0,Xt.i)(e)):t}}if(n===vr.I.SUM_BY_NONZERO_WEIGHTS){if(null==a)return(0,ce.h)((0,Ke.S)(s),(0,Xt.i)(r.size));{const e=(0,k.d)(a,(0,st.i)(r.shape)),t=(0,P.p)((0,Ke.S)((0,gt.Q)(e,(0,Xt.i)(0))),"float32");return(0,ce.h)((0,Ke.S)(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),kr=(0,I.op)({absoluteDifference_:function(e,t,n,a=vr.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","absoluteDifference"),i=(0,x._1)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=(0,x._1)(n,"weights","absoluteDifference")),(0,_.k5)(s.shape,i.shape,"Error in absoluteDifference: ");const u=(0,r.W)((0,je.l)(s,i));return wr(u,o,a)}}),Ir=(0,I.op)({cosineDistance_:function(e,t,n,r,a=vr.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","cosineDistance"),i=(0,x._1)(t,"predictions","cosineDistance");let o=null;null!=r&&(o=(0,x._1)(r,"weights","cosineDistance")),(0,_.k5)(s.shape,i.shape,"Error in cosineDistance: ");const u=(0,Xt.i)(1),l=(0,je.l)(u,(0,Ke.S)((0,k.d)(s,i),n,!0));return wr(l,o,a)}}),Sr=(0,I.op)({hingeLoss_:function(e,t,n,r=vr.I.SUM_BY_NONZERO_WEIGHTS){let a=(0,x._1)(e,"labels","hingeLoss");const s=(0,x._1)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,x._1)(n,"weights","hingeLoss")),(0,_.k5)(a.shape,s.shape,"Error in hingeLoss: ");const o=(0,Xt.i)(1);a=(0,je.l)((0,k.d)((0,Xt.i)(2),a),o);const u=(0,zt.U)((0,je.l)(o,(0,k.d)(a,s)));return wr(u,i,r)}}),Nr=(0,I.op)({huberLoss_:function(e,t,n,a=1,s=vr.I.SUM_BY_NONZERO_WEIGHTS){const o=(0,x._1)(e,"labels","huberLoss"),u=(0,x._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,x._1)(n,"weights","huberLoss")),(0,_.k5)(o.shape,u.shape,"Error in huberLoss: ");const c=(0,Xt.i)(a),h=(0,r.W)((0,je.l)(u,o)),p=(0,lt.L)(h,c),d=(0,je.l)(h,p),f=(0,i.I)((0,k.d)((0,Xt.i)(.5),(0,pt.h)(p)),(0,k.d)(c,d));return wr(f,l,s)}}),Tr=(0,I.op)({logLoss_:function(e,t,n,r=1e-7,a=vr.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","logLoss"),o=(0,x._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,x._1)(n,"weights","logLoss")),(0,_.k5)(s.shape,o.shape,"Error in logLoss: ");const l=(0,Xt.i)(1),c=(0,Xt.i)(r),h=(0,ze.W)((0,k.d)(s,(0,Le.c)((0,i.I)(o,c)))),p=(0,k.d)((0,je.l)(l,s),(0,Le.c)((0,i.I)((0,je.l)(l,o),c))),d=(0,je.l)(h,p);return wr(d,u,a)}}),$r=(0,I.op)({meanSquaredError_:function(e,t,n,r=vr.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,x._1)(e,"labels","meanSquaredError"),s=(0,x._1)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,x._1)(n,"weights","meanSquaredError")),(0,_.k5)(a.shape,s.shape,"Error in meanSquaredError: ");const o=(0,fn.$)(a,s);return wr(o,i,r)}}),Cr=(0,I.op)({sigmoidCrossEntropy_:function(e,t,n,a=0,s=vr.I.SUM_BY_NONZERO_WEIGHTS){let o=(0,x._1)(e,"multiClassLabels","sigmoidCrossEntropy");const u=(0,x._1)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,x._1)(n,"weights","sigmoidCrossEntropy")),(0,_.k5)(o.shape,u.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,Xt.i)(a),t=(0,Xt.i)(1),n=(0,Xt.i)(.5);o=(0,i.I)((0,k.d)(o,(0,je.l)(t,e)),(0,k.d)(n,e))}const c=function(e,t){const n=(0,x._1)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,x._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,_.k5)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,zt.U)(a),o=(0,k.d)(a,n),u=(0,Pe.K)((0,ye.Q)((0,ze.W)((0,r.W)(a))));return(0,i.I)((0,je.l)(s,o),u)}(o,u);return wr(c,l,s)}}),Er=(0,I.op)({softmaxCrossEntropy_:function(e,t,n,r=0,a=vr.I.SUM_BY_NONZERO_WEIGHTS){let s=(0,x._1)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,x._1)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,x._1)(n,"weights","softmaxCrossEntropy")),(0,_.k5)(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,Xt.i)(r),t=(0,Xt.i)(1),n=(0,Xt.i)(s.shape[1]);s=(0,i.I)((0,k.d)(s,(0,je.l)(t,e)),(0,ce.h)(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=(0,Be.cb)(((e,t,r)=>{const a=qe(t,[n],!0),s=(0,je.l)((0,P.p)(t,"float32"),a);r([e,s]);const i=(0,ze.W)((0,k.d)(s,e));return{value:(0,Ke.S)(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=(0,Ge.rv)(e.shape,[n]);return[(0,k.d)((0,J.X)(e,s),(0,je.l)((0,P.p)(r,"float32"),(0,ye.Q)(a))),(0,k.d)((0,J.X)(e,s),(0,je.l)((0,ye.Q)(a),(0,P.p)(r,"float32")))]}}}));return r(e,t)}(s,o);return wr(l,u,a)}}),_r=(0,I.op)({sparseFillEmptyRows_:function(e,t,n,r){const a=(0,x._1)(e,"indices","sparseFillEmptyRows"),s=(0,x._1)(t,"values","sparseFillEmptyRows"),i=(0,x._1)(n,"denseShape","sparseFillEmptyRows"),o=(0,x._1)(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:s,denseShape:i,defaultValue:o},l=Q.BV.runKernel(Z.O3,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Ar=(0,I.op)({sparseReshape_:function(e,t,n){const r=(0,x._1)(e,"inputIndices","sparseReshape"),a=(0,x._1)(t,"inputShape","sparseReshape"),s=(0,x._1)(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=Q.BV.runKernel(Z.nh,i);return{outputIndices:o[0],outputShape:o[1]}}}),Rr=(0,I.op)({sparseSegmentMean_:function(e,t,n){const r=(0,x._1)(e,"data","sparseSegmentMean"),a=(0,x._1)(t,"indices","sparseSegmentMean"),s=(0,x._1)(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return Q.BV.runKernel(Z.YW,i)}}),Fr=(0,I.op)({sparseSegmentSum_:function(e,t,n){const r=(0,x._1)(e,"data","sparseSegmentSum"),a=(0,x._1)(t,"indices","sparseSegmentSum"),s=(0,x._1)(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return Q.BV.runKernel(Z.Zj,i)}}),Or=(0,I.op)({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=(0,x._1)(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=(0,x._1)(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:u,dataSplits:l},p=Q.BV.runKernel(Z._J,h,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),Dr=(0,I.op)({stringSplit_:function(e,t,n=!0){const r=(0,x._1)(e,"input","stringSplit","string"),a=(0,x._1)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=Q.BV.runKernel(Z.s1,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),Mr=(0,I.op)({stringToHashBucketFast_:function(e,t){const n=(0,x._1)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return Q.BV.runKernel(Z.Xk,a,r)}}),Lr={fft:un.k,ifft:ln.S,rfft:hn.Q,irfft:cn.w},Pr={hammingWindow:Zn,hannWindow:Jn,frame:er,stft:tr},Br={flipLeftRight:rr,grayscaleToRGB:ar,resizeNearestNeighbor:pr,resizeBilinear:hr,rotateWithOffset:sr,cropAndResize:nr,nonMaxSuppression:or,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),o=ir(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=(0,ur.GP)(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),(0,wn.R)(h,"int32")},nonMaxSuppressionWithScore:lr,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),u=ir(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:p,selectedScores:d}=(0,ur.pA)(c,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,wn.R)(p,"int32"),selectedScores:(0,wn.R)(d)}},nonMaxSuppressionPadded:cr,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),u=ir(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=(0,ur.qP)(p,d,l,c,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,wn.R)(f,"int32"),validOutputs:(0,Xt.i)(m,"int32")}},threshold:dr,transform:fr},zr={bandPart:mr,gramSchmidt:gr,qr:xr},Vr={absoluteDifference:kr,computeWeightedLoss:wr,cosineDistance:Ir,hingeLoss:Sr,huberLoss:Nr,logLoss:Tr,meanSquaredError:$r,sigmoidCrossEntropy:Cr,softmaxCrossEntropy:Er},Wr={sparseFillEmptyRows:_r,sparseReshape:Ar,sparseSegmentMean:Rr,sparseSegmentSum:Fr},Ur={stringNGrams:Or,stringSplit:Dr,stringToHashBucketFast:Mr}},9682:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({pad_:function(e,t,n=0){const i=(0,s._1)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},u={x:i};return r.BV.runKernel(a.ly,u,o)}})},3453:(e,t,n)=>{"use strict";n.d(t,{s:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({pow_:function(e,t){let n=(0,i._1)(e,"base","pow"),o=(0,i._1)(t,"exp","pow");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.pe,u)}})},8151:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,s._1)(e,"x","prelu"),alpha:(0,s._1)(t,"alpha","prelu")};return r.BV.runKernel(a.o0,n)}})},9798:(e,t,n)=>{"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,{S:()=>r})},9451:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(2271);const o=(0,n(2668).op)({prod_:function(e,t=null,n=!1){let o=(0,s._1)(e,"x","prod");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return r.BV.runKernel(a.Dl,u,l)}})},6845:(e,t,n)=>{"use strict";n.d(t,{Yi:()=>a,T9:()=>s,wv:()=>i});var r=n(6377);class a{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=r.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class s{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const i=s||Math.random();this.randu=r.alea(i.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class i{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},5002:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(2657),a=n(2668),s=n(6845);const i=(0,a.op)({randomUniform_:function(e,t=0,n=1,a="float32",i){const o=(0,r.f)(e,a),u=new s.wv(t,n,null,i);for(let e=0;e<o.values.length;e++)o.values[e]=u.nextValue();return o.toTensor()}})},7245:(e,t,n)=>{"use strict";n.d(t,{w:()=>s});var r=n(7097),a=n(9121);function s(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:e,stop:t,step:n,dtype:s};return r.BV.runKernel(a.e6,{},i)}},766:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({real_:function(e){const t={input:(0,s._1)(e,"input","real")};return r.BV.runKernel(a.xJ,t)}})},9036:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({reciprocal_:function(e){const t={x:(0,s._1)(e,"x","reciprocal")};return r.BV.runKernel(a.$H,t)}})},7409:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({relu_:function(e){const t={x:(0,s._1)(e,"x","relu")};return r.BV.runKernel(a.qk,t)}})},3582:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({relu6_:function(e){const t={x:(0,s._1)(e,"x","relu6")};return r.BV.runKernel(a.Sb,t)}})},4968:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,s._1)(e,"x","reshape","string_or_numeric")},i={shape:t};return r.BV.runKernel(a.HZ,n,i)}})},7486:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({reverse_:function(e,t){const n={x:(0,s._1)(e,"x","reverse")},i={dims:t};return r.BV.runKernel(a.mK,n,i)}})},7809:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({round_:function(e){const t={x:(0,s._1)(e,"x","round")};return r.BV.runKernel(a.e0,t)}})},2634:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({rsqrt_:function(e){const t={x:(0,s._1)(e,"x","rsqrt","float32")};return r.BV.runKernel(a.bV,t)}})},9494:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var r=n(569),a=n(7852);function s(e,t){if(((0,r.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,a.H)(e,[],[],t)}},3100:(e,t,n)=>{"use strict";n.d(t,{s:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(2668),o=n(3028);const u=(0,i.op)({scatterND_:function(e,t,n){const i=(0,s._1)(e,"indices","scatterND","int32"),u=(0,s._1)(t,"updates","scatterND");o.validateInput(u,i,n);const l={indices:i,updates:u},c={shape:n};return r.BV.runKernel(a.xQ,l,c)}})},3028:(e,t,n)=>{"use strict";n.r(t),n.d(t,{validateUpdateShape:()=>a,validateInput:()=>s,calculateShapes:()=>i});var r=n(569);function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}a(n,t,e)}function i(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,i=n.length;let o=1;for(let e=s;e<i;++e)o*=n[e];const u=s<1?1:s;return{sliceRank:s,numUpdates:(0,r.NA)(t.shape)/u,sliceSize:o,strides:[...(0,r.e3)(n.slice(0,s)),1],outputSize:(0,r.NA)(n)}}},5503:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({selu_:function(e){const t={x:(0,s._1)(e,"x","selu")};return r.BV.runKernel(a.oF,t)}})},6567:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(4077),a=n(3740),s=n(569);const i=async function(e,t){const n=(0,a._1)(e,"x","setdiff1d"),i=(0,a._1)(t,"y","setdiff1d");s.hu(n.dtype===i.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${i.dtype}).`)),s.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),s.hu(1===i.rank,(()=>`y should be 1D tensor, but got y (${i.shape}).`));const o=await n.data(),u=await i.data(),l=new Set(u);let c=0;for(let e=0;e<o.length;e++)l.has(o[e])||c++;const h=new r.YD([c],n.dtype),p=new r.YD([c],"int32");for(let e=0,t=0;e<o.length;e++)l.has(o[e])||(h.values[t]=o[e],p.values[t]=e,t++);return[h.toTensor(),p.toTensor()]}},625:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,s._1)(e,"x","sigmoid","float32")};return r.BV.runKernel(a.a5,t)}})},4434:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sign_:function(e){const t={x:(0,s._1)(e,"x","sign")};return r.BV.runKernel(a.i5,t)}})},9331:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sin_:function(e){const t={x:(0,s._1)(e,"x","sin","float32")};return r.BV.runKernel(a.RQ,t)}})},3254:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sinh_:function(e){const t={x:(0,s._1)(e,"x","sinh")};return r.BV.runKernel(a.w3,t)}})},2676:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({slice_:function(e,t,n){const i=(0,s._1)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},u={begin:t,size:n};return r.BV.runKernel(a.p2,o,u)}})},682:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({softmax_:function(e,t=-1){const n=(0,s._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return r.BV.runKernel(a.Gc,i,o)}})},3694:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({softplus_:function(e){const t={x:(0,s._1)(e,"x","softplus")};return r.BV.runKernel(a.MR,t)}})},7918:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({spaceToBatchND_:function(e,t,n){const o=(0,s._1)(e,"x","spaceToBatchND");i.hu(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),i.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),i.hu(o.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const u={x:o},l={blockShape:t,paddings:n};return r.BV.runKernel(a.TQ,u,l)}})},9758:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sparseToDense_:function(e,t,n,i=0){const o=(0,s._1)(e,"sparseIndices","sparseToDense","int32"),u=(0,s._1)(t,"sparseValues","sparseToDense"),l=(0,s._1)(i,"defaultValue","sparseToDense",u.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,u,n,l);const c={sparseIndices:o,sparseValues:u,defaultValue:l},h={outputShape:n};return r.BV.runKernel(a.D2,c,h)}})},7020:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(7097),a=n(9121),s=n(569);const i=(0,n(2668).op)({fft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(a.vw,t)}})},8447:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var r=n(7097),a=n(9121),s=n(569);const i=(0,n(2668).op)({ifft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(a.Qg,t)}})},4415:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var r=n(1661),a=n(6884),s=n(4386),i=n(4841),o=n(2668),u=n(766),l=n(4968),c=n(7486),h=n(9494),p=n(2676),d=n(8447);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=(0,l.X)(e,[n,t]);o=(0,d.S)(r)}else{const f=[n,2*(t-1)],m=(0,l.X)((0,u.k)(e),[n,t]),g=(0,l.X)((0,s.a)(e),[n,t]),y=(0,c.G)((0,p.t)(m,[0,1],[n,t-2]),1),b=(0,i.d)((0,c.G)((0,p.t)(g,[0,1],[n,t-2]),1),(0,h.i)(-1)),x=(0,a.z)([m,y],1),v=(0,a.z)([g,b],1),w=(0,l.X)((0,r.P)(x,v),[f[0],f[1]]);o=(0,d.S)(w)}if(o=(0,u.k)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,l.X)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},3710:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var r=n(569),a=n(1661),s=n(6884),i=n(4386),o=n(2668),u=n(766),l=n(4968),c=n(2676),h=n(8644),p=n(9640),d=n(6577),f=n(7020);const m=(0,o.op)({rfft_:function(e,t){(0,r.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,m=(0,c.t)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,s.z)([e,(0,p.l)(r)],e.shape.length-1),n=t}else m=e;const g=(0,d.P)(m),y=(0,l.X)((0,a.P)(m,g),[o,n]),b=(0,f.k)(y),x=Math.floor(n/2)+1,v=(0,u.k)(b),w=(0,i.a)(b),k=(0,h.V)(v,[x,n-x],v.shape.length-1),I=(0,h.V)(w,[x,n-x],w.shape.length-1),S=m.shape.slice();return S[m.shape.length-1]=x,(0,l.X)((0,a.P)(k[0],I[0]),S)}})},8644:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({split_:function(e,t,n=0){const i={x:(0,s._1)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return r.BV.runKernel(a.L8,i,o)}})},3261:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sqrt_:function(e){const t={x:(0,s._1)(e,"x","sqrt","float32")};return r.BV.runKernel(a.FK,t)}})},248:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(7097),a=n(3740);const s=(0,n(2668).op)({square_:function(e){const t=(0,a._1)(e,"x","square");return r.BV.runKernel("Square",{x:t},{})}})},5265:(e,t,n)=>{"use strict";n.d(t,{$:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,i._1)(e,"a","squaredDifference"),u=(0,i._1)(t,"b","squaredDifference");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a._t,l,{})}})},9590:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var r=n(3740),a=n(569),s=n(2668),i=n(4968);const o=(0,s.op)({squeeze_:function(e,t){const n=(0,r._1)(e,"x","squeeze");return(0,i.X)(n,(0,a.bp)(n.shape,t).newShape)}})},2991:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,s.sI)(e,"tensors","stack","string_or_numeric");i.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,u={axis:t};return r.BV.runKernel(a.Qi,o,u)}})},1901:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,s._1)(e,"x","step")},i={alpha:t};return r.BV.runKernel(a.h8,n,i)}})},5158:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({stridedSlice_:function(e,t,n,i,o=0,u=0,l=0,c=0,h=0){const p={x:(0,s._1)(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:i,beginMask:o,endMask:u,ellipsisMask:l,newAxisMask:c,shrinkAxisMask:h};return r.BV.runKernel(a.m2,p,d)}})},827:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({sub_:function(e,t){let n=(0,i._1)(e,"a","sub"),o=(0,i._1)(t,"b","sub");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.Tr,u)}})},5475:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(2271);const o=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let o=(0,s._1)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return r.BV.runKernel(a.GB,u,l)}})},1173:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({tan_:function(e){const t={x:(0,s._1)(e,"x","tan","float32")};return r.BV.runKernel(a.sE,t)}})},1869:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({tanh_:function(e){const t={x:(0,s._1)(e,"x","tanh","float32")};return r.BV.runKernel(a.MI,t)}})},701:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var r=n(3740),a=n(7852);function s(e,t,n){const s=(0,r.C)(e,n);return(0,a.H)(e,t,s,n)}},6092:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(3740),a=n(569),s=n(7852);function i(e,t){(0,a.Cq)(e);const n=(0,r.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,s.H)(e,null,n,t)}},9906:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var r=n(3740),a=n(569),s=n(7852);function i(e,t,n){if((0,a.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=(0,r.C)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.H)(e,t,i,n)}},7852:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(7097),a=n(569),s=n(9122);function i(e,t,n,i){if(null==i&&(i=(0,a.D2)(e)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,a.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,a.Mu)(t);const e=(0,a.NA)(t),r=(0,a.NA)(n);(0,a.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==(0,a.NA)(t.slice(e));(0,a.hu)(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,a.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,s.toTypedArray)(e,i):(0,a.xH)(e,[],!0),r.BV.makeTensor(e,t,i)}},7501:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({tile_:function(e,t){const n=(0,s._1)(e,"x","tile","string_or_numeric");i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},u={reps:t};return r.BV.runKernel(a.n9,o,u)}})},3243:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({topk_:function(e,t=1,n=!0){const i=(0,s._1)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const u={x:i},l={k:t,sorted:n},[c,h]=r.BV.runKernel(a.cW,u,l);return{values:c,indices:h}}})},9065:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({transpose_:function(e,t){const n=(0,s._1)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{i.hu(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const o={x:n},u={perm:t};return r.BV.runKernel(a.G3,o,u)}})},3596:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(2657),a=n(2668),s=n(6845);const i=(0,a.op)({truncatedNormal_:function(e,t=0,n=1,a,i){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new s.Yi(t,n,a,!0,i),u=(0,r.f)(e,a);for(let e=0;e<u.values.length;e++)u.values[e]=o.nextValue();return u.toTensor()}})},9608:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({unique_:function(e,t=0){const n=(0,s._1)(e,"x","unique","string_or_numeric");(0,i.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},u={axis:t},[l,c]=r.BV.runKernel(a.kp,o,u);return{values:l,indices:c}}})},4136:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,s._1)(e,"x","unstack","string_or_numeric");i.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},u={axis:t};return r.BV.runKernel(a.To,o,u)}})},5912:(e,t,n)=>{"use strict";n.d(t,{a:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(8247),o=n(2200);const u=(0,n(2668).op)({where_:function(e,t,n){const u=(0,s._1)(t,"a","where"),l=(0,s._1)(n,"b","where"),c=(0,s._1)(e,"condition","where","bool"),h=(0,o.$N)((0,o.$N)(c.shape,u.shape),l.shape),p={condition:(0,i.U)(c,h),t:(0,i.U)(u,h),e:(0,i.U)(l,h)};return r.BV.runKernel(a.Ph,p)}})},6380:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var r=n(8333),a=n(3740);const s=async function(e){const t=(0,a._1)(e,"condition","whereAsync","bool"),n=await t.data(),s=(0,r.Z)(t.shape,n);return e!==t&&t.dispose(),s}},9640:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(7097),a=n(569),s=n(1661);function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,s.P)(t,n)}const n=(0,a.wT)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},6577:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({zerosLike_:function(e){const t={x:(0,s._1)(e,"x","zerosLike")};return r.BV.runKernel(a.Ru,t)}})},4077:(e,t,n)=>{"use strict";n.d(t,{es:()=>b,YD:()=>h,_w:()=>x,FZ:()=>y,Vp:()=>g,Vi:()=>m});var r=n(5938),a=n(569);function s(e,t,n,r){const s=(0,a.e3)(t),o=function(e,t,n,r){const s=(0,a.NA)(t),o=r[r.length-1],u=new Array(o).fill(0),c=t.length,h="complex64"===n?l(e):e;if(c>1)for(let e=0;e<s/o;e++){const t=e*o;for(let e=0;e<o;e++)u[e]=Math.max(u[e],i(h[t+e],0,n).length)}return u}(e,t,n,s),c=t.length,h=u(e,t,n,s,o),p=["Tensor"];return r&&(p.push(`  dtype: ${n}`),p.push(`  rank: ${c}`),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(h.map((e=>"    "+e)).join("\n")),p.join("\n")}function i(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,a.HD)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,a.oj)(r,t)}function o(e){return 0===e?"false":"true"}function u(e,t,n,r,a,s=!0){const c="complex64"===n?2:1,h=t[0],p=t.length;if(0===p)return"complex64"===n?[i(l(e)[0],0,n)]:"bool"===n?[o(e[0])]:[e[0].toString()];if(1===p){if(h>20){const t=3*c;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((h-3)*c,h*c));return"complex64"===n&&(r=l(r),s=l(s)),["["+r.map(((e,t)=>i(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>i(e,a[h-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>i(e,a[t],n))).join(", ")+"]"]}const d=t.slice(1),f=r.slice(1),m=r[0]*c,g=[];if(h>20){for(let t=0;t<3;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),d,n,f,a,!1))}g.push("...");for(let t=h-3;t<h;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),d,n,f,a,t===h-1))}}else for(let t=0;t<h;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),d,n,f,a,t===h-1))}const y=2===p?",":"";g[0]="["+g[0]+y;for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+y;let b=",\n";for(let e=2;e<p;e++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(s?"":b),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(9122);class h{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.NA(e),null!=n){const e=n.length;a.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.rQ(t,this.size),this.strides=(0,a.e3)(e)}set(e,...t){0===t.length&&(t=[0]),a.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return p().makeTensor(this.values,this.shape,this.dtype)}}let p=null,d=null,f=null;function m(e){p=e}function g(e){d=e}function y(e){f=e}class b{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.NA(e),this.strides=(0,a.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return d.buffer(this.shape,this.dtype,e)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,a.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,a.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=p().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=p().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await p().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(p().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return d.print(this,e)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(e=!1){return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),d.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),p().makeVariable(this,e,t,n)}}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),(0,r.R)("Tensor",(()=>b));class x extends b{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);p().disposeTensor(this),this.dataId=e.dataId,p().incRef(this,null)}dispose(){p().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},747:(e,t,n)=>{"use strict";n.r(t),n.d(t,{makeTypesMatch:()=>i,assertTypesMatch:()=>o,isTensorInList:()=>u,getTensorsInContainer:()=>l});var r=n(4077),a=n(1221),s=n(569);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,a.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,s.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),c(r,t,n))}}},3740:(e,t,n)=>{"use strict";n.d(t,{C:()=>u,_1:()=>h,sI:()=>p});var r=n(7097),a=n(2885),s=n(4077),i=n(569),o=n(9122);function u(e,t){let n=e;if((0,i.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,i.fU)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,a.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,r,[]),r}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.fU)(e))return void(0,i.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,i.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,i.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)l(e[t],r,n.concat(t))}function c(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function h(e,t,n,a="numeric"){if(e instanceof s.es)return c(a,e.dtype,t,n),e;let l=(0,i.D2)(e);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),c(a,l,t,n),null==e||!(0,i.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const h=u(e,l);(0,i.fU)(e)||Array.isArray(e)||(e=[e]);const p="string"!==l?(0,o.toTypedArray)(e,l):(0,i.xH)(e,[],!0);return r.BV.makeTensor(p,h,l)}function p(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>h(e,`${t}[${a}]`,n,r)))}},1221:(e,t,n)=>{"use strict";var r,a,s,i,o;n.d(t,{yw:()=>r,x8:()=>l,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:a,bool:s,complex64:o};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}},9122:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>a.cO,assert:()=>a.hu,assertNonNegativeIntegerDimensions:()=>a.Mu,assertNonNull:()=>a.Cq,assertShapesMatch:()=>a.k5,bytesFromStringArray:()=>a.Ub,bytesPerElement:()=>a.bT,checkConversionForErrors:()=>a.D5,clamp:()=>a.uZ,computeStrides:()=>a.e3,createScalarValue:()=>x,createShuffledIndices:()=>a.U$,decodeString:()=>S,distSquared:()=>a.E7,encodeString:()=>I,fetch:()=>k,fingerPrint64:()=>b,flatten:()=>a.xH,getArrayFromDType:()=>a.rQ,getTypedArrayFromDType:()=>a.WP,hasEncodingLoss:()=>a.QB,hexToLong:()=>o,indexToLoc:()=>a.NE,inferDtype:()=>a.D2,inferFromImplicitShape:()=>a.JZ,isBoolean:()=>a.jn,isFunction:()=>a.mf,isInt:()=>a.GN,isNumber:()=>a.hj,isPromise:()=>a.tI,isScalarShape:()=>a.N9,isString:()=>a.HD,isTypedArray:()=>a.fU,isValidDtype:()=>a.LP,locToIndex:()=>a.qy,makeOnesTypedArray:()=>a.p8,makeZerosNestedTypedArray:()=>a.l6,makeZerosTypedArray:()=>a.wT,nearestDivisor:()=>a.jP,nearestLargerEven:()=>a.nY,now:()=>w,parseAxisParam:()=>a.EC,randUniform:()=>a.bj,repeatedTry:()=>a.WD,rightPad:()=>a.oj,shuffle:()=>a.TV,shuffleCombo:()=>a.d7,sizeFromShape:()=>a.NA,sizeToSquarishShape:()=>a.YP,squeezeShape:()=>a.bp,sum:()=>a.Sm,swap:()=>a.LF,tanh:()=>a.AE,toNestedArray:()=>a.GX,toTypedArray:()=>v});var r=n(2885),a=n(569),s=n(3720);const i=n.n(s)()||s;function o(e){return i.fromString(e,!0,16)}const u=o("c3a5c85c97cb3127"),l=o("b492b66fbe98f273"),c=o("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function p(e,t,n){const r=e.slice(t,t+n);return i.fromBytes(Array.from(r),!0,!0)}function d(e,t){return p(e,t,8)}function f(e,t){return p(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,n=o("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function y(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=m(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(m(a,44)),[a.add(r),s.add(i)]}(d(e,t),d(e,t+8),d(e,t+16),d(e,t+24),n,r)}function b(e,t=e.length){const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=c.add(2*t),r=d(e,0).add(c),a=d(e,t-8);return g(m(a,37).mul(n).add(r),m(r,25).add(a).mul(n),n)}if(t>=4){const n=c.add(2*t);return g(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return h(c.mul(n).xor(u.mul(r))).mul(c)}return c}(e,t):function(e,t=e.length){const n=c.add(2*t),r=d(e,0).mul(l),a=d(e,8),s=d(e,t-8).mul(n),i=d(e,t-16).mul(c);return g(m(r.add(a),43).add(m(s,30)).add(i),r.add(m(a.add(c),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=c.add(2*t),r=d(e,0).mul(c),a=d(e,8),s=d(e,t-8).mul(n),i=d(e,t-16).mul(c),o=m(r.add(a),43).add(m(s,30)).add(i),u=g(o,r.add(m(a.add(c),18)).add(s),n),l=d(e,16).mul(n),h=d(e,24),p=o.add(d(e,t-32)).mul(n),f=u.add(d(e,t-24)).mul(n);return g(m(l.add(h),43).add(m(p,30)).add(f),l.add(m(h.add(r),18)).add(p),n)}(e,t);let r=n,a=n.mul(l).add(113),s=h(a.mul(c).add(113)).mul(c),o=[i.UZERO,i.UZERO],p=[i.UZERO,i.UZERO];r=r.mul(c).add(d(e,0));let b=0;const x=64*(t-1>>6),v=x+(t-1&63)-63;do{r=m(r.add(a).add(o[0]).add(d(e,b+8)),37).mul(l),a=m(a.add(o[1]).add(d(e,b+48)),42).mul(l),r=r.xor(p[1]),a=a.add(o[0]).add(d(e,b+40)),s=m(s.add(p[0]),33).mul(l),o=y(e,b,o[1].mul(l),r.add(p[0])),p=y(e,b+32,s.add(p[1]),a.add(d(e,b+16))),[s,r]=[r,s],b+=64}while(b!==x);const w=l.add(s.and(255).shl(1));return b=v,p[0]=p[0].add(t-1&63),o[0]=o[0].add(p[0]),p[0]=p[0].add(o[0]),r=m(r.add(a).add(o[0]).add(d(e,b+8)),37).mul(w),a=m(a.add(o[1]).add(d(e,b+48)),42).mul(w),r=r.xor(p[1].mul(9)),a=a.add(o[0].mul(9).add(d(e,b+40))),s=m(s.add(p[0]),33).mul(w),o=y(e,b,o[1].mul(w),r.add(p[0])),p=y(e,b+32,s.add(p[1]),a.add(d(e,b+16))),[s,r]=[r,s],g(g(o[0],p[0],w).add(h(a).mul(u)).add(s),g(o[1],p[1],w).add(r),w)}function x(e,t){return"string"===t?I(e):v([e],t)}function v(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.xH(e)),(0,r.OB)().getBool("DEBUG")&&a.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function w(){return(0,r.OB)().platform.now()}function k(e,t){return(0,r.OB)().platform.fetch(e,t)}function I(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}},569:(e,t,n)=>{"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function h(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function p(e,t,n=""){h(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function d(e){h(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||R(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function g(e){return 0===e.length}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1==0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function S(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function N(e,t){const n=t.length;return h((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),h(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function T(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:N(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function E(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function _(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function A(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function R(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function O(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function D(e){return"string"==typeof e||e instanceof String}function M(e){return"boolean"==typeof e}function L(e){return"number"==typeof e}function P(e){return Array.isArray(e)?P(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":L(e)?"float32":D(e)?"string":M(e)?"bool":"float32"}function B(e){return!!(e&&e.constructor&&e.call&&e.apply)}function z(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function V(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function W(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=W(e+t*o,i,n,r)}return a}function U(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function G(e,t){const n=H(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function j(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function K(e){e.forEach((t=>{h(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function X(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Y(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{TV:()=>r,d7:()=>a,uZ:()=>s,nY:()=>i,LF:()=>o,Sm:()=>u,bj:()=>l,E7:()=>c,hu:()=>h,k5:()=>p,Cq:()=>d,xH:()=>f,NA:()=>m,N9:()=>g,cO:()=>y,GN:()=>b,AE:()=>x,YP:()=>v,U$:()=>w,oj:()=>k,WD:()=>I,JZ:()=>S,EC:()=>N,bp:()=>T,WP:()=>$,rQ:()=>C,D5:()=>E,LP:()=>_,QB:()=>A,fU:()=>R,bT:()=>F,Ub:()=>O,HD:()=>D,jn:()=>M,hj:()=>L,D2:()=>P,mf:()=>B,jP:()=>z,e3:()=>V,GX:()=>U,p8:()=>G,wT:()=>H,l6:()=>j,Mu:()=>K,qy:()=>q,NE:()=>X,tI:()=>Y})},3177:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>Ye,Acos:()=>Qe,Acosh:()=>Ze,AdadeltaOptimizer:()=>Nu,AdagradOptimizer:()=>$u,AdamOptimizer:()=>_u,AdamaxOptimizer:()=>Fu,Add:()=>Je,AddN:()=>et,All:()=>tt,Any:()=>nt,ArgMax:()=>rt,ArgMin:()=>at,Asin:()=>st,Asinh:()=>it,Atan:()=>ot,Atan2:()=>lt,Atanh:()=>ut,AvgPool:()=>ct,AvgPool3D:()=>pt,AvgPool3DGrad:()=>dt,AvgPoolGrad:()=>ht,BatchMatMul:()=>ft,BatchToSpaceND:()=>mt,Bincount:()=>gt,BroadcastArgs:()=>bt,BroadcastTo:()=>yt,Callback:()=>SI,CallbackList:()=>Sb,Cast:()=>xt,Ceil:()=>vt,ClipByValue:()=>wt,Complex:()=>kt,ComplexAbs:()=>It,Concat:()=>St,Conv2D:()=>Nt,Conv2DBackpropFilter:()=>Tt,Conv2DBackpropInput:()=>$t,Conv3D:()=>Ct,Conv3DBackpropFilterV2:()=>Et,Conv3DBackpropInputV2:()=>_t,Cos:()=>At,Cosh:()=>Rt,CropAndResize:()=>Dt,Cumprod:()=>Ft,Cumsum:()=>Ot,CustomCallback:()=>$b,DataStorage:()=>j,DenseBincount:()=>Mt,DepthToSpace:()=>Lt,DepthwiseConv2dNative:()=>Pt,DepthwiseConv2dNativeBackpropFilter:()=>Bt,DepthwiseConv2dNativeBackpropInput:()=>zt,Diag:()=>Vt,Dilation2D:()=>Wt,Dilation2DBackpropFilter:()=>Gt,Dilation2DBackpropInput:()=>Ut,ENV:()=>Ke,EarlyStopping:()=>$I,Einsum:()=>jt,Elu:()=>Kt,EluGrad:()=>qt,Environment:()=>Ue,Equal:()=>Yt,Erf:()=>Xt,Exp:()=>Qt,ExpandDims:()=>Zt,Expm1:()=>Jt,FFT:()=>en,Fill:()=>tn,FlipLeftRight:()=>nn,Floor:()=>rn,FloorDiv:()=>an,FromPixels:()=>Zr,FusedBatchNorm:()=>sn,FusedConv2D:()=>ta,FusedDepthwiseConv2D:()=>na,GatherNd:()=>un,GatherV2:()=>on,GraphModel:()=>US,Greater:()=>ln,GreaterEqual:()=>cn,History:()=>Tb,IFFT:()=>pn,Identity:()=>hn,Imag:()=>dn,InputSpec:()=>hb,IsFinite:()=>fn,IsInf:()=>mn,IsNan:()=>gn,KernelBackend:()=>K,LRN:()=>$n,LRNGrad:()=>Cn,LayerVariable:()=>ub,LayersModel:()=>Rx,LeakyRelu:()=>yn,Less:()=>bn,LessEqual:()=>xn,LinSpace:()=>vn,Log:()=>wn,Log1p:()=>kn,LogSoftmax:()=>Tn,LogicalAnd:()=>In,LogicalNot:()=>Sn,LogicalOr:()=>Nn,Max:()=>En,MaxPool:()=>An,MaxPool3D:()=>Fn,MaxPool3DGrad:()=>On,MaxPoolGrad:()=>Rn,MaxPoolWithArgmax:()=>Dn,Maximum:()=>_n,Mean:()=>Mn,Min:()=>Ln,Minimum:()=>Pn,MirrorPad:()=>Bn,Mod:()=>zn,MomentumOptimizer:()=>Du,Multinomial:()=>Vn,Multiply:()=>Wn,Neg:()=>Un,NonMaxSuppressionV3:()=>Hn,NonMaxSuppressionV4:()=>jn,NonMaxSuppressionV5:()=>Kn,NotEqual:()=>Gn,OP_SCOPE_SUFFIX:()=>Ts,OneHot:()=>Xn,OnesLike:()=>qn,Optimizer:()=>Su,OptimizerConstructors:()=>Lu,Pack:()=>Yn,PadV2:()=>Qn,Pool:()=>Zn,Pow:()=>Jn,Prelu:()=>er,Prod:()=>tr,RMSPropOptimizer:()=>Mu,RNN:()=>Pv,Range:()=>nr,Rank:()=>Qa,Real:()=>rr,RealDiv:()=>Ht,Reciprocal:()=>ar,Reduction:()=>ld,Relu:()=>sr,Relu6:()=>hr,Reshape:()=>ir,ResizeBilinear:()=>lr,ResizeBilinearGrad:()=>cr,ResizeNearestNeighbor:()=>or,ResizeNearestNeighborGrad:()=>ur,Reverse:()=>pr,RotateWithOffset:()=>Jr,Round:()=>dr,Rsqrt:()=>fr,SGDOptimizer:()=>Ou,ScatterNd:()=>mr,Select:()=>gr,Selu:()=>yr,Sequential:()=>Dx,Sigmoid:()=>kr,Sign:()=>wr,Sin:()=>xr,Sinh:()=>vr,Slice:()=>br,Softmax:()=>Cr,Softplus:()=>Ir,SpaceToBatchND:()=>Tr,SparseFillEmptyRows:()=>Er,SparseReshape:()=>_r,SparseSegmentMean:()=>Ar,SparseSegmentSum:()=>Rr,SparseToDense:()=>Fr,SplitV:()=>$r,Sqrt:()=>Sr,Square:()=>Dr,SquaredDifference:()=>Or,Step:()=>Qr,StridedSlice:()=>Mr,StringNGrams:()=>Lr,StringSplit:()=>Pr,StringToHashBucketFast:()=>Br,Sub:()=>zr,Sum:()=>Nr,SymbolicTensor:()=>pb,Tan:()=>Vr,Tanh:()=>Wr,Tensor:()=>qa,TensorBuffer:()=>Ga,Tile:()=>Ur,TopK:()=>Gr,Transform:()=>Hr,Transpose:()=>jr,Unique:()=>Kr,Unpack:()=>qr,UnsortedSegmentSum:()=>Xr,Variable:()=>Ya,ZerosLike:()=>Yr,_FusedMatMul:()=>ea,abs:()=>Au,acos:()=>Pu,acosh:()=>Bu,add:()=>lu,addN:()=>zu,all:()=>Vu,any:()=>Wu,argMax:()=>Uu,argMin:()=>Gu,asin:()=>Hu,asinh:()=>ju,atan:()=>Ku,atan2:()=>qu,atanh:()=>Xu,avgPool:()=>hl,avgPool3d:()=>pl,backend:()=>ou,backend_util:()=>y,basicLSTMCell:()=>yl,batchNorm:()=>xl,batchNorm2d:()=>vl,batchNorm3d:()=>wl,batchNorm4d:()=>kl,batchToSpaceND:()=>bl,bincount:()=>Il,booleanMaskAsync:()=>dp,broadcastArgs:()=>Sl,broadcastTo:()=>Nl,broadcast_util:()=>u,browser:()=>l,buffer:()=>Ni,callbacks:()=>CI,cast:()=>Ti,ceil:()=>Tl,clipByValue:()=>$l,clone:()=>$i,complex:()=>Cs,concat:()=>dl,concat1d:()=>Cl,concat2d:()=>El,concat3d:()=>_l,concat4d:()=>Al,constraints:()=>x,conv1d:()=>Fl,conv2d:()=>Rl,conv2dTranspose:()=>Dl,conv3d:()=>Ml,conv3dTranspose:()=>Pl,copyRegisteredKernels:()=>fa,cos:()=>Bl,cosh:()=>zl,cosineWindow:()=>kp,cumprod:()=>Vl,cumsum:()=>Wl,customGrad:()=>wu,data:()=>G,denseBincount:()=>Ul,deprecationWarn:()=>Ho,depthToSpace:()=>Gl,depthwiseConv2d:()=>Hl,deregisterOp:()=>OI,device_util:()=>s,diag:()=>jl,dilation2d:()=>Kl,disableDeprecationWarnings:()=>Go,dispose:()=>Qo,disposeVariables:()=>jo,div:()=>hu,divNoNan:()=>Yl,dot:()=>Ql,dropout:()=>vp,einsum:()=>Zl,elu:()=>Jl,enableDebugMode:()=>Uo,enableProdMode:()=>Wo,enclosingPowerOfTwo:()=>wp,engine:()=>Ko,env:()=>He,equal:()=>ql,erf:()=>ec,exp:()=>tc,expandDims:()=>nc,expm1:()=>rc,eye:()=>sc,fft:()=>Uh,fill:()=>Tu,findBackend:()=>au,findBackendFactory:()=>su,floor:()=>ic,floorDiv:()=>cu,fused:()=>m,gather:()=>oc,gatherND:()=>xp,gather_util:()=>c,getBackend:()=>nu,getGradient:()=>ua,getKernel:()=>oa,getKernelsForBackend:()=>la,grad:()=>gu,grads:()=>yu,greater:()=>uc,greaterEqual:()=>lc,ifft:()=>Gh,imag:()=>cc,image:()=>Cd,inTopKAsync:()=>Ip,initializers:()=>v,input:()=>Bx,io:()=>i,irfft:()=>Hh,isFinite:()=>hc,isInf:()=>pc,isNaN:()=>dc,keep:()=>Zo,kernel_impls:()=>b,layers:()=>w,leakyRelu:()=>fc,less:()=>mc,lessEqual:()=>gc,linalg:()=>Ed,linspace:()=>yc,loadGraphModel:()=>GS,loadLayersModel:()=>Px,localResponseNormalization:()=>bc,log:()=>xc,log1p:()=>vc,logSigmoid:()=>Ic,logSoftmax:()=>Tc,logSumExp:()=>Dc,logicalAnd:()=>Mc,logicalNot:()=>Lc,logicalOr:()=>Pc,logicalXor:()=>Bc,losses:()=>_d,matMul:()=>ji,math:()=>o,max:()=>Sc,maxPool:()=>zc,maxPool3d:()=>Vc,maxPoolWithArgmax:()=>Wc,maximum:()=>Ru,mean:()=>Uc,memory:()=>qo,meshgrid:()=>jc,metrics:()=>k,min:()=>Kc,minimum:()=>qc,mirrorPad:()=>Xc,mod:()=>Yc,model:()=>Mx,models:()=>I,moments:()=>Qc,movingAverage:()=>gp,mul:()=>pu,multiRNNCell:()=>Zc,multinomial:()=>Jc,neg:()=>wc,nextFrame:()=>Dd,norm:()=>mp,notEqual:()=>eh,oneHot:()=>Ki,ones:()=>Hc,onesLike:()=>th,op:()=>$s,outerProduct:()=>nh,pad:()=>rh,pad1d:()=>ah,pad2d:()=>sh,pad3d:()=>ih,pad4d:()=>oh,pool:()=>lh,pow:()=>Cu,prelu:()=>ch,print:()=>Ci,prod:()=>hh,profile:()=>Xo,rand:()=>ph,randomGamma:()=>yh,randomNormal:()=>bh,randomUniform:()=>xh,range:()=>vh,ready:()=>tu,real:()=>wh,reciprocal:()=>kh,registerBackend:()=>iu,registerCallbackConstructor:()=>zx,registerGradient:()=>ha,registerKernel:()=>ca,registerOp:()=>RI,regularizers:()=>S,relu:()=>Ih,relu6:()=>Sh,removeBackend:()=>ru,reshape:()=>cl,reverse:()=>Nh,reverse1d:()=>Th,reverse2d:()=>$h,reverse3d:()=>Ch,reverse4d:()=>Eh,rfft:()=>Kh,round:()=>_h,rsqrt:()=>Ah,scalar:()=>Iu,scatterND:()=>yp,scatter_util:()=>h,selu:()=>Rh,separableConv2d:()=>Fh,sequential:()=>Lx,serialization:()=>d,setBackend:()=>eu,setPlatform:()=>uu,setdiff1dAsync:()=>Oh,sigmoid:()=>fl,sign:()=>Dh,signal:()=>$d,sin:()=>Mh,sinh:()=>Lh,slice:()=>ml,slice1d:()=>Ph,slice2d:()=>Bh,slice3d:()=>zh,slice4d:()=>Vh,slice_util:()=>p,softmax:()=>Wh,softplus:()=>kc,spaceToBatchND:()=>uh,sparse:()=>Ad,sparseToDense:()=>bp,spectral:()=>Td,split:()=>jh,sqrt:()=>du,square:()=>fu,squaredDifference:()=>qh,squeeze:()=>Xh,stack:()=>Yh,step:()=>Qh,stridedSlice:()=>Zh,string:()=>Rd,sub:()=>Eu,sum:()=>Nc,sumOutType:()=>as,tan:()=>Jh,tanh:()=>gl,tensor:()=>_s,tensor1d:()=>ep,tensor2d:()=>tp,tensor3d:()=>Ji,tensor4d:()=>np,tensor5d:()=>rp,tensor6d:()=>ap,tensor_util:()=>a,test_util:()=>f,tidy:()=>Yo,tile:()=>ac,time:()=>Jo,topk:()=>sp,train:()=>Fd,transpose:()=>qi,truncatedNormal:()=>ip,unique:()=>op,unregisterGradient:()=>da,unregisterKernel:()=>pa,unsortedSegmentSum:()=>up,unstack:()=>lp,upcastType:()=>rs,util:()=>r,valueAndGrad:()=>bu,valueAndGrads:()=>xu,variable:()=>cp,variableGrads:()=>vu,version:()=>tV,version_converter:()=>HS,version_core:()=>Vo,version_layers:()=>ox,where:()=>Xl,whereAsync:()=>pp,zeros:()=>Gc,zerosLike:()=>mu});var r={};n.r(r),n.d(r,{arraysEqual:()=>le,assert:()=>re,assertNonNegativeIntegerDimensions:()=>Be,assertNonNull:()=>se,assertShapesMatch:()=>ae,bytesFromStringArray:()=>Te,bytesPerElement:()=>Ne,checkConversionForErrors:()=>we,clamp:()=>Q,computeStrides:()=>Fe,createScalarValue:()=>_a,createShuffledIndices:()=>de,decodeString:()=>Da,distSquared:()=>ne,encodeString:()=>Oa,fetch:()=>Fa,fingerPrint64:()=>Ea,flatten:()=>ie,getArrayFromDType:()=>ve,getTypedArrayFromDType:()=>xe,hasEncodingLoss:()=>Ie,hexToLong:()=>ba,indexToLoc:()=>Ve,inferDtype:()=>_e,inferFromImplicitShape:()=>ge,isBoolean:()=>Ce,isFunction:()=>Ae,isInt:()=>ce,isNumber:()=>Ee,isPromise:()=>We,isScalarShape:()=>ue,isString:()=>$e,isTypedArray:()=>Se,isValidDtype:()=>ke,locToIndex:()=>ze,makeOnesTypedArray:()=>Me,makeZerosNestedTypedArray:()=>Pe,makeZerosTypedArray:()=>Le,nearestDivisor:()=>Re,nearestLargerEven:()=>Z,now:()=>Ra,parseAxisParam:()=>ye,randUniform:()=>te,repeatedTry:()=>me,rightPad:()=>fe,shuffle:()=>X,shuffleCombo:()=>Y,sizeFromShape:()=>oe,sizeToSquarishShape:()=>pe,squeezeShape:()=>be,sum:()=>ee,swap:()=>J,tanh:()=>he,toNestedArray:()=>De,toTypedArray:()=>Aa});var a={};n.r(a),n.d(a,{assertTypesMatch:()=>is,getTensorsInContainer:()=>us,isTensorInList:()=>os,makeTypesMatch:()=>ss});var s={};n.r(s),n.d(s,{isBrowser:()=>xs,isMobile:()=>bs,mockIsMobile:()=>ys});var i={};n.r(i),n.d(i,{browserFiles:()=>Ri,browserHTTPRequest:()=>Vi,concatenateArrayBuffers:()=>Ls,copyModel:()=>wi,decodeWeights:()=>Fs,encodeWeights:()=>Rs,fromMemory:()=>Gi,getLoadHandlers:()=>Ks,getModelArtifactsForJSON:()=>zs,getModelArtifactsInfoForJSON:()=>Vs,getSaveHandlers:()=>js,http:()=>zi,isHTTPScheme:()=>Pi,listModels:()=>xi,loadWeights:()=>Di,moveModel:()=>ki,registerLoadRouter:()=>Hs,registerSaveRouter:()=>Gs,removeModel:()=>vi,weightsLoaderFactory:()=>Mi,withSaveHandler:()=>Hi});var o={};n.r(o),n.d(o,{confusionMatrix:()=>Xi});var u={};n.r(u),n.d(u,{assertAndGetBroadcastShape:()=>Zi,getBroadcastDims:()=>Yi,getReductionAxes:()=>Qi});var l={};n.r(l),n.d(l,{fromPixels:()=>ao,fromPixelsAsync:()=>no,toPixels:()=>ro});var c={};n.r(c),n.d(c,{prepareAndValidate:()=>so});var h={};n.r(h),n.d(h,{calculateShapes:()=>uo,validateInput:()=>oo,validateUpdateShape:()=>io});var p={};n.r(p),n.d(p,{assertParamsValid:()=>lo,computeFlatOffset:()=>Io,computeOutShape:()=>ho,getNormalizedAxes:()=>go,isSliceContinous:()=>ko,maskToAxes:()=>co,parseSliceParams:()=>So,sliceInfo:()=>No,startForAxis:()=>vo,startIndicesWithElidedDims:()=>yo,stopForAxis:()=>wo,stopIndicesWithElidedDims:()=>bo,stridesForAxis:()=>xo,stridesWithElidedDims:()=>po});var d={};n.r(d),n.d(d,{Serializable:()=>$o,SerializationMap:()=>Co,registerClass:()=>Eo});var f={};n.r(f),n.d(f,{TEST_EPSILON_FLOAT16:()=>_o,encodeStrings:()=>zo,expectArrayBuffersEqual:()=>Bo,expectArraysClose:()=>Ao,expectArraysEqual:()=>Do,expectNumbersClose:()=>Mo,expectPromiseToFail:()=>Oo,expectValuesInRange:()=>Po,testEpsilon:()=>Ro});var m={};n.r(m),n.d(m,{conv2d:()=>Ep,depthwiseConv2d:()=>Rp,matMul:()=>Fp});var g={};n.r(g),n.d(g,{collectGatherOpShapeInfo:()=>Af,computeOutShape:()=>_f,segOpComputeOptimalWindowSize:()=>Ef});var y={};n.r(y),n.d(y,{ERF_A1:()=>Xd,ERF_A2:()=>Yd,ERF_A3:()=>Qd,ERF_A4:()=>Zd,ERF_A5:()=>Jd,ERF_P:()=>qd,PARALLELIZE_THRESHOLD:()=>Pd,SELU_SCALE:()=>Kd,SELU_SCALEALPHA:()=>jd,applyActivation:()=>$p,assertAndGetBroadcastShape:()=>Zi,assertAxesAreInnerMostDims:()=>Ac,assertParamsConsistent:()=>Md,assignToTypedArray:()=>sf,axesAreInnerMostDims:()=>$c,calculateShapes:()=>uo,checkEinsumDimSizes:()=>pf,checkPadOnDimRoundingMode:()=>ll,combineLocations:()=>Cc,complexWithEvenIndex:()=>nf,complexWithOddIndex:()=>rf,computeConv2DInfo:()=>Ju,computeConv3DInfo:()=>el,computeDefaultPad:()=>tl,computeDilation2DInfo:()=>Yu,computeOptimalWindowSize:()=>Bd,computeOutAndReduceShapes:()=>Ec,computeOutShape:()=>Ld,computePool2DInfo:()=>Qu,computePool3DInfo:()=>Zu,convertConv2DDataFormat:()=>ul,decodeEinsumEquation:()=>cf,eitherStridesOrDilationsAreOne:()=>ol,expandShapeToKeepDim:()=>_c,exponent:()=>uf,exponents:()=>of,fromStringArrayToUint8:()=>Ff,fromUint8ToStringArray:()=>Rf,getAxesPermutation:()=>Rc,getBroadcastDims:()=>Yi,getComplexWithIndex:()=>af,getEinsumComputePath:()=>df,getEinsumPermutation:()=>hf,getFusedBiasGradient:()=>Tp,getFusedDyActivation:()=>Np,getImageCenter:()=>zd,getInnerMostAxes:()=>Oc,getPermuted:()=>Wd,getReductionAxes:()=>Qi,getReshaped:()=>Vd,getReshapedPermuted:()=>Ud,getSliceBeginCoords:()=>Gd,getSliceSize:()=>Hd,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>yf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>bf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>xf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>kf,getSparseReshapeInputOutputMismatchErrorMessage:()=>Sf,getSparseReshapeInputOutputMultipleErrorMessage:()=>If,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>vf,getSparseReshapeNegativeOutputDimErrorMessage:()=>wf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Cf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Nf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Tf,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>$f,getUndoAxesPermutation:()=>Fc,isIdentityPermutation:()=>ff,log:()=>aa,mergeRealAndImagArrays:()=>ef,prepareAndValidate:()=>so,prepareSplitSize:()=>gf,segment_util:()=>g,shouldFuse:()=>Cp,slice_util:()=>p,splitRealAndImagArrays:()=>tf,tupleValuesAreOne:()=>il,upcastType:()=>rs,validateInput:()=>oo,validateUpdateShape:()=>io,warn:()=>ra});var b={};n.r(b),n.d(b,{nonMaxSuppressionV3Impl:()=>jp,nonMaxSuppressionV4Impl:()=>Kp,nonMaxSuppressionV5Impl:()=>qp,whereImpl:()=>hp});var x={};n.r(x),n.d(x,{maxNorm:()=>Ag,minMaxNorm:()=>Og,nonNeg:()=>Fg,unitNorm:()=>Rg});var v={};n.r(v),n.d(v,{constant:()=>zy,glorotNormal:()=>Ky,glorotUniform:()=>jy,heNormal:()=>qy,heUniform:()=>Xy,identity:()=>Gy,leCunNormal:()=>Yy,leCunUniform:()=>Qy,ones:()=>By,orthogonal:()=>Zy,randomNormal:()=>Wy,randomUniform:()=>Vy,truncatedNormal:()=>Uy,varianceScaling:()=>Hy,zeros:()=>Py});var w={};n.r(w),n.d(w,{Layer:()=>gb,RNN:()=>Pv,RNNCell:()=>Bv,activation:()=>sk,add:()=>fk,alphaDropout:()=>aI,average:()=>mk,averagePooling1d:()=>Sk,averagePooling2d:()=>$k,averagePooling3d:()=>_k,avgPool1d:()=>Nk,avgPool2d:()=>Ck,avgPool3d:()=>Ak,avgPooling1d:()=>Tk,avgPooling2d:()=>Ek,avgPooling3d:()=>Rk,batchNormalization:()=>wk,bidirectional:()=>Yk,concatenate:()=>gk,conv1d:()=>Yw,conv2d:()=>Qw,conv2dTranspose:()=>Zw,conv3d:()=>Jw,conv3dTranspose:()=>ek,convLstm2d:()=>jk,convLstm2dCell:()=>Kk,cropping2D:()=>nk,dense:()=>ik,depthwiseConv2d:()=>ak,dot:()=>vk,dropout:()=>ok,elu:()=>Gw,embedding:()=>dk,flatten:()=>lk,gaussianDropout:()=>rI,gaussianNoise:()=>nI,globalAveragePooling1d:()=>Fk,globalAveragePooling2d:()=>Ok,globalMaxPool1d:()=>Zk,globalMaxPool2d:()=>Jk,globalMaxPooling1d:()=>Dk,globalMaxPooling2d:()=>Mk,gru:()=>zk,gruCell:()=>Vk,input:()=>Bx,inputLayer:()=>Uw,layerNormalization:()=>kk,leakyReLU:()=>jw,lstm:()=>Wk,lstmCell:()=>Uk,masking:()=>sI,maxPool1d:()=>eI,maxPool2d:()=>tI,maxPooling1d:()=>Lk,maxPooling2d:()=>Pk,maxPooling3d:()=>Bk,maximum:()=>yk,minimum:()=>bk,multiply:()=>xk,permute:()=>pk,prelu:()=>Kw,reLU:()=>Hw,repeatVector:()=>ck,reshape:()=>hk,rnn:()=>qk,separableConv2d:()=>tk,simpleRNN:()=>Gk,simpleRNNCell:()=>Hk,softmax:()=>qw,spatialDropout1d:()=>uk,stackedRNNCells:()=>Xk,thresholdedReLU:()=>Xw,timeDistributed:()=>Qk,upSampling2d:()=>rk,zeroPadding2d:()=>Ik});var k={};n.r(k),n.d(k,{MAPE:()=>gI,MSE:()=>xI,binaryAccuracy:()=>iI,binaryCrossentropy:()=>oI,categoricalAccuracy:()=>lI,categoricalCrossentropy:()=>cI,cosineProximity:()=>dI,mape:()=>yI,meanAbsoluteError:()=>fI,meanAbsolutePercentageError:()=>mI,meanSquaredError:()=>bI,mse:()=>vI,precision:()=>hI,recall:()=>pI,sparseCategoricalAccuracy:()=>uI});var I={};n.r(I),n.d(I,{modelFromJSON:()=>Ox});var S={};n.r(S),n.d(S,{l1:()=>kI,l1l2:()=>wI,l2:()=>II});var N={};n.r(N),n.d(N,{json:()=>WI});var T={};n.r(T),n.d(T,{json:()=>UI});var $={};n.r($),n.d($,{json:()=>GI});var C={};n.r(C),n.d(C,{json:()=>HI});var E={};n.r(E),n.d(E,{json:()=>jI});var _={};n.r(_),n.d(_,{json:()=>KI});var A={};n.r(A),n.d(A,{json:()=>qI});var R={};n.r(R),n.d(R,{json:()=>XI});var F={};n.r(F),n.d(F,{json:()=>YI});var O={};n.r(O),n.d(O,{json:()=>QI});var D={};n.r(D),n.d(D,{json:()=>ZI});var M={};n.r(M),n.d(M,{json:()=>JI});var L={};n.r(L),n.d(L,{json:()=>eS});var P={};n.r(P),n.d(P,{json:()=>tS});var B={};n.r(B),n.d(B,{json:()=>nS});var z={};n.r(z),n.d(z,{json:()=>rS});var V={};n.r(V),n.d(V,{json:()=>aS});var W={};n.r(W),n.d(W,{json:()=>sS});var U={};n.r(U),n.d(U,{json:()=>iS});var G={};n.r(G),n.d(G,{CSVDataset:()=>FN,Dataset:()=>wN,FileDataSource:()=>HN,TextLineDataset:()=>TN,URLDataSource:()=>jN,array:()=>IN,csv:()=>KN,func:()=>qN,generator:()=>XN,microphone:()=>QN,version_data:()=>ZN,webcam:()=>YN,zip:()=>SN});var H={};n.r(H),n.d(H,{addImpl:()=>RT,bincountImpl:()=>S$,bincountReduceImpl:()=>N$,ceilImpl:()=>C$,concatImpl:()=>O$,equalImpl:()=>yC,expImpl:()=>CC,expm1Impl:()=>FC,floorImpl:()=>YC,gatherNdImpl:()=>aE,gatherV2Impl:()=>iE,greaterEqualImpl:()=>hE,greaterImpl:()=>uE,lessEqualImpl:()=>SE,lessImpl:()=>wE,linSpaceImpl:()=>$E,logImpl:()=>EE,maxImpl:()=>GE,maximumImpl:()=>KE,minimumImpl:()=>r_,multiplyImpl:()=>lC,negImpl:()=>d_,notEqualImpl:()=>w_,prodImpl:()=>O_,rangeImpl:()=>M_,rsqrtImpl:()=>q_,sigmoidImpl:()=>xT,simpleAbsImpl:()=>VT,sliceImpl:()=>v$,sparseFillEmptyRowsImpl:()=>fA,sparseReshapeImpl:()=>gA,sparseSegmentReductionImpl:()=>bA,sqrtImpl:()=>IA,squaredDifferenceImpl:()=>$A,stridedSliceImpl:()=>RA,stringNGramsImpl:()=>DA,stringSplitImpl:()=>PA,stringToHashBucketFastImpl:()=>zA,subImpl:()=>BC,tileImpl:()=>HA,topKImpl:()=>XA,transposeImpl:()=>qT,uniqueImpl:()=>nR});class j{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class K{refCount(e){return q("refCount")}incRef(e){return q("incRef")}timerAvailable(){return!0}time(e){return q("time")}read(e){return q("read")}readSync(e){return q("readSync")}readToGPU(e,t){return q("readToGPU")}numDataIds(){return q("numDataIds")}disposeData(e,t){return q("disposeData")}write(e,t,n){return q("write")}move(e,t,n,r,a){return q("move")}memory(){return q("memory")}floatPrecision(){return q("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return q("dispose")}}function q(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function X(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,J(e,t,n)}function Y(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,J(e,n,r),J(t,n,r)}function Q(e,t,n){return Math.max(e,Math.min(t,n))}function Z(e){return e%2==0?e:e+1}function J(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function ee(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function te(e,t){const n=Math.random();return t*n+(1-n)*e}function ne(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function re(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ae(e,t,n=""){re(le(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function se(e){re(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ie(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Se(e)&&!n)for(let r=0;r<e.length;++r)ie(e[r],t,n);else t.push(e);return t}function oe(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ue(e){return 0===e.length}function le(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ce(e){return e%1==0}function he(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function pe(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function de(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return X(t),t}function fe(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function me(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function ge(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function ye(e,t){const n=t.length;return re((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),re(e.every((e=>ce(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function be(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:ye(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function xe(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function ve(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function we(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function ke(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Ie(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Se(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Ne(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Te(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function $e(e){return"string"==typeof e||e instanceof String}function Ce(e){return"boolean"==typeof e}function Ee(e){return"number"==typeof e}function _e(e){return Array.isArray(e)?_e(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Ee(e)?"float32":$e(e)?"string":Ce(e)?"bool":"float32"}function Ae(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Re(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Fe(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Oe(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=Oe(e+t*o,i,n,r)}return a}function De(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Oe(0,e,t,n)}function Me(e,t){const n=Le(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Le(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Pe(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return De(e,new Float32Array(n));if("int32"===t)return De(e,new Int32Array(n));if("bool"===t)return De(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Be(e){e.forEach((t=>{re(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function ze(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Ve(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function We(e){return e&&e.then&&"function"==typeof e.then}class Ue{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ge,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(He().getBool("IS_TEST")||He().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];He().getBool("IS_TEST")||He().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(We(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Ge(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function He(){return Ke}let je,Ke=null;function qe(){if(null==je){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}je=e}return je}function Xe(e,t){const n=function(){const e=qe();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Ye="Abs",Qe="Acos",Ze="Acosh",Je="Add",et="AddN",tt="All",nt="Any",rt="ArgMax",at="ArgMin",st="Asin",it="Asinh",ot="Atan",ut="Atanh",lt="Atan2",ct="AvgPool",ht="AvgPoolGrad",pt="AvgPool3D",dt="AvgPool3DGrad",ft="BatchMatMul",mt="BatchToSpaceND",gt="Bincount",yt="BroadcastTo",bt="BroadcastArgs",xt="Cast",vt="Ceil",wt="ClipByValue",kt="Complex",It="ComplexAbs",St="Concat",Nt="Conv2D",Tt="Conv2DBackpropFilter",$t="Conv2DBackpropInput",Ct="Conv3D",Et="Conv3DBackpropFilterV2",_t="Conv3DBackpropInputV2",At="Cos",Rt="Cosh",Ft="Cumprod",Ot="Cumsum",Dt="CropAndResize",Mt="DenseBincount",Lt="DepthToSpace",Pt="DepthwiseConv2dNative",Bt="DepthwiseConv2dNativeBackpropFilter",zt="DepthwiseConv2dNativeBackpropInput",Vt="Diag",Wt="Dilation2D",Ut="Dilation2DBackpropInput",Gt="Dilation2DBackpropFilter",Ht="RealDiv",jt="Einsum",Kt="Elu",qt="EluGrad",Xt="Erf",Yt="Equal",Qt="Exp",Zt="ExpandDims",Jt="Expm1",en="FFT",tn="Fill",nn="FlipLeftRight",rn="Floor",an="FloorDiv",sn="FusedBatchNorm",on="GatherV2",un="GatherNd",ln="Greater",cn="GreaterEqual",hn="Identity",pn="IFFT",dn="Imag",fn="IsFinite",mn="IsInf",gn="IsNan",yn="LeakyRelu",bn="Less",xn="LessEqual",vn="LinSpace",wn="Log",kn="Log1p",In="LogicalAnd",Sn="LogicalNot",Nn="LogicalOr",Tn="LogSoftmax",$n="LRN",Cn="LRNGrad",En="Max",_n="Maximum",An="MaxPool",Rn="MaxPoolGrad",Fn="MaxPool3D",On="MaxPool3DGrad",Dn="MaxPoolWithArgmax",Mn="Mean",Ln="Min",Pn="Minimum",Bn="MirrorPad",zn="Mod",Vn="Multinomial",Wn="Multiply",Un="Neg",Gn="NotEqual",Hn="NonMaxSuppressionV3",jn="NonMaxSuppressionV4",Kn="NonMaxSuppressionV5",qn="OnesLike",Xn="OneHot",Yn="Pack",Qn="PadV2",Zn="Pool",Jn="Pow",er="Prelu",tr="Prod",nr="Range",rr="Real",ar="Reciprocal",sr="Relu",ir="Reshape",or="ResizeNearestNeighbor",ur="ResizeNearestNeighborGrad",lr="ResizeBilinear",cr="ResizeBilinearGrad",hr="Relu6",pr="Reverse",dr="Round",fr="Rsqrt",mr="ScatterNd",gr="Select",yr="Selu",br="Slice",xr="Sin",vr="Sinh",wr="Sign",kr="Sigmoid",Ir="Softplus",Sr="Sqrt",Nr="Sum",Tr="SpaceToBatchND",$r="SplitV",Cr="Softmax",Er="SparseFillEmptyRows",_r="SparseReshape",Ar="SparseSegmentMean",Rr="SparseSegmentSum",Fr="SparseToDense",Or="SquaredDifference",Dr="Square",Mr="StridedSlice",Lr="StringNGrams",Pr="StringSplit",Br="StringToHashBucketFast",zr="Sub",Vr="Tan",Wr="Tanh",Ur="Tile",Gr="TopK",Hr="Transform",jr="Transpose",Kr="Unique",qr="Unpack",Xr="UnsortedSegmentSum",Yr="ZerosLike",Qr="Step",Zr="FromPixels",Jr="RotateWithOffset",ea="_FusedMatMul",ta="FusedConv2D",na="FusedDepthwiseConv2D";function ra(...e){He().getBool("IS_TEST")||He().getBool("PROD")||console.warn(...e)}function aa(...e){He().getBool("IS_TEST")||He().getBool("PROD")||console.log(...e)}const sa=Xe("kernelRegistry",(()=>new Map)),ia=Xe("gradRegistry",(()=>new Map));function oa(e,t){const n=ma(e,t);return sa.get(n)}function ua(e){return ia.get(e)}function la(e){const t=sa.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function ca(e){const{kernelName:t,backendName:n}=e,r=ma(t,n);sa.has(r)&&ra(`The kernel '${t}' for backend '${n}' is already registered`),sa.set(r,e)}function ha(e){const{kernelName:t}=e;ia.has(t)&&He().getBool("DEBUG")&&ra(`Overriding the gradient for '${t}'`),ia.set(t,e)}function pa(e,t){const n=ma(e,t);if(!sa.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);sa.delete(n)}function da(e){if(!ia.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ia.delete(e)}function fa(e,t){la(e).forEach((e=>{ca(Object.assign({},e,{backendName:t}))}))}function ma(e,t){return`${t}_${e}`}var ga=n(3720);const ya=n.n(ga)()||ga;function ba(e){return ya.fromString(e,!0,16)}const xa=ba("c3a5c85c97cb3127"),va=ba("b492b66fbe98f273"),wa=ba("9ae16a3b2f90404f");function ka(e){return e.xor(e.shru(47))}function Ia(e,t,n){const r=e.slice(t,t+n);return ya.fromBytes(Array.from(r),!0,!0)}function Sa(e,t){return Ia(e,t,8)}function Na(e,t){return Ia(e,t,4)}function Ta(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function $a(e,t,n=ba("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Ca(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=Ta(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(Ta(a,44)),[a.add(r),s.add(i)]}(Sa(e,t),Sa(e,t+8),Sa(e,t+16),Sa(e,t+24),n,r)}function Ea(e,t=e.length){const n=ya.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=wa.add(2*t),r=Sa(e,0).add(wa),a=Sa(e,t-8);return $a(Ta(a,37).mul(n).add(r),Ta(r,25).add(a).mul(n),n)}if(t>=4){const n=wa.add(2*t);return $a(Na(e,0).shl(3).add(t),Na(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return ka(wa.mul(n).xor(xa.mul(r))).mul(wa)}return wa}(e,t):function(e,t=e.length){const n=wa.add(2*t),r=Sa(e,0).mul(va),a=Sa(e,8),s=Sa(e,t-8).mul(n),i=Sa(e,t-16).mul(wa);return $a(Ta(r.add(a),43).add(Ta(s,30)).add(i),r.add(Ta(a.add(wa),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=wa.add(2*t),r=Sa(e,0).mul(wa),a=Sa(e,8),s=Sa(e,t-8).mul(n),i=Sa(e,t-16).mul(wa),o=Ta(r.add(a),43).add(Ta(s,30)).add(i),u=$a(o,r.add(Ta(a.add(wa),18)).add(s),n),l=Sa(e,16).mul(n),c=Sa(e,24),h=o.add(Sa(e,t-32)).mul(n),p=u.add(Sa(e,t-24)).mul(n);return $a(Ta(l.add(c),43).add(Ta(h,30)).add(p),l.add(Ta(c.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(va).add(113),s=ka(a.mul(wa).add(113)).mul(wa),i=[ya.UZERO,ya.UZERO],o=[ya.UZERO,ya.UZERO];r=r.mul(wa).add(Sa(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Ta(r.add(a).add(i[0]).add(Sa(e,u+8)),37).mul(va),a=Ta(a.add(i[1]).add(Sa(e,u+48)),42).mul(va),r=r.xor(o[1]),a=a.add(i[0]).add(Sa(e,u+40)),s=Ta(s.add(o[0]),33).mul(va),i=Ca(e,u,i[1].mul(va),r.add(o[0])),o=Ca(e,u+32,s.add(o[1]),a.add(Sa(e,u+16))),[s,r]=[r,s],u+=64}while(u!==l);const h=va.add(s.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Ta(r.add(a).add(i[0]).add(Sa(e,u+8)),37).mul(h),a=Ta(a.add(i[1]).add(Sa(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(Sa(e,u+40))),s=Ta(s.add(o[0]),33).mul(h),i=Ca(e,u,i[1].mul(h),r.add(o[0])),o=Ca(e,u+32,s.add(o[1]),a.add(Sa(e,u+16))),[s,r]=[r,s],$a($a(i[0],o[0],h).add(ka(a).mul(xa)).add(s),$a(i[1],o[1],h).add(r),h)}function _a(e,t){return"string"===t?Oa(e):Aa([e],t)}function Aa(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ie(e)),He().getBool("DEBUG")&&we(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ra(){return He().platform.now()}function Fa(e,t){return He().platform.fetch(e,t)}function Oa(e,t="utf-8"){return t=t||"utf-8",He().platform.encode(e,t)}function Da(e,t="utf-8"){return t=t||"utf-8",He().platform.decode(e,t)}class Ma{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Pa)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=Ra();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:Ra()-i})}if(He().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{La(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function La(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Pa{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?fe(`${r}ms`,9):r.error,o=fe(e,25),u=t.rank,l=t.size,c=fe(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Ba(e,t,n,r){const a=Fe(t),s=function(e,t,n,r){const a=oe(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?Ua(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],za(u[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=Wa(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function za(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:$e(e)?`'${e}'`:"bool"===n?Va(e):parseFloat(e.toFixed(7)).toString(),fe(r,t)}function Va(e){return 0===e?"false":"true"}function Wa(e,t,n,r,a,s=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[za(Ua(e)[0],0,n)]:"bool"===n?[Va(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Ua(r),s=Ua(s)),["["+r.map(((e,t)=>za(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>za(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Ua(e):Array.from(e)).map(((e,t)=>za(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,s=r+h;p.push(...Wa(e.slice(r,s),l,n,c,a,!1))}p.push("...");for(let t=o-3;t<o;t++){const r=t*h,s=r+h;p.push(...Wa(e.slice(r,s),l,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,s=r+h;p.push(...Wa(e.slice(r,s),l,n,c,a,t===o-1))}const d=2===u?",":"";p[0]="["+p[0]+d;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+d;let f=",\n";for(let e=2;e<u;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function Ua(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Ga{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=oe(e),null!=n){const e=n.length;re(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ve(t,this.size),this.strides=Fe(e)}set(e,...t){0===t.length&&(t=[0]),re(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ha().makeTensor(this.values,this.shape,this.dtype)}}let Ha=null,ja=null,Ka=null;class qa{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=oe(e),this.strides=Fe(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ja.buffer(this.shape,this.dtype,e)}bufferSync(){return ja.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return De(this.shape,e,"complex64"===this.dtype)}arraySync(){return De(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Ha().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Da(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ha().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Ha().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Da(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Ha().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ha().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ja.print(this,e)}clone(){return this.throwIfDisposed(),ja.clone(this)}toString(e=!1){return Ba(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ja.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ha().makeVariable(this,e,t,n)}}function Xa(){return Xe("Tensor",(()=>qa))}Object.defineProperty(qa,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Xa();class Ya extends qa{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!le(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ha().disposeTensor(this),this.dataId=e.dataId,Ha().incRef(this,null)}dispose(){Ha().disposeVariable(this),this.isDisposedInternal=!0}}var Qa,Za,Ja,es,ts;Object.defineProperty(Ya,Symbol.hasInstance,{value:e=>e instanceof qa&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Qa||(Qa={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Za||(Za={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Ja||(Ja={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(es||(es={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ts||(ts={}));const ns={float32:es,int32:Za,bool:Ja,complex64:ts};function rs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return ns[e][t]}function as(e){return rs(e,"int32")}function ss(e,t){if(e.dtype===t.dtype)return[e,t];const n=rs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function is(e,t){re(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function os(e,t){return t.some((t=>t.id===e.id))}function us(e){const t=[];return ls(e,t,new Set),t}function ls(e,t,n){if(null==e)return;if(e instanceof qa)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),ls(r,t,n))}}function cs(e){return null!=e.kernelName}class hs{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ps{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new hs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ra(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ma(this.backendInstance),!0}setupRegisteredKernels(){la(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){la(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof K||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ra(`Initialization of backend ${e} failed`),ra(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return ra(`Initialization of backend ${e} failed`),ra(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return ps.nextTensorId++}nextVariableId(){return ps.nextVariableId++}clone(e){const t=fs.runKernel(hn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return fs.runKernel(xt,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==oa(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=cs(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(cs(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=oa(t,this.backendName);re(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=cs(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(u,l,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=ua(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(re(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&$e(e[0])&&(a=e.map((e=>Oa(e))));const s=r.write(a,t,n),i=new qa(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=Te(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new qa(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new Ya(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ne(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ya||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Ne(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=ua(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Le(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=us(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(re(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));re(a instanceof qa,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=Me(oe(e),"float32");return fs.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!le(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),ms);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return re(Ae(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;re(t.every((e=>e instanceof qa)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),re(n.value instanceof qa,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),re(Ae(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];re(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),re(s.every((e=>e instanceof qa)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ra(),n=await this.backend.time(e);return n.wallMs=Ra()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new hs;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ds(){const e=qe();if(null==e._tfengine){const t=new Ue(e);e._tfengine=new ps(t)}var t;return t=e._tfengine.ENV,Ke=t,Ha=()=>e._tfengine,e._tfengine}ps.nextTensorId=0,ps.nextVariableId=0;const fs=ds();function ms(e,t){const n={a:e,b:t};return fs.runKernel(Je,n)}let gs;function ys(e){gs=e}function bs(e){if(void 0!==gs)return gs;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function xs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const vs=He();function ws(e,t){let n=e;if(Se(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Se(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&He().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ks(e,r,[]),r}function ks(e,t,n){if(n=n||[],!Array.isArray(e)&&!Se(e))return void re(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));re(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),re(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)ks(e[t],r,n.concat(t))}function Is(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ss(e,t,n,r="numeric"){if(e instanceof qa)return Is(r,e.dtype,t,n),e;let a=_e(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Is(r,a,t,n),null==e||!Se(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=ws(e,a);Se(e)||Array.isArray(e)||(e=[e]);const i="string"!==a?Aa(e,a):ie(e,[],!0);return fs.makeTensor(i,s,a)}function Ns(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Ss(e,`${t}[${a}]`,n,r)))}vs.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),vs.registerFlag("IS_BROWSER",(()=>xs())),vs.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),vs.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),vs.registerFlag("PROD",(()=>!1)),vs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>vs.getBool("DEBUG"))),vs.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),vs.registerFlag("IS_TEST",(()=>!1)),vs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),vs.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),vs.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const Ts="__op";function $s(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ts;const a=(...e)=>{fs.startScope(n);try{const t=r(...e);return We(t)&&console.error("Cannot return a Promise inside of tidy."),fs.endScope(t),t}catch(e){throw fs.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}const Cs=$s({complex_:function(e,t){const n=Ss(e,"real","complex"),r=Ss(t,"imag","complex");ae(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return fs.runKernel(kt,a)}});function Es(e,t,n,r){if(null==r&&(r=_e(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Se(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Be(t);const e=oe(t),r=oe(n);re(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==oe(t.slice(e));re(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Se(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Aa(e,r):ie(e,[],!0),fs.makeTensor(e,t,r)}function _s(e,t,n){return Es(e,t,ws(e,n),n)}const As={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Rs(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:Os(await Promise.all(r)),specs:n}}function Fs(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=oe(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=As[n.dtype],c=e.slice(a,a+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Ws()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*o}else if("string"===i){const t=oe(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=As[i],s=e.slice(a,a+u*r);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=_s(e,o,"float32"),i=_s(r,o,"float32");n[t]=Cs(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=_s(l,o,i))}return n}function Os(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const Ds="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ms(e){return Ds?Buffer.byteLength(e):new Blob([e]).size}function Ls(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Ps(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Bs(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function zs(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Vs(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ms(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ms(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Ws(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}class Us{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Us.instance&&(Us.instance=new Us),Us.instance}static registerSaveRouter(e){Us.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Us.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Us.getHandlers(e,"save")}static getLoadHandlers(e,t){return Us.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Us.getInstance().loadRouters:Us.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const Gs=e=>Us.registerSaveRouter(e),Hs=e=>Us.registerLoadRouter(e),js=e=>Us.getSaveHandlers(e),Ks=(e,t)=>Us.getLoadHandlers(e,t),qs="tensorflowjs",Xs="models_store",Ys="model_info_store";function Qs(){if(!He().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Zs(e){const t=e.result;t.createObjectStore(Xs,{keyPath:"modelPath"}),t.createObjectStore(Ys,{keyPath:"modelPath"})}class Js{constructor(e){if(this.indexedDB=Qs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(qs,1);r.onupgradeneeded=()=>Zs(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(Xs,"readonly"),r=t.objectStore(Xs).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Vs(t),s=a.transaction(Ys,"readwrite");let i=s.objectStore(Ys);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(Xs,"readwrite");const o=u.objectStore(Xs).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(Ys);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}Js.URL_SCHEME="indexeddb://";const ei=e=>{return He().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Js.URL_SCHEME)?(t=e.slice(Js.URL_SCHEME.length),new Js(t)):null;var t};Us.registerSaveRouter(ei),Us.registerLoadRouter(ei);class ti{constructor(){this.indexedDB=Qs()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(qs,1);n.onupgradeneeded=()=>Zs(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(Ys,"readonly"),s=a.objectStore(Ys).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Js.URL_SCHEME)?t.slice(Js.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(qs,1);r.onupgradeneeded=()=>Zs(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(Ys,"readwrite"),i=s.objectStore(Ys),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(Xs,"readwrite");const r=u.objectStore(Xs).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const ni="/",ri="tensorflowjs_models",ai="info",si="model_topology",ii="weight_specs",oi="weight_data",ui="model_metadata";function li(e){return{info:[ri,e,ai].join(ni),topology:[ri,e,si].join(ni),weightSpecs:[ri,e,ii].join(ni),weightData:[ri,e,oi].join(ni),modelMetadata:[ri,e,ui].join(ni)}}function ci(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function hi(e){const t=e.split(ni);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ni)}class pi{constructor(e){if(!He().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=li(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Vs(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ds)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw ci(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ds){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}pi.URL_SCHEME="localstorage://";const di=e=>{return He().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(pi.URL_SCHEME)?(t=e.slice(pi.URL_SCHEME.length),new pi(t)):null;var t};Us.registerSaveRouter(di),Us.registerLoadRouter(di);class fi{constructor(){re(He().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),re("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ri+ni,n=ni+ai;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[hi(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=li(e=(t=e).startsWith(pi.URL_SCHEME)?t.slice(pi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ci(n),r}}const mi="://";class gi{constructor(){this.managers={}}static getInstance(){return null==gi.instance&&(gi.instance=new gi),gi.instance}static registerManager(e,t){re(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(mi)&&(e=e.slice(0,e.indexOf(mi))),re(e.length>0,(()=>"scheme must not be an empty string."));const n=gi.getInstance();re(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function yi(e){if(-1===e.indexOf(mi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${gi.getSchemes().join(",")}`);return{scheme:e.split(mi)[0],path:e.split(mi)[1]}}async function bi(e,t,n=!1){re(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Us.getLoadHandlers(e);re(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),re(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=Us.getSaveHandlers(t);re(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),re(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=yi(e).scheme,u=yi(e).path,l=o===yi(e).scheme,c=await a.load();n&&l&&await gi.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await gi.getManager(o).removeModel(u),h.modelArtifactsInfo}async function xi(){const e=gi.getSchemes(),t={};for(const n of e){const e=await gi.getManager(n).listModels();for(const r in e)t[n+mi+r]=e[r]}return t}async function vi(e){const t=yi(e);return gi.getManager(t.scheme).removeModel(t.path)}async function wi(e,t){return bi(e,t,!1)}async function ki(e,t){return bi(e,t,!0)}class Ii{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(He().get("IS_BROWSER")){He().setPlatform("browser",new Ii);try{gi.registerManager(pi.URL_SCHEME,new fi)}catch(e){}try{gi.registerManager(Js.URL_SCHEME,new ti)}catch(e){}}let Si;function Ni(e,t="float32",n){return t=t||"float32",Be(e),new Ga(e,t,n)}He().get("IS_NODE")&&!He().get("IS_BROWSER")&&He().setPlatform("node",new class{constructor(){this.util=n(7004),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=He().global.fetch?He().global.fetch(e,t):(null==Si&&(Si=n(5755)),Si(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Ti=$s({cast_:function(e,t){const n=Ss(e,"x","cast");if(!ke(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return fs.runKernel(xt,r,a)}}),$i=$s({clone_:function(e){const t={x:Ss(e,"x","clone","string_or_numeric")};return fs.runKernel(hn,t)}});function Ci(e,t=!1){console.log(e.toString(t))}function Ei(e){return new Promise((e=>setTimeout(e))).then(e)}ds(),ja={buffer:Ni,cast:Ti,clone:$i,print:Ci};class _i{constructor(e){if(!He().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(_i.URL_SCHEME)&&(e=e.slice(_i.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Bs(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Ei((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ei((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Vs(e)}}}}_i.URL_SCHEME="downloads://";class Ai{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=zs(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Ls(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Ps(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=Ps(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Ri(e){return new Ai(e)}function Fi(e,t,n,r){!function(e){re(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){re(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),re(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),re(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}async function Oi(e,t){null==t&&(t={});const n=null==t.fetchFunc?He().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Fi(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Fi(a,t.onProgress,.5,1)}async function Di(e,t="",n,r){return Mi((e=>Oi(e,{requestInit:r})))(e,t,n)}function Mi(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=As[u]*oe(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let p=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[p+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{const t=Fs(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}Us.registerSaveRouter((e=>He().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(_i.URL_SCHEME)?function(e="model"){return new _i(e)}(e.slice(_i.URL_SCHEME.length)):null));class Li{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(re("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=He().platform.fetch,re(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&re(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Bs(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Vs(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return zs(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Ls(await Oi(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Pi(e){return null!=e.match(Li.URL_SCHEME_REGEX)}Li.URL_SCHEME_REGEX=/^https?:\/\//;const Bi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Pi(e))):Pi(e),n)return zi(e,t)}return null};function zi(e,t){return new Li(e,t)}function Vi(e,t){return zi(e,t)}Us.registerSaveRouter(Bi),Us.registerLoadRouter(Bi);class Wi{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Ui{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Gi(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Wi(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Wi({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Wi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Hi(e){return new Ui(e)}const ji=$s({matMul_:function(e,t,n=!1,r=!1){let a=Ss(e,"a","matMul"),s=Ss(t,"b","matMul");[a,s]=ss(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return fs.runKernel(ft,i,o)}}),Ki=$s({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Ss(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return fs.runKernel(Xn,a,s)}}),qi=$s({transpose_:function(e,t){const n=Ss(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),re(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{re(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return fs.runKernel(jr,r,a)}}),Xi=$s({confusionMatrix_:function(e,t,n){const r=Ss(e,"labels","confusionMatrix"),a=Ss(t,"predictions","confusionMatrix");re(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),re(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),re(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),re(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),re(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=Ki(Ti(r,"int32"),n),i=Ki(Ti(a,"int32"),n),o=qi(s),u=ji(o,i);return Ti(u,"int32")}});function Yi(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function Qi(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Zi(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}function Ji(e,t,n){if(se(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=ws(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Es(e,t,r,n)}let eo;function to(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=oa(Zr,fs.backendName)){const n={pixels:e},r={numChannels:t};return fs.runKernel(Zr,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(s||a||o){if(null==eo)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");eo=new OffscreenCanvas(1,1).getContext("2d")}else eo=document.createElement("canvas").getContext("2d");eo.canvas.width=u,eo.canvas.height=l,eo.drawImage(e,0,0,u,l),c=eo.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Ji(h,[l,u,t],"int32")}async function no(e,t=3){let n=null;if(He().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return to(n,t)}async function ro(e,t){let n=Ss(e,"img","toPixels");if(!(e instanceof qa)){const e=n;n=Ti(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const ao=$s({fromPixels_:to});function so(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===oe(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[...Fe(e.shape).map((e=>e/l)),1].slice(0,s);return[u,i,l,c]}function io(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function oo(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}io(n,t,e)}function uo(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:oe(t.shape)/o,sliceSize:i,strides:[...Fe(n.slice(0,a)),1],outputSize:oe(n)}}function lo(e,t,n){const r=e.shape.length;re(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),re(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)re(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function co(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ho(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function po(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function fo(e,t,n){return n<=e?n:n-(t-1)}function mo(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function go(e,t,n,r,a,s,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),p=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=yo(i,u,l,r,e),h=bo(o,u,l,a,e),p=po(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=vo(i,r,s,e,t,u),h[t]=wo(o,a,s,e,t,u),p[t]=xo(s,t,u);return{begin:c,end:h,strides:p}}function yo(e,t,n,r,a){const s=[...a],i=mo(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=fo(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function bo(e,t,n,r,a){const s=[...a],i=mo(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=fo(t,n,a);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=Q(0,s[e],a[e])}return s}function xo(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function vo(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=Q(0,i,u-1),i}function wo(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?Q(0,i,u):Q(-1,i,u-1),i}function ko(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Io(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function So(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{re(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(re(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function No(e,t,n,r,a,s,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[p.beginMask&1<<t,p.endMask&1<<t],s=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=To(p.begin[t],0,p.strides[t],r,a,s),p.end[t]=To(p.end[t],1,p.strides[t],r,a,s);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;d=d&&e,f=f&&(0===t&&1===p.strides[t]||e)}else d=d&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,u=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function To(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}class $o{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Co{constructor(){this.classNameMap={}}static getMap(){return null==Co.instance&&(Co.instance=new Co),Co.instance}static register(e){Co.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Eo(e){re(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),re("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),re(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Co.register(e)}const _o=.1;function Ao(e,t,n){return null==n&&(n=Ro()),Fo(e,t,((e,t)=>Lo(e,t,n)))}function Ro(){return 32===fs.backend.floatPrecision()?.001:_o}function Fo(e,t,n){let r=!0;if((Se(e)||Se(t))&&(r=!1),Se(e)&&Se(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=ws(e),r=ws(t);if(!le(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=Se(e)?e:ie(e),s=Se(t)?t:ie(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Oo(e,t){e().then((()=>t.fail()),(()=>t()))}function Do(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return $e(e)||$e(e[0])||$e(t)||$e(t[0])?Fo(e,n,((e,t)=>e==t)):Fo(e,t,((e,t)=>Lo(e,t,0)))}function Mo(e,t,n){if(null==n&&(n=Ro()),!Lo(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Lo(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Po(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Bo(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function zo(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?zo(n):e[t]=Oa(n)}return e}const Vo="3.15.0";function Wo(){He().set("PROD",!0)}function Uo(){He().set("DEBUG",!0)}function Go(){He().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Ho(e){He().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function jo(){fs.disposeVariables()}function Ko(){return fs}function qo(){return fs.memory()}function Xo(e){return fs.profile(e)}function Yo(e,t){return fs.tidy(e,t)}function Qo(e){us(e).forEach((e=>e.dispose()))}function Zo(e){return fs.keep(e)}function Jo(e){return fs.time(e)}function eu(e){return fs.setBackend(e)}function tu(){return fs.ready()}function nu(){return fs.backendName}function ru(e){fs.removeBackend(e)}function au(e){return fs.findBackend(e)}function su(e){return fs.findBackendFactory(e)}function iu(e,t,n=1){return fs.registerBackend(e,t,n)}function ou(){return fs.backend}function uu(e,t){He().setPlatform(e,t)}Ka=Ho;const lu=$s({add_:function(e,t){let n=Ss(e,"a","add"),r=Ss(t,"b","add");[n,r]=ss(n,r);const a={a:n,b:r};return fs.runKernel(Je,a)}}),cu=$s({floorDiv_:function(e,t){let n=Ss(e,"a","floorDiv"),r=Ss(t,"b","floorDiv");[n,r]=ss(n,r);const a={a:n,b:r};return fs.runKernel(an,a)}}),hu=$s({div_:function(e,t){let n=Ss(e,"a","div"),r=Ss(t,"b","div");if([n,r]=ss(n,r),"int32"===n.dtype&&"int32"===r.dtype)return cu(n,r);const a={a:n,b:r};return fs.runKernel(Ht,a,{})}}),pu=$s({mul_:function(e,t){let n=Ss(e,"a","mul"),r=Ss(t,"b","mul");[n,r]=ss(n,r);const a={a:n,b:r};return fs.runKernel(Wn,a)}}),du=$s({sqrt_:function(e){const t={x:Ss(e,"x","sqrt","float32")};return fs.runKernel(Sr,t)}}),fu=$s({square_:function(e){const t=Ss(e,"x","square");return fs.runKernel("Square",{x:t},{})}}),mu=$s({zerosLike_:function(e){const t={x:Ss(e,"x","zerosLike")};return fs.runKernel(Yr,t)}});function gu(e){return re(Ae(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Ss(t,"x","tf.grad","string_or_numeric"),a=null!=n?Ss(n,"dy","tf.grad"):null;return fs.tidy((()=>{const{value:t,grads:n}=fs.gradients((()=>e(r)),[r],a);return null!=a&&ae(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),ku(n),n[0]}))}}function yu(e){return re(Ae(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{re(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Ns(t,"args","tf.grads","string_or_numeric"),a=null!=n?Ss(n,"dy","tf.grads"):null;return fs.tidy((()=>{const{value:t,grads:n}=fs.gradients((()=>e(...r)),r,a);return null!=a&&ae(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ku(n),n}))}}function bu(e){return re(Ae(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{re(t instanceof qa,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),re(null==n||n instanceof qa,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:a}=fs.gradients((()=>e(t)),[t],n);return ku(r),{grad:r[0],value:a}}}function xu(e){return re(Ae(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{re(Array.isArray(t)&&t.every((e=>e instanceof qa)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),re(null==n||n instanceof qa,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=fs.gradients((()=>e(...t)),t,n);return null!=n&&ae(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ku(r.grads),r}}function vu(e,t){re(Ae(e),(()=>"The f passed in variableGrads(f) must be a function")),re(null==t||Array.isArray(t)&&t.every((e=>e instanceof Ya)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in fs.registeredVariables)t.push(fs.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;t=t.filter((e=>e.trainable)),re(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:i}=fs.gradients(e,t,null,!0);re(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),re(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function wu(e){return fs.customGrad(e)}function ku(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function Iu(e,t){if((Se(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Se(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Es(e,[],[],t)}class Su extends $o{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Qo(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return vu(e,t)}dispose(){null!=this.iterations_&&Qo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Iu(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Su,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Nu extends Su{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=fs.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=fs.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Yo((()=>mu(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Yo((()=>mu(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Yo((()=>{const e=lu(pu(s,this.rho),pu(fu(a),1-this.rho)),t=pu(hu(du(lu(i,this.epsilon)),du(lu(s,this.epsilon))),a),n=lu(pu(i,this.rho),pu(fu(t),1-this.rho));s.assign(e),i.assign(n);const o=lu(pu(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Qo(this.accumulatedGrads.map((e=>e.variable))),Qo(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Tu(e,t,n){const r={shape:e,value:t,dtype:n};return fs.runKernel(tn,{},r)}Nu.className="Adadelta",Eo(Nu);class $u extends Su{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=fs.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Yo((()=>Tu(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Yo((()=>{const e=lu(s,fu(a));s.assign(e);const t=lu(pu(hu(a,du(lu(e,fs.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Qo(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}$u.className="Adagrad",Eo($u);const Cu=$s({pow_:function(e,t){let n=Ss(e,"base","pow"),r=Ss(t,"exp","pow");[n,r]=ss(n,r);const a={a:n,b:r};return fs.runKernel(Jn,a)}}),Eu=$s({sub_:function(e,t){let n=Ss(e,"a","sub"),r=Ss(t,"b","sub");[n,r]=ss(n,r);const a={a:n,b:r};return fs.runKernel(zr,a)}});class _u extends Su{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Yo((()=>{this.accBeta1=Iu(t).variable(),this.accBeta2=Iu(n).variable()})),null==r&&(this.epsilon=fs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Yo((()=>{const n=Eu(1,this.accBeta1),r=Eu(1,this.accBeta2);t.forEach(((t,a)=>{const s=fs.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Yo((()=>mu(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Yo((()=>mu(s).variable(!1)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=lu(pu(o,this.beta1),pu(i,1-this.beta1)),c=lu(pu(u,this.beta2),pu(fu(i),1-this.beta2)),h=hu(l,n),p=hu(c,r);o.assign(l),u.assign(c);const d=lu(pu(hu(h,lu(du(p),this.epsilon)),-this.learningRate),s);s.assign(d)})),this.accBeta1.assign(pu(this.accBeta1,this.beta1)),this.accBeta2.assign(pu(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Qo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Qo(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Yo((()=>{this.accBeta1.assign(Cu(this.beta1,this.iterations_+1)),this.accBeta2.assign(Cu(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}_u.className="Adam",Eo(_u);const Au=$s({abs_:function(e){const t=Ss(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return fs.runKernel(It,e)}{const e={x:t};return fs.runKernel(Ye,e)}}}),Ru=$s({maximum_:function(e,t){let n=Ss(e,"a","maximum"),r=Ss(t,"b","maximum");[n,r]=ss(n,r),"bool"===n.dtype&&(n=Ti(n,"int32"),r=Ti(r,"int32")),Zi(n.shape,r.shape);const a={a:n,b:r};return fs.runKernel(_n,a)}});class Fu extends Su{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Yo((()=>{this.iteration=Iu(0).variable(),this.accBeta1=Iu(t).variable()})),null==r&&(this.epsilon=fs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Yo((()=>{const n=Eu(1,this.accBeta1),r=hu(-this.learningRate,lu(pu(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=fs.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:mu(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:mu(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=lu(pu(o,this.beta1),pu(i,1-this.beta1)),c=pu(u,this.beta2),h=Au(i),p=Ru(c,h);o.assign(l),u.assign(p);const d=lu(pu(hu(r,n),hu(l,lu(p,this.epsilon))),s);s.assign(d)})),this.iteration.assign(lu(this.iteration,1)),this.accBeta1.assign(pu(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Qo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Qo(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Fu.className="Adamax",Eo(Fu);class Ou extends Su{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=fs.registeredVariables[t];Yo((()=>{const e=lu(pu(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Zo(Iu(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Ou.className="SGD",Eo(Ou);class Du extends Ou{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Iu(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=fs.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Yo((()=>mu(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Yo((()=>{let e;const t=lu(pu(this.m,a),s);e=this.useNesterov?lu(pu(this.c,lu(s,pu(t,this.m))),r):lu(pu(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Qo(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Du.className="Momentum",Eo(Du);class Mu extends Su{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=fs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=fs.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Yo((()=>mu(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Yo((()=>mu(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Yo((()=>mu(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Yo((()=>{const e=lu(pu(i,this.decay),pu(fu(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=lu(pu(t,this.decay),pu(s,1-this.decay)),u=hu(pu(s,this.learningRate),du(Eu(e,lu(fu(a),this.epsilon)))),l=lu(pu(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=Eu(r,l);r.assign(c)}else{const e=lu(pu(i,this.decay),pu(fu(s),1-this.decay)),t=lu(pu(o,this.momentum),hu(pu(s,this.learningRate),du(lu(e,this.epsilon))));i.assign(e),o.assign(t);const n=Eu(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Qo(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Qo(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Qo(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Mu.className="RMSProp",Eo(Mu);class Lu{static sgd(e){return new Ou(e)}static momentum(e,t,n=!1){return new Du(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Mu(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new _u(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Nu(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Fu(e,t,n,r,a)}static adagrad(e,t=.1){return new $u(e,t)}}const Pu=$s({acos_:function(e){const t={x:Ss(e,"x","acos")};return fs.runKernel(Qe,t)}}),Bu=$s({acosh_:function(e){const t={x:Ss(e,"x","acosh")};return fs.runKernel(Ze,t)}}),zu=$s({addN_:function(e){re(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),re(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Ss(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!le(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return fs.runKernel(et,r)}}),Vu=$s({all_:function(e,t=null,n=!1){const r={x:Ss(e,"x","all","bool")},a={axis:t,keepDims:n};return fs.runKernel(tt,r,a)}}),Wu=$s({any_:function(e,t=null,n=!1){const r={x:Ss(e,"x","any","bool")},a={axis:t,keepDims:n};return fs.runKernel(nt,r,a)}}),Uu=$s({argMax_:function(e,t=0){const n={x:Ss(e,"x","argMax")},r={axis:t};return fs.runKernel(rt,n,r)}}),Gu=$s({argMin_:function(e,t=0){const n={x:Ss(e,"x","argMin")},r={axis:t};return fs.runKernel(at,n,r)}}),Hu=$s({asin_:function(e){const t={x:Ss(e,"x","asin")};return fs.runKernel(st,t)}}),ju=$s({asinh_:function(e){const t={x:Ss(e,"x","asinh")};return fs.runKernel(it,t)}}),Ku=$s({atan_:function(e){const t={x:Ss(e,"x","atan")};return fs.runKernel(ot,t)}}),qu=$s({atan2_:function(e,t){let n=Ss(e,"a","atan2"),r=Ss(t,"b","atan2");[n,r]=ss(n,r);const a={a:n,b:r};return fs.runKernel(lt,a)}}),Xu=$s({atanh_:function(e){const t={x:Ss(e,"x","atanh")};return fs.runKernel(ut,t)}});function Yu(e,t,n,r,a="NHWC",s){return Ju(e,[...t,e[3]],n,s,r,null,null,ul(a))}function Qu(e,t,n,r,a,s,i="channelsLast"){const[o,u]=nl(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return Ju(e,l,n,r,a,s,!1,i)}function Zu(e,t,n,r,a,s,i="NDHWC"){const[o,u,l]=rl(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return el(e,c,n,r,a,!1,h,s)}function Ju(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[p,d,,f]=t,[m,g]=nl(n),[y,b]=nl(r),x=al(p,y),v=al(d,b),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,a,s,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=tl(e,t,n));const s=e[1];return[sl((e[0]-t+2*r)/n+1,a),sl((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),u=Math.floor(e/2),p=e-u,d=Math.floor(o/2);l={top:u,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===u?e[1][0]:e[2][0],d="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=sl((t-s+p+d)/r+1,o),h=sl((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(a,l,c,m,g,x,v,s,o),S=i?f*h:f;let N;return"channelsFirst"===o?N=[u,S,k,I]:"channelsLast"===o&&(N=[u,k,I,S]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function el(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,l,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,p,l,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=rl(n),[v,w,k]=rl(r),I=al(d,v),S=al(f,w),N=al(m,k),{padInfo:T,outDepth:$,outHeight:C,outWidth:E}=function(e,t,n,r,a,s,i,o,u,l,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=tl(e,t,r));const i=e[1],o=e[2];return[sl((e[0]-t+2*a)/r+1,s),sl((i-t+2*a)/r+1,s),sl((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,c);p=s[0],d=s[1],f=s[2]}else if("same"===e){p=Math.ceil(t/a),d=Math.ceil(n/s),f=Math.ceil(r/i);const e=(p-1)*a+o-t,c=(d-1)*s+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/a),d=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(a,l,c,h,y,b,x,I,S,N,o),_=s?g*p:g;let A;return"channelsFirst"===i?A=[u,_,$,C,E]:"channelsLast"===i&&(A=[u,$,C,E,_]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:p,outDepth:$,outHeight:C,outWidth:E,outChannels:_,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function tl(e,t,n,r=1){const a=al(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function nl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function rl(e){return"number"==typeof e?[e,e,e]:e}function al(e,t){return t<=1?e:e+(e-1)*(t-1)}function sl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function il(e){const[t,n,r]=nl(e);return 1===t&&1===n&&1===r}function ol(e,t){return il(e)||il(t)}function ul(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function ll(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)re(ce(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{re(ce(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const cl=$s({reshape_:function(e,t){const n={x:Ss(e,"x","reshape","string_or_numeric")},r={shape:t};return fs.runKernel(ir,n,r)}}),hl=$s({avgPool_:function(e,t,n,r,a){const s=Ss(e,"x","avgPool","float32");re(ol(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=cl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),re(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),ll("avgPool",r,a);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=fs.runKernel(ct,u,l);return c=Ti(c,s.dtype),o?cl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),pl=$s({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const i=Ss(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=cl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),re(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),re("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),ll("avgPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let h=fs.runKernel(pt,l,c);return h=Ti(h,o.dtype),u?cl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),dl=$s({concat_:function(e,t=0){re(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Ns(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return $i(n[0]);const r=n,a={axis:t};return fs.runKernel(St,r,a)}}),fl=$s({sigmoid_:function(e){const t={x:Ss(e,"x","sigmoid","float32")};return fs.runKernel(kr,t)}}),ml=$s({slice_:function(e,t,n){const r=Ss(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return fs.runKernel(br,a,s)}}),gl=$s({tanh_:function(e){const t={x:Ss(e,"x","tanh","float32")};return fs.runKernel(Wr,t)}}),yl=$s({basicLSTMCell_:function(e,t,n,r,a,s){const i=Ss(e,"forgetBias","basicLSTMCell"),o=Ss(t,"lstmKernel","basicLSTMCell"),u=Ss(n,"lstmBias","basicLSTMCell"),l=Ss(r,"data","basicLSTMCell"),c=Ss(a,"c","basicLSTMCell"),h=Ss(s,"h","basicLSTMCell"),p=dl([l,h],1),d=ji(p,o),f=lu(d,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=ml(f,[0,0],y),x=ml(f,[0,g],y),v=ml(f,[0,2*g],y),w=ml(f,[0,3*g],y),k=lu(pu(fl(b),gl(x)),pu(c,fl(lu(i,v))));return[k,pu(gl(k),fl(w))]}}),bl=$s({batchToSpaceND_:function(e,t,n){const r=Ss(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));re(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),re(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),re(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},i={blockShape:t,crops:n};return fs.runKernel(mt,s,i)}}),xl=$s({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const i=Ss(e,"x","batchNorm"),o=Ss(t,"mean","batchNorm"),u=Ss(n,"variance","batchNorm");let l,c;null!=a&&(l=Ss(a,"scale","batchNorm")),null!=r&&(c=Ss(r,"offset","batchNorm")),re(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),re(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),re(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?cl(e,[1,1,1,e.size]):2===e.rank?cl(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?cl(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),p={x:h,scale:l,offset:c,mean:o,variance:u},d={varianceEpsilon:s},f=fs.runKernel(sn,p,d);return cl(f,i.shape)}}),vl=$s({batchNorm2d_:function(e,t,n,r,a,s){const i=Ss(e,"x","batchNorm"),o=Ss(t,"mean","batchNorm"),u=Ss(n,"variance","batchNorm");let l,c;return null!=a&&(l=Ss(a,"scale","batchNorm")),null!=r&&(c=Ss(r,"offset","batchNorm")),re(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),re(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),re(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&re(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&re(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),xl(i,o,u,c,l,s)}}),wl=$s({batchNorm3d_:function(e,t,n,r,a,s){const i=Ss(e,"x","batchNorm"),o=Ss(t,"mean","batchNorm"),u=Ss(n,"variance","batchNorm");let l,c;return null!=a&&(l=Ss(a,"scale","batchNorm")),null!=r&&(c=Ss(r,"offset","batchNorm")),re(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),re(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),re(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&re(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&re(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),xl(i,o,u,c,l,s)}}),kl=$s({batchNorm4d_:function(e,t,n,r,a,s){const i=Ss(e,"x","batchNorm"),o=Ss(t,"mean","batchNorm"),u=Ss(n,"variance","batchNorm");let l,c;return null!=a&&(l=Ss(a,"scale","batchNorm")),null!=r&&(c=Ss(r,"offset","batchNorm")),re(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),re(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),re(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&re(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&re(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),xl(i,o,u,c,l,s)}}),Il=$s({bincount_:function(e,t,n){const r=Ss(e,"x","bincount"),a=Ss(t,"weights","bincount");re("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),re(n>=0,(()=>`size must be non-negative, but got ${n}.`)),re(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},i={size:n};return fs.runKernel(gt,s,i)}}),Sl=$s({broadcastArgs_:function(e,t){const n=Ss(e,"s0","broadcastArgs","int32"),r=Ss(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return fs.runKernel(bt,a)}}),Nl=$s({broadcastTo_:function(e,t){let n=Ss(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=cl(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return $i(n);const i={x:n},o={reps:s};return fs.runKernel(Ur,i,o)}}),Tl=$s({ceil_:function(e){const t={x:Ss(e,"x","ceil","float32")};return fs.runKernel(vt,t)}}),$l=$s({clipByValue_:function(e,t,n){const r=Ss(e,"x","clipByValue");re(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return fs.runKernel(wt,a,s)}}),Cl=$s({concat1d_:function(e){return dl(e,0)}}),El=$s({concat2d_:function(e,t){return dl(e,t)}}),_l=$s({concat3d_:function(e,t){return dl(e,t)}}),Al=$s({concat4d_:function(e,t){return dl(e,t)}}),Rl=$s({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=Ss(e,"x","conv2d","float32"),u=Ss(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),re(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),re(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),ll("conv2d",r,i);const h="NHWC"===a?l.shape[3]:l.shape[1];re(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),re(ol(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const p={x:l,filter:u},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=fs.runKernel(Nt,p,d);return c?cl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Fl=$s({conv1d_:function(e,t,n,r,a="NWC",s=1,i){const o=Ss(e,"x","conv1d"),u=Ss(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=cl(o,[1,o.shape[0],o.shape[1]])),re(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),re(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),ll("conv1d",r,i),re(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),re(ol(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),re("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const h=cl(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=cl(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=Rl(p,h,[1,n],r,"NHWC",[1,s],i);return cl(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),Ol=$s({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){re(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=cl(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),re(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),re(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),re(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?u.shape[3]:u.shape[1];re(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),re(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),ll("conv2dDerInput",a,i);const p={dy:u,filter:n},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=fs.runKernel($t,p,d);return l?cl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Dl=$s({conv2dTranspose_:function(e,t,n,r,a,s){const i=Ss(e,"x","conv2dTranspose"),o=Ss(t,"filter","conv2dTranspose");return Ol(n,i,o,r,a,"NHWC",s)}}),Ml=$s({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const i=Ss(e,"x","conv3d"),o=Ss(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=cl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),re(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),re(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),re(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),re(ol(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),re("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},p=fs.runKernel(Ct,c,h);return l?cl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Ll=$s({conv3DBackpropInput_:function(e,t,n,r,a){re(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=cl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];re(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),re(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),re(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),re(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),re(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},p=fs.runKernel(_t,c,h);return o?cl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Pl=$s({conv3dTranspose_:function(e,t,n,r,a){const s=Ss(e,"x","conv3dTranspose"),i=Ss(t,"filter","conv3dTranspose");return Ll(n,s,i,r,a)}}),Bl=$s({cos_:function(e){const t={x:Ss(e,"x","cos","float32")};return fs.runKernel(At,t)}}),zl=$s({cosh_:function(e){const t={x:Ss(e,"x","cosh","float32")};return fs.runKernel(Rt,t)}}),Vl=$s({cumprod_:function(e,t=0,n=!1,r=!1){const a={x:Ss(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return fs.runKernel(Ft,a,s)}}),Wl=$s({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:Ss(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return fs.runKernel(Ot,a,s)}}),Ul=$s({denseBincount_:function(e,t,n,r=!1){const a=Ss(e,"x","denseBincount"),s=Ss(t,"weights","denseBincount");re("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),re(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),re(n>=0,(()=>`size must be non-negative, but got ${n}.`)),re(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const i={x:a,weights:s},o={size:n,binaryOutput:r};return fs.runKernel(Mt,i,o)}}),Gl=$s({depthToSpace_:function(e,t,n="NHWC"){const r=Ss(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];re(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),re(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),re(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),re(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return fs.runKernel(Lt,o,u)}}),Hl=$s({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=Ss(e,"x","depthwiseConv2d","float32"),u=Ss(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),re(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),re(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),re(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),ll("depthwiseConv2d",r,i);const h={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},d=fs.runKernel(Pt,h,p);return c?cl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),jl=$s({diag_:function(e){const t={x:Ss(e,"x","diag")};return fs.runKernel(Vt,t)}}),Kl=$s({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const i=Ss(e,"x","dilation2d"),o=Ss(t,"filter","dilation2d");re(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),re(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),re("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=i,l=!1;3===i.rank&&(u=cl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},h={strides:n,pad:r,dilations:a},p=fs.runKernel(Wt,c,h);return l?cl(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),ql=$s({equal_:function(e,t){let n=Ss(e,"a","equal","string_or_numeric"),r=Ss(t,"b","equal","string_or_numeric");[n,r]=ss(n,r),Zi(n.shape,r.shape);const a={a:n,b:r};return fs.runKernel(Yt,a)}}),Xl=$s({where_:function(e,t,n){const r=Ss(t,"a","where"),a=Ss(n,"b","where"),s=Ss(e,"condition","where","bool"),i=Zi(Zi(s.shape,r.shape),a.shape),o={condition:Nl(s,i),t:Nl(r,i),e:Nl(a,i)};return fs.runKernel(gr,o)}}),Yl=$s({divNoNan_:function(e,t){let n=Ss(e,"a","div"),r=Ss(t,"b","div");[n,r]=ss(n,r);const a=hu(n,r),s=mu(a),i=ql(r,s);return Xl(i,s,a)}}),Ql=$s({dot_:function(e,t){const n=Ss(e,"t1","dot"),r=Ss(t,"t2","dot");re(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(re(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=cl(n,[1,-1]),t=cl(r,[-1,1]),a=ji(e,t);return cl(a,[])}if(1===n.rank&&2===r.rank){const e=cl(n,[1,-1]),t=cl(r,[r.shape[0],r.shape[1]]),a=ji(e,t);return cl(a,[a.size])}if(2===n.rank&&1===r.rank){const e=cl(r,[-1,1]),t=ji(n,e);return cl(t,[t.size])}{const e=cl(r,[r.shape[0],r.shape[1]]);return ji(n,e)}}}),Zl=$s({einsum_:function(e,...t){const n=t.map(((e,t)=>Ss(e,`tensors${t}`,"einsum"))),r={equation:e};return fs.runKernel(jt,n,r)}}),Jl=$s({elu_:function(e){const t={x:Ss(e,"x","elu","float32")};return fs.runKernel(Kt,t)}}),ec=$s({erf_:function(e){let t=Ss(e,"x","erf");re("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ti(t,"float32"));const n={x:t};return fs.runKernel(Xt,n)}}),tc=$s({exp_:function(e){const t={x:Ss(e,"x","exp")};return fs.runKernel(Qt,t)}}),nc=$s({expandDims_:function(e,t=0){const n=Ss(e,"x","expandDims","string_or_numeric");re(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return fs.runKernel(Zt,r,a)}}),rc=$s({expm1_:function(e){const t={x:Ss(e,"x","expm1")};return fs.runKernel(Jt,t)}}),ac=$s({tile_:function(e,t){const n=Ss(e,"x","tile","string_or_numeric");re(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return fs.runKernel(Ur,r,a)}}),sc=$s({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=Ni([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=cl(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return ac(nc(i,0),[n[0],1,1]);if(2===n.length)return ac(nc(nc(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return ac(nc(nc(nc(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),ic=$s({floor_:function(e){const t={x:Ss(e,"x","floor","float32")};return fs.runKernel(rn,t)}}),oc=$s({gather_:function(e,t,n=0,r=0){const a={x:Ss(e,"x","gather"),indices:Ss(t,"indices","gather","int32")},s={axis:n,batchDims:r};return fs.runKernel(on,a,s)}}),uc=$s({greater_:function(e,t){let n=Ss(e,"a","greater","string_or_numeric"),r=Ss(t,"b","greater","string_or_numeric");[n,r]=ss(n,r),Zi(n.shape,r.shape);const a={a:n,b:r};return fs.runKernel(ln,a)}}),lc=$s({greaterEqual_:function(e,t){let n=Ss(e,"a","greaterEqual","string_or_numeric"),r=Ss(t,"b","greaterEqual","string_or_numeric");[n,r]=ss(n,r),Zi(n.shape,r.shape);const a={a:n,b:r};return fs.runKernel(cn,a)}}),cc=$s({imag_:function(e){const t={input:Ss(e,"input","imag")};return fs.runKernel(dn,t)}}),hc=$s({isFinite_:function(e){const t={x:Ss(e,"x","isFinite")};return fs.runKernel(fn,t)}}),pc=$s({isInf_:function(e){const t={x:Ss(e,"x","isInf")};return fs.runKernel(mn,t)}}),dc=$s({isNaN_:function(e){const t={x:Ss(e,"x","isNaN")};return fs.runKernel(gn,t)}}),fc=$s({leakyRelu_:function(e,t=.2){const n={x:Ss(e,"x","leakyRelu")},r={alpha:t};return fs.runKernel(yn,n,r)}}),mc=$s({less_:function(e,t){let n=Ss(e,"a","less","string_or_numeric"),r=Ss(t,"b","less","string_or_numeric");[n,r]=ss(n,r),Zi(n.shape,r.shape);const a={a:n,b:r};return fs.runKernel(bn,a)}}),gc=$s({lessEqual_:function(e,t){let n=Ss(e,"a","lessEqual","string_or_numeric"),r=Ss(t,"b","lessEqual","string_or_numeric");[n,r]=ss(n,r),Zi(n.shape,r.shape);const a={a:n,b:r};return fs.runKernel(xn,a)}});function yc(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return fs.runKernel(vn,{},r)}const bc=$s({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=Ss(e,"x","localResponseNormalization");re(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),re(ce(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=cl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:a},c=fs.runKernel($n,u,l);return o?cl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),xc=$s({log_:function(e){const t={x:Ss(e,"x","log","float32")};return fs.runKernel(wn,t)}}),vc=$s({log1p_:function(e){const t={x:Ss(e,"x","log1p")};return fs.runKernel(kn,t)}}),wc=$s({neg_:function(e){const t={x:Ss(e,"x","neg")};return fs.runKernel(Un,t)}}),kc=$s({softplus_:function(e){const t={x:Ss(e,"x","softplus")};return fs.runKernel(Ir,t)}}),Ic=$s({logSigmoid_:function(e){const t=Ss(e,"x","logSigmoid"),n=wu((e=>({value:wc(kc(wc(e))),gradFunc:t=>pu(t,fl(wc(e)))})));return n(t)}}),Sc=$s({max_:function(e,t=null,n=!1){const r={x:Ss(e,"x","max")},a={reductionIndices:t,keepDims:n};return fs.runKernel(En,r,a)}}),Nc=$s({sum_:function(e,t=null,n=!1){let r=Ss(e,"x","sum");"bool"===r.dtype&&(r=Ti(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return fs.runKernel(Nr,a,s)}}),Tc=$s({logSoftmax_:function(e,t=-1){const n=Ss(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=wu(((e,n)=>{const r=Sc(e,t,!0),a=Eu(e,r),s=Eu(Ti(a,"float32"),xc(Nc(tc(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=tc(r);return Eu(e,pu(Nc(e,t,!0),a))}}}));return r(n)}});function $c(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Cc(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function Ec(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function _c(e,t){return Cc(e,t.map((e=>1)),t)}function Ac(e,t,n){re($c(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Rc(e,t){if($c(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Fc(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Oc(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Dc=$s({logSumExp_:function(e,t=null,n=!1){const r=Ss(e,"x","logSumExp"),a=ye(t,r.shape),s=Sc(r,a,!0),i=Eu(r,s),o=tc(i),u=Nc(o,a),l=xc(u),c=lu(cl(s,l.shape),l);if(n){const e=_c(c.shape,a);return cl(c,e)}return c}}),Mc=$s({logicalAnd_:function(e,t){const n=Ss(e,"a","logicalAnd","bool"),r=Ss(t,"b","logicalAnd","bool");Zi(n.shape,r.shape);const a={a:n,b:r};return fs.runKernel(In,a)}}),Lc=$s({logicalNot_:function(e){const t={x:Ss(e,"x","logicalNot","bool")};return fs.runKernel(Sn,t)}}),Pc=$s({logicalOr_:function(e,t){const n=Ss(e,"a","logicalOr","bool"),r=Ss(t,"b","logicalOr","bool");Zi(n.shape,r.shape);const a={a:n,b:r};return fs.runKernel(Nn,a)}}),Bc=$s({logicalXor_:function(e,t){const n=Ss(e,"a","logicalXor","bool"),r=Ss(t,"b","logicalXor","bool");return Zi(n.shape,r.shape),Mc(Pc(e,t),Lc(Mc(e,t)))}}),zc=$s({maxPool_:function(e,t,n,r,a){const s=Ss(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=cl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),re(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),re(ol(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),ll("maxPool",r,a);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=fs.runKernel(An,u,l);return o?cl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Vc=$s({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const i=Ss(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=cl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),re(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),re("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),ll("maxPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=fs.runKernel(Fn,l,c);return u?cl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Wc=$s({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:Ss(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=fs.runKernel(Dn,s,i);return{result:o[0],indexes:o[1]}}}),Uc=$s({mean_:function(e,t=null,n=!1){const r={x:Ss(e,"x","mean")},a={axis:t,keepDims:n};return fs.runKernel(Mn,r,a)}});function Gc(e,t="float32"){if("complex64"===t){const t=Gc(e,"float32"),n=Gc(e,"float32");return Cs(t,n)}const n=Le(oe(e),t);return fs.makeTensor(n,e,t)}function Hc(e,t="float32"){if("complex64"===t){const t=Hc(e,"float32"),n=Gc(e,"float32");return Cs(t,n)}const n=Me(oe(e),t);return fs.makeTensor(n,e,t)}function jc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Ss(e,"x","meshgrid",e instanceof qa?e.dtype:"float32");if(void 0===t)return[r];let a=Ss(t,"y","meshgrid",t instanceof qa?t.dtype:"float32");const s=oe(r.shape),i=oe(a.shape);return"xy"===n?(r=cl(r,[1,-1]),a=cl(a,[-1,1]),[ji(Hc([i,1],r.dtype),r),ji(a,Hc([1,s],a.dtype))]):(r=cl(r,[-1,1]),a=cl(a,[1,-1]),[ji(r,Hc([1,i],r.dtype)),ji(Hc([s,1],a.dtype),a)])}const Kc=$s({min_:function(e,t=null,n=!1){const r={x:Ss(e,"x","min")},a={axis:t,keepDims:n};return fs.runKernel(Ln,r,a)}}),qc=$s({minimum_:function(e,t){let n=Ss(e,"a","minimum"),r=Ss(t,"b","minimum");[n,r]=ss(n,r),"bool"===n.dtype&&(n=Ti(n,"int32"),r=Ti(r,"int32")),Zi(n.shape,r.shape);const a={a:n,b:r};return fs.runKernel(Pn,a)}}),Xc=$s({mirrorPad_:function(e,t,n){re("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Ss(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");re(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)re(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),re(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},i={x:r};return fs.runKernel(Bn,i,s)}}),Yc=$s({mod_:function(e,t){let n=Ss(e,"a","mod"),r=Ss(t,"b","mod");[n,r]=ss(n,r);const a={a:n,b:r};return fs.runKernel(zn,a)}}),Qc=$s({moments_:function(e,t=null,n=!1){const r=ye(t,(e=Ss(e,"x","moments")).shape),a=Uc(e,r,n);let s=a.shape;n||(s=_c(a.shape,r));const i=fu(Eu(Ti(e,"float32"),cl(a,s)));return{mean:a,variance:Uc(i,r,n)}}}),Zc=$s({multiRNNCell_:function(e,t,n,r){const a=Ss(t,"data","multiRNNCell"),s=Ns(n,"c","multiRNNCell"),i=Ns(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}}),Jc=$s({multinomial_:function(e,t,n,r=!1){const a=Ss(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?cl(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},l=fs.runKernel(Vn,o,u);return 1===i?cl(l,[l.size]):l}}),eh=$s({notEqual_:function(e,t){let n=Ss(e,"a","notEqual","string_or_numeric"),r=Ss(t,"b","notEqual","string_or_numeric");[n,r]=ss(n,r),Zi(n.shape,r.shape);const a={a:n,b:r};return fs.runKernel(Gn,a)}}),th=$s({onesLike_:function(e){const t={x:Ss(e,"x","onesLike")};return fs.runKernel(qn,t)}}),nh=$s({outerProduct_:function(e,t){const n=Ss(e,"v1","outerProduct"),r=Ss(t,"v2","outerProduct");re(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=cl(n,[-1,1]),s=cl(r,[1,-1]);return ji(a,s)}}),rh=$s({pad_:function(e,t,n=0){const r=Ss(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return fs.runKernel(Qn,s,a)}}),ah=$s({pad1d_:function(e,t,n=0){return re(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),rh(e,[t],n)}}),sh=$s({pad2d_:function(e,t,n=0){return re(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rh(e,t,n)}}),ih=$s({pad3d_:function(e,t,n=0){return re(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rh(e,t,n)}}),oh=$s({pad4d_:function(e,t,n=0){return re(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rh(e,t,n)}}),uh=$s({spaceToBatchND_:function(e,t,n){const r=Ss(e,"x","spaceToBatchND");re(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),re(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),re(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return fs.runKernel(Tr,a,s)}}),lh=$s({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=Ss(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),re(ol(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const c=Qu(u.shape,t,s,a,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,p),g=d?r:"valid",y=d?u:uh(u,h,f),b=("avg"===n?()=>hl(y,t,s,g,i):()=>zc(y,t,s,g,i))(),x=d?b:bl(b,h,m);return l?cl(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),ch=$s({prelu_:function(e,t){const n={x:Ss(e,"x","prelu"),alpha:Ss(t,"alpha","prelu")};return fs.runKernel(er,n)}}),hh=$s({prod_:function(e,t=null,n=!1){let r=Ss(e,"x","prod");"bool"===r.dtype&&(r=Ti(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return fs.runKernel(tr,a,s)}}),ph=$s({rand_:function(e,t,n){const r=oe(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return fs.makeTensor(a,e,n)}});var dh=n(6377);class fh{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=dh.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class mh{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=dh.alea(a.toString()),this.randn=new fh(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class gh{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=dh.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const yh=$s({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new mh(t,n,r,a),i=Ni(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),bh=$s({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new fh(t,n,r,!1,a),i=Ni(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),xh=$s({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=Ni(e,r),i=new gh(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function vh(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return fs.runKernel(nr,{},a)}const wh=$s({real_:function(e){const t={input:Ss(e,"input","real")};return fs.runKernel(rr,t)}}),kh=$s({reciprocal_:function(e){const t={x:Ss(e,"x","reciprocal")};return fs.runKernel(ar,t)}}),Ih=$s({relu_:function(e){const t={x:Ss(e,"x","relu")};return fs.runKernel(sr,t)}}),Sh=$s({relu6_:function(e){const t={x:Ss(e,"x","relu6")};return fs.runKernel(hr,t)}}),Nh=$s({reverse_:function(e,t){const n={x:Ss(e,"x","reverse")},r={dims:t};return fs.runKernel(pr,n,r)}}),Th=$s({reverse1d_:function(e){const t=Ss(e,"x","reverse");return re(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Nh(t,0)}}),$h=$s({reverse2d_:function(e,t){const n=Ss(e,"x","reverse");return re(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Nh(n,t)}}),Ch=$s({reverse3d_:function(e,t){const n=Ss(e,"x","reverse");return re(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Nh(n,t)}}),Eh=$s({reverse4d_:function(e,t){const n=Ss(e,"x","reverse");return re(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Nh(n,t)}}),_h=$s({round_:function(e){const t={x:Ss(e,"x","round")};return fs.runKernel(dr,t)}}),Ah=$s({rsqrt_:function(e){const t={x:Ss(e,"x","rsqrt","float32")};return fs.runKernel(fr,t)}}),Rh=$s({selu_:function(e){const t={x:Ss(e,"x","selu")};return fs.runKernel(yr,t)}}),Fh=$s({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){const o=Ss(e,"x","separableConv2d"),u=Ss(t,"depthwiseFilter","separableConv2d"),l=Ss(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");re(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),re(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),re(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),re(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),re(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const p=u.shape[2],d=u.shape[3];re(l.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${l.shape[2]}.`));const f=Hl(c,u,r,a,i,s),m=Rl(f,l,1,"valid",i);return h?cl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Oh=async function(e,t){const n=Ss(e,"x","setdiff1d"),r=Ss(t,"y","setdiff1d");re(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),re(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),re(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;const u=new Ga([o],n.dtype),l=new Ga([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]},Dh=$s({sign_:function(e){const t={x:Ss(e,"x","sign")};return fs.runKernel(wr,t)}}),Mh=$s({sin_:function(e){const t={x:Ss(e,"x","sin","float32")};return fs.runKernel(xr,t)}}),Lh=$s({sinh_:function(e){const t={x:Ss(e,"x","sinh")};return fs.runKernel(vr,t)}}),Ph=$s({slice1d_:function(e,t,n){const r=Ss(e,"x","slice1d");return re(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),ml(r,[t],[n])}}),Bh=$s({slice2d_:function(e,t,n){const r=Ss(e,"x","slice2d");return re(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),ml(r,t,n)}}),zh=$s({slice3d_:function(e,t,n){const r=Ss(e,"x","slice3d");return re(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),ml(r,t,n)}}),Vh=$s({slice4d_:function(e,t,n){const r=Ss(e,"x","slice4d");return re(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),ml(r,t,n)}}),Wh=$s({softmax_:function(e,t=-1){const n=Ss(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return fs.runKernel(Cr,r,a)}}),Uh=$s({fft_:function(e){re("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return fs.runKernel(en,t)}}),Gh=$s({ifft_:function(e){re("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return fs.runKernel(pn,t)}}),Hh=$s({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=cl(e,[n,t]);r=Gh(a)}else{const a=[n,2*(t-1)],s=cl(wh(e),[n,t]),i=cl(cc(e),[n,t]),o=Nh(ml(s,[0,1],[n,t-2]),1),u=pu(Nh(ml(i,[0,1],[n,t-2]),1),Iu(-1)),l=dl([s,o],1),c=dl([i,u],1),h=cl(Cs(l,c),[a[0],a[1]]);r=Gh(h)}if(r=wh(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=cl(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),jh=$s({split_:function(e,t,n=0){const r={x:Ss(e,"x","split")},a={numOrSizeSplits:t,axis:n};return fs.runKernel($r,r,a)}}),Kh=$s({rfft_:function(e,t){re("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=ml(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=dl([e,Gc(r)],e.shape.length-1),n=t}else a=e;const s=mu(a),i=cl(Cs(a,s),[r,n]),o=Uh(i),u=Math.floor(n/2)+1,l=wh(o),c=cc(o),h=jh(l,[u,n-u],l.shape.length-1),p=jh(c,[u,n-u],c.shape.length-1),d=a.shape.slice();return d[a.shape.length-1]=u,cl(Cs(h[0],p[0]),d)}}),qh=$s({squaredDifference_:function(e,t){let n=Ss(e,"a","squaredDifference"),r=Ss(t,"b","squaredDifference");[n,r]=ss(n,r),Zi(n.shape,r.shape);const a={a:n,b:r};return fs.runKernel(Or,a,{})}}),Xh=$s({squeeze_:function(e,t){const n=Ss(e,"x","squeeze");return cl(n,be(n.shape,t).newShape)}}),Yh=$s({stack_:function(e,t=0){const n=Ns(e,"tensors","stack","string_or_numeric");re(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&re(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return fs.runKernel(Yn,r,a)}}),Qh=$s({step_:function(e,t=0){const n={x:Ss(e,"x","step")},r={alpha:t};return fs.runKernel(Qr,n,r)}}),Zh=$s({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,u=0){const l={x:Ss(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return fs.runKernel(Mr,l,c)}}),Jh=$s({tan_:function(e){const t={x:Ss(e,"x","tan","float32")};return fs.runKernel(Vr,t)}});function ep(e,t){se(e);const n=ws(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Es(e,null,n,t)}function tp(e,t,n){if(se(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=ws(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Es(e,t,r,n)}function np(e,t,n){if(se(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=ws(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Es(e,t,r,n)}function rp(e,t,n){if(se(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=ws(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Es(e,t,r,n)}function ap(e,t,n){if(se(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=ws(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Es(e,t=t||r,r,n)}const sp=$s({topk_:function(e,t=1,n=!0){const r=Ss(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},i={k:t,sorted:n},[o,u]=fs.runKernel(Gr,s,i);return{values:o,indices:u}}}),ip=$s({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new fh(t,n,r,!0,a),i=Ni(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),op=$s({unique_:function(e,t=0){const n=Ss(e,"x","unique","string_or_numeric");re(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,i]=fs.runKernel(Kr,r,a);return{values:s,indices:i}}}),up=$s({unsortedSegmentSum_:function(e,t,n){const r=Ss(e,"x","unsortedSegmentSum"),a=Ss(t,"segmentIds","unsortedSegmentSum","int32");re(ce(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},i={numSegments:n};return fs.runKernel(Xr,s,i)}}),lp=$s({unstack_:function(e,t=0){const n=Ss(e,"x","unstack","string_or_numeric");re(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return fs.runKernel(qr,r,a)}});function cp(e,t=!0,n,r){return fs.makeVariable(e,t,n,r)}function hp(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Ni(e,"int32"),a=Ni([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}const pp=async function(e){const t=Ss(e,"condition","whereAsync","bool"),n=await t.data(),r=hp(t.shape,n);return e!==t&&t.dispose(),r},dp=async function(e,t,n){const r=Ss(e,"tensor","boolMask"),a=Ss(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;re(i>0,(()=>"mask cannot be scalar")),ae(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];const l=o.slice(0,s).concat([u],o.slice(s+i)),c=cl(r,l),h=cl(a,[-1]),p=await pp(h),d=Xh(p,[1]),f=oc(c,d,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f};function fp(e,t,n=null){if(0===e.rank)return Au(e);if(1!==e.rank&&null===n)return fp(cl(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Nc(Au(e),n);if(t===1/0)return Sc(Au(e),n);if(t===-1/0)return Kc(Au(e),n);if("euclidean"===t||2===t)return du(Nc(Cu(Au(e),Iu(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Sc(Nc(Au(e),n[0]),n[1]-1);if(t===1/0)return Sc(Nc(Au(e),n[1]),n[0]);if(t===-1/0)return Kc(Nc(Au(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return du(Nc(fu(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const mp=$s({norm_:function(e,t="euclidean",n=null,r=!1){const a=fp(e=Ss(e,"x","norm"),t,n);let s=a.shape;if(r){const t=ye(n,e.shape);s=_c(a.shape,t)}return cl(a,s)}}),gp=$s({movingAverage_:function(e,t,n,r,a=!0){const s=Ss(e,"v","movingAverage"),i=Ss(t,"x","movingAverage"),o=Ss(n,"decay","movingAverage");is(s,i),re(le(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=Iu(1),l=Eu(u,o);let c=pu(Eu(i,s),l);if(a){re(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Ss(r,"step","movingAverage");c=hu(c,Eu(u,Cu(o,e)))}return lu(s,c)}}),yp=$s({scatterND_:function(e,t,n){const r=Ss(e,"indices","scatterND","int32"),a=Ss(t,"updates","scatterND");oo(a,r,n);const s={indices:r,updates:a},i={shape:n};return fs.runKernel(mr,s,i)}}),bp=$s({sparseToDense_:function(e,t,n,r=0){const a=Ss(e,"sparseIndices","sparseToDense","int32"),s=Ss(t,"sparseValues","sparseToDense"),i=Ss(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);const o={sparseIndices:a,sparseValues:s,defaultValue:i},u={outputShape:n};return fs.runKernel(Fr,o,u)}}),xp=$s({gatherND_:function(e,t){const n=Ss(t,"indices","gatherND","int32"),r={params:Ss(e,"x","gatherND","string_or_numeric"),indices:n};return fs.runKernel(un,r)}}),vp=$s({dropout_:function(e,t,n,r){const a=Ss(e,"x","dropout");if(re("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),re(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof qa?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(le(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=hu(ic(lu(xh(s,0,1,"float32",r),i)),i);return pu(a,o)}});function wp(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function kp(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return ep(a,"float32")}const Ip=async function(e,t,n=1){const r=Ss(e,"predictions","inTopK"),a=Ss(t,"targets","inTopK");re(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),re(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),ae(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];re(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[u,l]=[i.length/s,s],c=xe("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),_s(c,a.shape,"bool")},Sp=$s({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=cl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=cl(t,[1,t.shape[0],t.shape[1],t.shape[2]])),re(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),re(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),re(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];re(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),re(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),ll("conv2dDerFilter",a,i);const h={x:o,dy:u},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return fs.runKernel(Tt,h,p)}});function Np(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return pu(e,Qh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Tp(e,t){let n=t;const r=Qi(e.shape,t.shape);return r.length>0&&(n=Nc(n,r)),cl(n,e.shape)}function $p(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Ih(e);if("elu"===t)return Jl(e);if("relu6"===t)return Sh(e);if("prelu"===t)return ch(e,n);if("leakyrelu"===t)return fc(e,r);if("sigmoid"===t)return fl(e);throw new Error(`Unknown fused activation ${t}.`)}const Cp=(e,t)=>!(e>0)||"linear"===t,Ep=$s({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Cp(fs.state.gradientDepth,u)){let h=Rl(e,t,n,r,a,s,i);return null!=o&&(h=lu(h,o)),$p(h,u,l,c)}const h=Ss(e,"x","conv2d","float32"),p=Ss(t,"filter","conv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=cl(h,[1,h.shape[0],h.shape[1],h.shape[2]])),re(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),re(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),ll("fused conv2d",r,i),re(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),re(ol(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),re("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const m=Ju(d.shape,p.shape,n,s,r,i);let g,y;null!=o&&(g=Ss(o,"bias","fused conv2d"),[g]=ss(g,h),Zi(m.outShape,g.shape)),null!=l&&(y=Ss(l,"prelu weights","fused conv2d"));const b=(e,t)=>{const[a,i,o,l]=t,c=Np(e,o,u);re(il(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const h=[Ol(i.shape,c,a,n,r),Sp(i,c,a.shape,n,r)];if(null!=l){const e=Tp(l,c);h.push(e)}return h},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=wu(((e,t,n)=>{let r=fs.runKernel(ta,x,v);return n([t,e,r]),f&&(r=cl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p)}{const e=wu(((e,t,n,r)=>{let a=fs.runKernel(ta,x,v);return r([t,e,a,n]),f&&(a=cl(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}));return e(d,p,g)}}}),_p=$s({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=cl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=cl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return fs.runKernel(Bt,l,c)}}),Ap=$s({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=cl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=fs.runKernel(zt,l,c);return u?cl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Rp=$s({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Cp(fs.state.gradientDepth,u)){let h=Hl(e,t,n,r,a,s,i);return null!=o&&(h=lu(h,o)),$p(h,u,l,c)}const h=Ss(e,"x","depthwiseConv2d","float32"),p=Ss(t,"filter","depthwiseConv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=cl(h,[1,h.shape[0],h.shape[1],h.shape[2]])),re(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),re(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),re(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==s&&(s=[1,1]),re(ol(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),ll("fused depthwiseConv2d",r,i);const m=Ju(d.shape,p.shape,n,s,r,i,!0);let g,y;null!=o&&(g=Ss(o,"bias","fused conv2d"),[g]=ss(g,h),Zi(m.outShape,g.shape)),null!=l&&(y=Ss(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{re(il(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,o,l,c]=t,h=Np(e,l,u),p=Ap(o.shape,h,a,n,r,s,i),d=_p(o,h,a.shape,n,r,s,i);return null!=c?[p,d,Tp(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=wu(((e,t,n)=>{let r=fs.runKernel(na,x,v);return n([t,e,r]),f&&(r=cl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p)}{const e=wu(((e,t,n,r)=>{let a=fs.runKernel(na,x,v);return r([t,e,a,n]),f&&(a=cl(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}));return e(d,p,g)}}}),Fp=$s({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Cp(fs.state.gradientDepth,s)){let u=ji(e,t,n,r);return null!=a&&(u=lu(u,a)),$p(u,s,i,o)}let u=Ss(e,"a","fused matMul"),l=Ss(t,"b","fused matMul");[u,l]=ss(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],d=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=oe(f),y=oe(m);re(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=Zi(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([p,d]),x=cl(u,n?[g,c,p]:[g,p,c]),v=cl(l,r?[y,d,h]:[y,h,d]);let w,k;null!=a&&(w=Ss(a,"bias","fused matMul"),[w]=ss(w,u),Zi(b,w.shape)),null!=i&&(k=Ss(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,u,l]=t,c=Np(cl(e,u.shape),u,s);let h,p;return n||r?!n&&r?(h=ji(c,o,!1,!1),p=ji(c,i,!0,!1)):n&&!r?(h=ji(o,c,!1,!0),p=ji(i,c,!1,!1)):(h=ji(o,c,!0,!0),p=ji(c,i,!0,!0)):(h=ji(c,o,!1,!0),p=ji(i,c,!0,!1)),null!=a?[h,p,Tp(l,c)]:[h,p]},S={a:x,b:v,bias:w,preluActivationWeights:k},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==a){const e=wu(((e,t,n)=>{const r=fs.runKernel(ea,S,N);return n([e,t,r]),{value:cl(r,b),gradFunc:I}}));return e(x,v)}{const e=wu(((e,t,n,r)=>{const a=fs.runKernel(ea,S,N);return r([e,t,a,n]),{value:cl(a,b),gradFunc:I}}));return e(x,v,w)}}}),Op=$s({hammingWindow_:function(e){return kp(e,.54,.46)}}),Dp=$s({hannWindow_:function(e){return kp(e,.5,.5)}}),Mp=$s({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(ml(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=dl([ml(e,s,t-r),Tu([r],a)]);i.push(o),s+=n}return 0===i.length?tp([],[0,t]):cl(dl(i),[i.length,t])}}),Lp=$s({stft_:function(e,t,n,r,a=Dp){null==r&&(r=wp(t));const s=Mp(e,t,n),i=pu(s,a(t));return Kh(i,r)}}),Pp=$s({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=Ss(e,"image","cropAndResize"),o=Ss(t,"boxes","cropAndResize","float32"),u=Ss(n,"boxInd","cropAndResize","int32"),l=o.shape[0];re(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),re(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),re(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),re(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),re(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),re("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:u},h={method:a,extrapolationValue:s,cropSize:r};return fs.runKernel(Dt,c,h)}}),Bp=$s({flipLeftRight_:function(e){const t=Ss(e,"image","flipLeftRight","float32");re(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return fs.runKernel(nn,n,{})}}),zp=$s({grayscaleToRGB_:function(e){const t=Ss(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];re(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),re(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,ac(t,a)}}),Vp=$s({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Ss(e,"image","rotateWithOffset","float32");re(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return fs.runKernel(Jr,s,i)}});function Wp(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),re(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),re(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),re(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),re(1===t.rank,(()=>"scores must be a 1D tensor")),re(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),re(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const Up=$s({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Ss(e,"boxes","nonMaxSuppression","float32"),i=Ss(t,"scores","nonMaxSuppression","float32"),o=Wp(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return fs.runKernel(Hn,{boxes:s,scores:i},u)}});function Gp(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Hp)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Hp(e,t){return e>t?1:e<t?-1:0}function jp(e,t,n,r,a){return Xp(e,t,n,r,a,0)}function Kp(e,t,n,r,a,s){return Xp(e,t,n,r,a,0,!1,s,!0)}function qp(e,t,n,r,a,s){return Xp(e,t,n,r,a,s,!0)}function Xp(e,t,n,r,a,s,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(Zp);const c=s>0?-.5/s:0,h=[],p=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Yp(e,s,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Qp(r,c,i),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),p.push(t.score)):t.score>a&&Gp(l,t,Zp))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),u&&(m.validOutputs=d),m}function Yp(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),d=(o-s)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function Qp(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Zp(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Jp=$s({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Ss(e,"boxes","nonMaxSuppression"),o=Ss(t,"scores","nonMaxSuppression"),u=Wp(i,o,n,r,a,s),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},h=fs.runKernel(Kn,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),ed=$s({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Ss(e,"boxes","nonMaxSuppression"),o=Ss(t,"scores","nonMaxSuppression"),u=Wp(i,o,n,r,a,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},h=fs.runKernel(jn,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),td=$s({resizeBilinear_:function(e,t,n=!1,r=!1){const a=Ss(e,"images","resizeBilinear");re(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),re(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),re(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=cl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=fs.runKernel(lr,o,u);return i?cl(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),nd=$s({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=Ss(e,"images","resizeNearestNeighbor");re(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),re(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),re("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),re(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=cl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=fs.runKernel(or,o,u);return i?cl(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),rd=$s({threshold_:function(e,t="binary",n=!1,r=.5){const a=Ss(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,o,u,l,c=pu(ep([r]),255);if(re(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),re(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),re("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),re("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[i,o,u]=jh(a,[1,1,1],-1);const e=pu(i,.2989),t=pu(o,.587),n=pu(u,.114);l=lu(lu(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,a,s,i,o,u=ep([-1]),l=ep([0]),c=ep([0]);for(let h=0;h<e.size-1;h++){n=ml(e,0,h+1),r=ml(e,h+1),i=hu(Nc(n),t),o=hu(Nc(r),t);const p=Nc(pu(n,vh(0,n.size)));a=hu(p,Nc(n));const d=Tu(r.shape,n.size),f=lu(vh(0,r.size),d),m=pu(r,f);s=hu(Nc(m),Nc(r));const g=Eu(a,s),y=Eu(a,s),b=pu(i,o);c=pu(pu(b,g),y);const x=uc(c,l);l=Xl(x,c,l),u=Xl(x,ep([h]),u)}return u}(Il(Ti(_h(l),"int32"),_s([]),256),s));const h=n?gc(l,c):uc(l,c);return Ti(pu(h,255),"int32")}}),ad=$s({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=Ss(e,"image","transform","float32"),o=Ss(t,"transforms","transform","float32");re(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),re(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),re(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return fs.runKernel(Hr,u,l)}}),sd=$s({bandPart_:function(e,t,n){re(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),re(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Ss(e,"a","bandPart");re(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=cl(vh(0,s,1,"int32"),[-1,1]),u=vh(0,i,1,"int32"),l=Eu(o,u),c=Mc(gc(l,Iu(+t,"int32")),lc(l,Iu(-n,"int32"))),h=Gc([s,i],r.dtype);return cl(Yh(lp(cl(r,[-1,s,i])).map((e=>Xl(c,e,h)))),a)}}),id=$s({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,re(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)re(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=jh(e,e.shape[0],0).map((e=>Xh(e,[0])));re(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(fs.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=pu(Nc(pu(n[r],e)),n[r]);e=Eu(e,t)}return hu(e,mp(e,"euclidean"))})));return t?Yh(n,0):n}});function od(e,t=!1){return fs.tidy((()=>{re(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=sc(n),s=$i(e);const i=tp([[1]],[1,1]);let o=$i(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=fs.tidy((()=>{const t=ml(s,[e,e],[n-e,1]),u=mp(t),l=ml(s,[e,e],[1,1]),c=Xl(uc(l,0),tp([[-1]]),tp([[1]])),h=Eu(l,pu(c,u)),p=hu(t,h);o=1===p.shape[0]?$i(i):dl([i,ml(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=wc(hu(ji(c,h),u)),f=ml(s,[e,0],[n-e,r]),m=pu(d,o),g=qi(o);if(0===e)s=Eu(f,ji(m,ji(g,f)));else{const t=Eu(f,ji(m,ji(g,f)));s=dl([ml(s,[0,0],[e,r]),t],0)}const y=qi(m),b=ml(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Eu(b,ji(ji(b,o),y));else{const t=Eu(b,ji(ji(b,o),y));a=dl([ml(a,[0,0],[n,e]),t],1)}return[o,s,a]})),Qo([t,u,l])}return!t&&n>r&&(a=ml(a,[0,0],[n,r]),s=ml(s,[0,0],[r,r])),[a,s]}))}const ud=$s({qr_:function(e,t=!1){if(re(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return od(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=lp(cl(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=od(e,t);a.push(n),s.push(r)})),[cl(Yh(a,0),e.shape),cl(Yh(s,0),e.shape)]}}});var ld;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ld||(ld={}));const cd=$s({computeWeightedLoss_:function(e,t,n=ld.SUM_BY_NONZERO_WEIGHTS){const r=Ss(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Ss(t,"weights","computeWeightedLoss"));const s=null==a?r:pu(r,a);if(n===ld.NONE)return s;if(n===ld.SUM)return Nc(s);if(n===ld.MEAN){if(null==a)return Uc(s);{const e=r.size/a.size,t=hu(Nc(s),Nc(a));return e>1?hu(t,Iu(e)):t}}if(n===ld.SUM_BY_NONZERO_WEIGHTS){if(null==a)return hu(Nc(s),Iu(r.size));{const e=pu(a,Hc(r.shape)),t=Ti(Nc(eh(e,Iu(0))),"float32");return hu(Nc(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),hd=$s({absoluteDifference_:function(e,t,n,r=ld.SUM_BY_NONZERO_WEIGHTS){const a=Ss(e,"labels","absoluteDifference"),s=Ss(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Ss(n,"weights","absoluteDifference")),ae(a.shape,s.shape,"Error in absoluteDifference: ");const o=Au(Eu(a,s));return cd(o,i,r)}}),pd=$s({cosineDistance_:function(e,t,n,r,a=ld.SUM_BY_NONZERO_WEIGHTS){const s=Ss(e,"labels","cosineDistance"),i=Ss(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Ss(r,"weights","cosineDistance")),ae(s.shape,i.shape,"Error in cosineDistance: ");const u=Iu(1),l=Eu(u,Nc(pu(s,i),n,!0));return cd(l,o,a)}}),dd=$s({hingeLoss_:function(e,t,n,r=ld.SUM_BY_NONZERO_WEIGHTS){let a=Ss(e,"labels","hingeLoss");const s=Ss(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Ss(n,"weights","hingeLoss")),ae(a.shape,s.shape,"Error in hingeLoss: ");const o=Iu(1);a=Eu(pu(Iu(2),a),o);const u=Ih(Eu(o,pu(a,s)));return cd(u,i,r)}}),fd=$s({huberLoss_:function(e,t,n,r=1,a=ld.SUM_BY_NONZERO_WEIGHTS){const s=Ss(e,"labels","huberLoss"),i=Ss(t,"predictions","huberLoss");let o=null;null!=n&&(o=Ss(n,"weights","huberLoss")),ae(s.shape,i.shape,"Error in huberLoss: ");const u=Iu(r),l=Au(Eu(i,s)),c=qc(l,u),h=Eu(l,c),p=lu(pu(Iu(.5),fu(c)),pu(u,h));return cd(p,o,a)}}),md=$s({logLoss_:function(e,t,n,r=1e-7,a=ld.SUM_BY_NONZERO_WEIGHTS){const s=Ss(e,"labels","logLoss"),i=Ss(t,"predictions","logLoss");let o=null;null!=n&&(o=Ss(n,"weights","logLoss")),ae(s.shape,i.shape,"Error in logLoss: ");const u=Iu(1),l=Iu(r),c=wc(pu(s,xc(lu(i,l)))),h=pu(Eu(u,s),xc(lu(Eu(u,i),l))),p=Eu(c,h);return cd(p,o,a)}}),gd=$s({meanSquaredError_:function(e,t,n,r=ld.SUM_BY_NONZERO_WEIGHTS){const a=Ss(e,"labels","meanSquaredError"),s=Ss(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Ss(n,"weights","meanSquaredError")),ae(a.shape,s.shape,"Error in meanSquaredError: ");const o=qh(a,s);return cd(o,i,r)}}),yd=$s({sigmoidCrossEntropy_:function(e,t,n,r=0,a=ld.SUM_BY_NONZERO_WEIGHTS){let s=Ss(e,"multiClassLabels","sigmoidCrossEntropy");const i=Ss(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Ss(n,"weights","sigmoidCrossEntropy")),ae(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Iu(r),t=Iu(1),n=Iu(.5);s=lu(pu(s,Eu(t,e)),pu(n,e))}const u=function(e,t){const n=Ss(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ss(t,"logits","sigmoidCrossEntropyWithLogits");ae(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=Ih(r),s=pu(r,n),i=vc(tc(wc(Au(r))));return lu(Eu(a,s),i)}(s,i);return cd(u,o,a)}}),bd=$s({softmaxCrossEntropy_:function(e,t,n,r=0,a=ld.SUM_BY_NONZERO_WEIGHTS){let s=Ss(e,"onehotLabels","softmaxCrossEntropy");const i=Ss(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Ss(n,"weights","softmaxCrossEntropy")),ae(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Iu(r),t=Iu(1),n=Iu(s.shape[1]);s=lu(pu(s,Eu(t,e)),hu(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=wu(((e,t,r)=>{const a=Dc(t,[n],!0),s=Eu(Ti(t,"float32"),a);r([e,s]);const i=wc(pu(s,e));return{value:Nc(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=_c(e.shape,[n]);return[pu(cl(e,s),Eu(Ti(r,"float32"),tc(a))),pu(cl(e,s),Eu(tc(a),Ti(r,"float32")))]}}}));return r(e,t)}(s,i);return cd(u,o,a)}}),xd=$s({sparseFillEmptyRows_:function(e,t,n,r){const a=Ss(e,"indices","sparseFillEmptyRows","int32"),s=Ss(t,"values","sparseFillEmptyRows"),i=Ss(n,"denseShape","sparseFillEmptyRows","int32"),o=Ss(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:s,denseShape:i,defaultValue:o},l=fs.runKernel(Er,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),vd=$s({sparseReshape_:function(e,t,n){const r=Ss(e,"inputIndices","sparseReshape","int32"),a=Ss(t,"inputShape","sparseReshape","int32"),s=Ss(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=fs.runKernel(_r,i);return{outputIndices:o[0],outputShape:o[1]}}}),wd=$s({sparseSegmentMean_:function(e,t,n){const r=Ss(e,"data","sparseSegmentMean"),a=Ss(t,"indices","sparseSegmentMean","int32"),s=Ss(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return fs.runKernel(Ar,i)}}),kd=$s({sparseSegmentSum_:function(e,t,n){const r=Ss(e,"data","sparseSegmentSum"),a=Ss(t,"indices","sparseSegmentSum","int32"),s=Ss(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return fs.runKernel(Rr,i)}}),Id=$s({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=Ss(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=Ss(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:u,dataSplits:l},p=fs.runKernel(Lr,h,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),Sd=$s({stringSplit_:function(e,t,n=!0){const r=Ss(e,"input","stringSplit","string"),a=Ss(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=fs.runKernel(Pr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),Nd=$s({stringToHashBucketFast_:function(e,t){const n=Ss(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return fs.runKernel(Br,a,r)}}),Td={fft:Uh,ifft:Gh,rfft:Kh,irfft:Hh},$d={hammingWindow:Op,hannWindow:Dp,frame:Mp,stft:Lp},Cd={flipLeftRight:Bp,grayscaleToRGB:zp,resizeNearestNeighbor:nd,resizeBilinear:td,rotateWithOffset:Vp,cropAndResize:Pp,nonMaxSuppression:Up,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Ss(e,"boxes","nonMaxSuppressionAsync"),i=Ss(t,"scores","nonMaxSuppressionAsync"),o=Wp(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=jp(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),ep(h,"int32")},nonMaxSuppressionWithScore:Jp,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Ss(e,"boxes","nonMaxSuppressionAsync"),o=Ss(t,"scores","nonMaxSuppressionAsync"),u=Wp(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:p,selectedScores:d}=qp(c,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:ep(p,"int32"),selectedScores:ep(d)}},nonMaxSuppressionPadded:ed,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Ss(e,"boxes","nonMaxSuppressionAsync"),o=Ss(t,"scores","nonMaxSuppressionAsync"),u=Wp(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Kp(p,d,l,c,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:ep(f,"int32"),validOutputs:Iu(m,"int32")}},threshold:rd,transform:ad},Ed={bandPart:sd,gramSchmidt:id,qr:ud},_d={absoluteDifference:hd,computeWeightedLoss:cd,cosineDistance:pd,hingeLoss:dd,huberLoss:fd,logLoss:md,meanSquaredError:gd,sigmoidCrossEntropy:yd,softmaxCrossEntropy:bd},Ad={sparseFillEmptyRows:xd,sparseReshape:vd,sparseSegmentMean:wd,sparseSegmentSum:kd},Rd={stringNGrams:Id,stringSplit:Sd,stringToHashBucketFast:Nd},Fd={sgd:Lu.sgd,momentum:Lu.momentum,adadelta:Lu.adadelta,adagrad:Lu.adagrad,rmsprop:Lu.rmsprop,adamax:Lu.adamax,adam:Lu.adam},Od="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Dd(){return new Promise((e=>Od((()=>e()))))}function Md(e,t){const n=e[0].length;e.forEach(((e,t)=>{re(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),re(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)re(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Ld(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Pd=30;function Bd(e){return e<=Pd?e:Re(e,Math.floor(Math.sqrt(e)))}function zd(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Vd(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Wd(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Ud(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Gd(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Hd(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}const jd=1.7580993408473768,Kd=1.0507009873554805,qd=.3275911,Xd=.254829592,Yd=-.284496736,Qd=1.421413741,Zd=-1.453152027,Jd=1.061405429;function ef(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function tf(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function nf(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function rf(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function af(e,t){return{real:e[2*t],imag:e[2*t+1]}}function sf(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function of(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function uf(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const lf=/->/g;function cf(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(lf,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");re(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function hf(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function pf(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:re(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function df(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=mf(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function ff(e){return e.every(((e,t)=>e===t))}function mf(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function gf(e,t,n=0){let r=[];if("number"==typeof t)re(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);re(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}re(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function yf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function bf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function xf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function vf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function wf(e,t){return`size ${e} must be non-negative, not ${t}`}function kf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function If(e,t){return`Input to reshape is a SparseTensor with ${oe(e)}\n  dense values, but the requested shape requires a multiple of ${oe(t)}. inputShape=${e} outputShape= ${t}`}function Sf(e,t){return`Input to reshape is a tensor with ${oe(e)} dense values, but the requested shape has ${oe(t)}. inputShape=${e} outputShape=${t}`}function Nf(){return"segment ids must be >= 0"}function Tf(){return"segment ids are not increasing"}function $f(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Cf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Ef(e,t){let n,r=!1;for(e<=Pd?(n=e,r=!0):n=Re(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Re(e,n+1);return n}function _f(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Af(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Rf(e){try{return e.map((e=>Da(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Ff(e){return e.map((e=>Oa(e)))}const Of={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pu(e,Qh(Ti(n,"float32"),-1))}}},Df={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=fu(Ti(n,"float32")),r=du(Eu(Iu(1),t));return wc(hu(e,r))}}}},Mf={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=du(Eu(fu(Ti(n,"float32")),1));return hu(e,t)}}}},Lf={kernelName:Je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Zi(n.shape,r.shape);return{a:()=>{let t=e;const r=Qi(n.shape,a);return r.length>0&&(t=Nc(t,r)),cl(t,n.shape)},b:()=>{let t=e;const n=Qi(r.shape,a);return n.length>0&&(t=Nc(t,n)),cl(t,r.shape)}}}},Pf={kernelName:et,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Bf={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>mu(n)}}},zf={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>mu(n)}}},Vf={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,du(Eu(Iu(1),fu(Ti(n,"float32")))))}}},Wf={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=du(lu(Iu(1),fu(Ti(n,"float32"))));return hu(e,t)}}}},Uf={kernelName:lt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Zi(n.shape,r.shape);return{a:()=>{const t=lu(fu(n),fu(r));let s=pu(e,hu(r,t));const i=Qi(n.shape,a);return i.length>0&&(s=Nc(s,i)),cl(s,n.shape)},b:()=>{const t=lu(fu(n),fu(r));let s=wc(pu(e,hu(n,t)));const i=Qi(r.shape,a);return i.length>0&&(s=Nc(s,i)),cl(s,r.shape)}}}},Gf={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,lu(fu(Ti(n,"float32")),1))}}},Hf={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,Eu(Iu(1),fu(Ti(n,"float32"))))}}},jf=$s({avgPool3dGrad_:function(e,t,n,r,a,s){const i=Ss(e,"dy","avgPool3dGrad"),o=Ss(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=cl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=cl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),re(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),re(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),ll("avgPool3dGrad",a,s);const h={dy:u,input:l},p={filterSize:n,strides:r,pad:a,dimRoundingMode:s},d=fs.runKernel(dt,h,p);return c?cl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Kf={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>jf(e,r,a,s,i,o)}}},qf=$s({avgPoolGrad_:function(e,t,n,r,a){const s=Ss(e,"dy","avgPoolGrad"),i=Ss(t,"input","avgPoolGrad");re(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=cl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=cl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),re(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),re(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:a},p=fs.runKernel(ht,c,h);return l?cl(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Xf={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>qf(e,r,a,s,i)}}},Yf={kernelName:ft,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>ji(e,a,!1,!1),b:()=>ji(e,r,!0,!1)}:s&&!i?{a:()=>ji(a,e,!1,!0),b:()=>ji(r,e,!1,!1)}:{a:()=>ji(a,e,!0,!0),b:()=>ji(e,r,!0,!0)}:{a:()=>ji(e,a,!1,!0),b:()=>ji(r,e,!0,!1)}}},Qf={kernelName:mt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>uh(e,r,a)}}},Zf={kernelName:yt,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Nc(e,o,!0)}}},Jf={kernelName:xt,gradFunc:e=>({x:()=>e.clone()})},em={kernelName:vt,gradFunc:e=>({x:()=>mu(e)})},tm={kernelName:wt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Xl(Mc(lc(r,a),gc(r,s)),e,mu(e))}}},nm={kernelName:It,inputsToSave:["x"],gradFunc:Of.gradFunc},rm={kernelName:St,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=ye(a,t[0].shape)[0],i=r.map((e=>e[s]));return jh(e,i,s).map((e=>()=>e))}},am={kernelName:Nt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return re(il(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Ol(r.shape,e,a,i,o,u),filter:()=>Sp(r,e,a.shape,i,o,u)}}},sm={kernelName:$t,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Rl(e,a,s,i,o,1,u),filter:()=>Sp(e,r,a.shape,s,i,o,u)}}},im=$s({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=cl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=cl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),re(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),re(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),re(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),re(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),re(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return fs.runKernel(Et,o,u)}}),om={kernelName:Ct,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;re(il(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>Ll(i.shape,e,o,a,s),filter:()=>im(i,e,o.shape,a,s)}}},um={kernelName:At,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pu(wc(Mh(Ti(n,"float32"))),e)}}},lm={kernelName:Rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pu(Lh(Ti(n,"float32")),e)}}},cm={kernelName:Ot,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=Rc([a],r.rank);let n=Wl(e,a,s,!i);return null!=t&&(n=qi(n,t)),n}}}},hm={kernelName:Pt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;re(il(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return re(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),re(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),re(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),re(ol(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),ll("depthwiseConv2d",s,i),{x:()=>Ap(u.shape,e,l,a,s,o,i),filter:()=>_p(u,e,l.shape,a,s,o,i)}}},pm={kernelName:Wt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>fs.runKernel(Ut,s,n),filter:()=>fs.runKernel(Gt,i,n)}}},dm={kernelName:Kt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>fs.runKernel(qt,r)}}},fm={kernelName:Xt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=pu(tc(wc(fu(n))),2/Math.sqrt(Math.PI));return{x:()=>pu(e,r)}}},mm={kernelName:Qt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pu(e,n)}}},gm={kernelName:Zt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>cl(e,n.shape)}}},ym={kernelName:Jt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pu(e,tc(n))}}},bm={kernelName:rn,gradFunc:e=>({x:()=>mu(e)})},xm={kernelName:an,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Zi(n.shape,r.shape);return{a:()=>{const t=hu(e,Ti(r,"float32")),s=Qi(n.shape,a);return s.length>0?cl(Nc(t,s),n.shape):t},b:()=>{let t=pu(e,Ti(n,"float32"));const s=Qi(r.shape,a);s.length>0&&(t=cl(Nc(t,s),r.shape));const i=fu(r);return wc(hu(t,Ti(i,"float32")))}}}},vm={kernelName:sn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?Iu(1):o,l=Qi(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const h=Eu(a,s),p=pu(e,u),d=Ah(lu(i,Iu(r))),f=pu(pu(pu(d,d),d),Iu(-.5));return{x:()=>1===s.rank?cl(pu(pu(e,ac(cl(d,[1,1,1,s.shape[0]]),c)),u),a.shape):cl(pu(pu(e,d),u),a.shape),mean:()=>{let e=pu(pu(d,Iu(-1)),p);return 1===s.rank&&(e=Nc(e,l)),cl(e,s.shape)},variance:()=>{let e=pu(pu(f,h),p);return 1===s.rank&&(e=Nc(e,l)),cl(e,s.shape)},scale:()=>{const t=pu(h,d);let n=pu(e,t);return 1===s.rank&&(n=Nc(n,l)),cl(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Nc(t,l)),cl(t,s.shape)}}}},wm={kernelName:on,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=ye(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,h=km(0,u),p=km(u+1,u+1+c),d=Im([o,[n],l]),f=cl(e,d),m=cl(a,[n]),g=Im([[u],h,p]),y=qi(f,g);let b=up(y,m,r.shape[i]);const x=Fc(g);return b=qi(b,x),b},indices:()=>a}}};function km(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Im(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Sm={kernelName:cn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>mu(n),b:()=>mu(r)}}},Nm={kernelName:hn,gradFunc:e=>({x:()=>Ti(e,"float32")})},Tm={kernelName:fn,gradFunc:e=>({x:()=>mu(e)})},$m={kernelName:mn,gradFunc:e=>({x:()=>mu(e)})},Cm={kernelName:gn,gradFunc:e=>({x:()=>mu(e)})},Em={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=uc(r,0);return{x:()=>Xl(s,e,pu(e,a))}}},_m={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,lu(n,1))}}},Am={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,Ti(n,"float32"))}}},Rm={kernelName:Tn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=tc(r);return Eu(e,pu(Nc(e,a,!0),t))}}}},Fm=$s({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return fs.runKernel(Cn,o,u)}}),Om={kernelName:$n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>Fm(r,a,e,s,i,o,u)}}};function Dm(e,t,n,r){return t.rank<n.rank&&(t=cl(t,_c(t.shape,r))),e.rank<n.rank&&(e=cl(e,_c(e.shape,r))),{x:()=>pu(e,Ti(ql(n,t),e.dtype))}}const Mm={kernelName:En,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=Dm(e,t[1],s,ye(a,s.shape));return{x:()=>i.x()}}},Lm={kernelName:_n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>pu(e,Ti(lc(n,r),"float32")),b:()=>pu(e,Ti(mc(n,r),"float32"))}}},Pm=$s({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=Ss(e,"dy","maxPool3dGrad"),u=Ss(t,"input","maxPool3dGrad"),l=Ss(n,"output","maxPool3dGrad");let c=o,h=u,p=l,d=!1;4===u.rank&&(d=!0,c=cl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=cl(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=cl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),re(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),re(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),re(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),ll("maxPool3dGrad",s,i);const f={dy:c,input:h,output:p},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=fs.runKernel(On,f,m);return d?cl(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Bm={kernelName:Fn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>Pm(e,r,a,s,i,o,u)}}},zm=$s({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=Ss(e,"dy","maxPoolGrad"),u=Ss(t,"input","maxPoolGrad"),l=Ss(n,"output","maxPoolGrad");re(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),re(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),re(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),ll("maxPoolGrad",s,i);const c={dy:o,input:u,output:l},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return fs.runKernel(Rn,c,h)}}),Vm={kernelName:An,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>zm(e,r,a,s,i,o)}}},Wm={kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>ml(e,s,r.shape)}}},Um={kernelName:Qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>ml(e,s,r.shape)}}},Gm={kernelName:Jn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=Zi(s.shape,i.shape);return{a:()=>{const t=Ti(i,"float32");let n=pu(e,pu(t,Cu(s,Eu(t,Iu(1)))));const r=Qi(s.shape,o);return r.length>0&&(n=Nc(n,r)),cl(n,s.shape)},b:()=>{const t=uc(s,0),n=Xl(t,xc(s),mu(s));let r=pu(e,pu(a,n));const u=Qi(i.shape,o);return u.length>0&&(r=Nc(r,u)),cl(r,i.shape)}}}},Hm={kernelName:yr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=uc(n,Iu(0)),r=Iu(jd),a=Iu(Kd),s=pu(e,a),i=pu(pu(e,r),tc(Ti(n,"float32")));return Xl(t,s,i)}}}},jm={kernelName:Tr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>bl(e,r,a)}}},Km={kernelName:$r,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>dl(e,r)}}},qm=[Of,Df,Mf,Lf,Pf,Bf,zf,Vf,Wf,Uf,Gf,Hf,Kf,Xf,Yf,Qf,Zf,Jf,em,tm,nm,rm,sm,am,om,um,lm,cm,hm,pm,{kernelName:Ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Zi(n.shape,r.shape);return{a:()=>{const t=hu(e,Ti(r,"float32")),s=Qi(n.shape,a);return s.length>0?cl(Nc(t,s),n.shape):t},b:()=>{let t=pu(e,Ti(n,"float32"));const s=Qi(r.shape,a);s.length>0&&(t=cl(Nc(t,s),r.shape));const i=fu(r);return wc(hu(t,Ti(i,"float32")))}}}},dm,fm,mm,gm,ym,xm,bm,vm,wm,Sm,Nm,Tm,$m,Cm,Em,_m,Am,Rm,Om,Mm,Mm,Lm,Bm,Vm,{kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=ye(a,r.shape),i=oe(Ec(r.shape,s)[1]);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=cl(e,t);return hu(pu(n,Hc(r.shape,"float32")),i)}}}},{kernelName:Ln,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=Dm(e,i,s,ye(a,s.shape));return{x:()=>o.x()}}},{kernelName:Pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>pu(e,Ti(gc(n,r),"float32")),b:()=>pu(e,Ti(uc(n,r),"float32"))}}},Wm,{kernelName:zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Zi(n.shape,r.shape);return{a:()=>{const t=Qi(n.shape,a);return t.length>0?cl(Nc(e,t),n.shape):e},b:()=>{const t=pu(e,wc(ic(hu(n,r)))),s=Qi(r.shape,a);return s.length>0?cl(Nc(t,s),r.shape):t}}}},{kernelName:Wn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Zi(n.shape,r.shape);return{a:()=>{const t=pu(e,Ti(r,"float32")),s=Qi(n.shape,a);return s.length>0?cl(Nc(t,s),n.shape):t},b:()=>{const t=pu(e,Ti(n,"float32")),s=Qi(r.shape,a);return s.length>0?cl(Nc(t,s),r.shape):t}}}},{kernelName:Un,gradFunc:e=>({x:()=>wc(e)})},{kernelName:Xn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Gc(n.shape,"float32")}}},{kernelName:qn,gradFunc:e=>({x:()=>mu(e)})},{kernelName:Yn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return lp(e,r).map((e=>()=>e))}},Um,Um,Gm,{kernelName:er,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=uc(n,0);return{x:()=>Xl(a,e,pu(e,r)),alpha:()=>{let t=Xl(a,mu(e),pu(e,n));const s=Qi(r.shape,e.shape);return s.length>0&&(t=Nc(t,s)),cl(t,r.shape)}}}},{kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,wc(fu(n)))}}},{kernelName:hr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=pu(gc(n,6),Qh(n));return{x:()=>pu(e,Ti(r,"float32"))}}},{kernelName:sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pu(e,Ti(Qh(n),"float32"))}}},{kernelName:ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cl(e,n.shape)}}},{kernelName:lr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>fs.runKernel(cr,a,n)}}},{kernelName:or,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>fs.runKernel(ur,a,n)}}},{kernelName:pr,gradFunc:(e,t,n)=>{const{dims:r}=n,a=ye(r,e.shape);return{x:()=>Nh(e,a)}}},{kernelName:dr,gradFunc:e=>({x:()=>mu(e)})},{kernelName:fr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wc(hu(e,pu(Cu(n,1.5),2)))}}},{kernelName:gr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ti(mu(n),"float32"),t:()=>pu(e,Ti(n,e.dtype)),e:()=>pu(e,Ti(Lc(n),e.dtype))}}},Hm,{kernelName:kr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pu(e,pu(n,Eu(Iu(1),n)))}}},{kernelName:wr,gradFunc:e=>({x:()=>mu(e)})},{kernelName:xr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pu(Bl(Ti(n,"float32")),e)}}},{kernelName:vr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pu(zl(Ti(n,"float32")),e)}}},{kernelName:br,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=So(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>rh(e,l)}}},{kernelName:Cr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=pu(e,r);return{logits:()=>Eu(s,pu(Nc(s,[a],!0),r))}}},{kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pu(e,fl(n))}}},jm,jm,Km,Km,{kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,pu(du(Ti(n,"float32")),2))}}},{kernelName:Or,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Iu(2);return{a:()=>pu(e,pu(a,Eu(n,r))),b:()=>pu(e,pu(a,Eu(r,n)))}}},{kernelName:Dr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pu(e,pu(Ti(n,"float32"),2))}}},{kernelName:Qr,gradFunc:e=>({x:()=>mu(e)})},{kernelName:zr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Zi(n.shape,r.shape);return{a:()=>{let t=e;const r=Qi(n.shape,a);return r.length>0&&(t=Nc(t,r)),cl(t,n.shape)},b:()=>{let t=e;const n=Qi(r.shape,a);return n.length>0&&(t=Nc(t,n)),cl(wc(t),r.shape)}}}},{kernelName:Nr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;ye(s,r.shape).forEach((e=>{a[e]=1}));const i=cl(e,a),o=pu(i,Hc(r.shape,"float32"));return{x:()=>o}}},{kernelName:Vr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,fu(Bl(n)))}}},{kernelName:Wr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pu(Eu(Iu(1),fu(n)),e)}}},{kernelName:Ur,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=mu(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=lu(t,ml(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=lu(t,ml(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=lu(t,ml(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=lu(t,ml(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:jr,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=Fc(a);return{x:()=>qi(e,s)}}},{kernelName:qr,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Yh(e,a)}}},{kernelName:Xr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ru(t,mu(t)),r=oc(e,n);let a=lc(t,Iu(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=nc(a,e+1);a=Mc(a,Hc(r.shape,"bool"));const i=mu(r);return Xl(a,r,i)}(e,n)}}},{kernelName:Yr,gradFunc:e=>({x:()=>mu(e)})}];for(const e of qm)ha(e);let Xm;function Ym(){return null==Xm&&(Xm=ou().epsilon()),Xm}Xa().prototype.abs=function(){return this.throwIfDisposed(),Au(this)},Xa().prototype.acos=function(){return this.throwIfDisposed(),Pu(this)},Xa().prototype.acosh=function(){return this.throwIfDisposed(),Bu(this)},Xa().prototype.add=function(e){return this.throwIfDisposed(),lu(this,e)},Xa().prototype.all=function(e,t){return this.throwIfDisposed(),Vu(this,e,t)},Xa().prototype.any=function(e,t){return this.throwIfDisposed(),Wu(this,e,t)},Xa().prototype.argMax=function(e){return this.throwIfDisposed(),Uu(this,e)},Xa().prototype.argMin=function(e){return this.throwIfDisposed(),Gu(this,e)},Xa().prototype.asScalar=function(){return this.throwIfDisposed(),re(1===this.size,(()=>"The array must have only 1 element.")),cl(this,[])},Xa().prototype.asType=function(e){return this.throwIfDisposed(),Ti(this,e)},Xa().prototype.as1D=function(){return this.throwIfDisposed(),cl(this,[this.size])},Xa().prototype.as2D=function(e,t){return this.throwIfDisposed(),cl(this,[e,t])},Xa().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),cl(this,[e,t,n])},Xa().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),cl(this,[e,t,n,r])},Xa().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),cl(this,[e,t,n,r,a])},Xa().prototype.asin=function(){return this.throwIfDisposed(),Hu(this)},Xa().prototype.asinh=function(){return this.throwIfDisposed(),ju(this)},Xa().prototype.atan=function(){return this.throwIfDisposed(),Ku(this)},Xa().prototype.atan2=function(e){return this.throwIfDisposed(),qu(this,e)},Xa().prototype.atanh=function(){return this.throwIfDisposed(),Xu(this)},Xa().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),hl(this,e,t,n,r)},Xa().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),bl(this,e,t)},Xa().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),xl(this,e,t,n,r,a)},Xa().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Nl(this,e)},Xa().prototype.cast=function(e){return this.throwIfDisposed(),Ti(this,e)},Xa().prototype.ceil=function(){return this.throwIfDisposed(),Tl(this)},Xa().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),$l(this,e,t)},Xa().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof qa&&(e=[e]),dl([this,...e],t)},Xa().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Fl(this,e,t,n,r,a,s)},Xa().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Dl(this,e,t,n,r,a)},Xa().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Rl(this,e,t,n,r,a,s)},Xa().prototype.cos=function(){return this.throwIfDisposed(),Bl(this)},Xa().prototype.cosh=function(){return this.throwIfDisposed(),zl(this)},Xa().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Vl(this,e,t,n)},Xa().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Wl(this,e,t,n)},Xa().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Gl(this,e,t)},Xa().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Hl(this,e,t,n,r,a,s)},Xa().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Kl(this,e,t,n,r,a)},Xa().prototype.divNoNan=function(e){return this.throwIfDisposed(),Yl(this,e)},Xa().prototype.div=function(e){return this.throwIfDisposed(),hu(this,e)},Xa().prototype.dot=function(e){return this.throwIfDisposed(),Ql(this,e)},Xa().prototype.elu=function(){return this.throwIfDisposed(),Jl(this)},Xa().prototype.equal=function(e){return this.throwIfDisposed(),ql(this,e)},Xa().prototype.erf=function(){return this.throwIfDisposed(),ec(this)},Xa().prototype.exp=function(){return this.throwIfDisposed(),tc(this)},Xa().prototype.expandDims=function(e){return this.throwIfDisposed(),nc(this,e)},Xa().prototype.expm1=function(){return this.throwIfDisposed(),rc(this)},Xa().prototype.fft=function(){return this.throwIfDisposed(),Uh(this)},Xa().prototype.flatten=function(){return this.throwIfDisposed(),cl(this,[this.size])},Xa().prototype.floor=function(){return this.throwIfDisposed(),ic(this)},Xa().prototype.floorDiv=function(e){return this.throwIfDisposed(),cu(this,e)},Xa().prototype.gather=function(e,t){return this.throwIfDisposed(),oc(this,e,t)},Xa().prototype.greaterEqual=function(e){return this.throwIfDisposed(),lc(this,e)},Xa().prototype.greater=function(e){return this.throwIfDisposed(),uc(this,e)},Xa().prototype.ifft=function(){return this.throwIfDisposed(),Gh(this)},Xa().prototype.irfft=function(){return this.throwIfDisposed(),Hh(this)},Xa().prototype.isFinite=function(){return this.throwIfDisposed(),hc(this)},Xa().prototype.isInf=function(){return this.throwIfDisposed(),pc(this)},Xa().prototype.isNaN=function(){return this.throwIfDisposed(),dc(this)},Xa().prototype.leakyRelu=function(e){return this.throwIfDisposed(),fc(this,e)},Xa().prototype.lessEqual=function(e){return this.throwIfDisposed(),gc(this,e)},Xa().prototype.less=function(e){return this.throwIfDisposed(),mc(this,e)},Xa().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),bc(this,e,t,n,r)},Xa().prototype.logSigmoid=function(){return this.throwIfDisposed(),Ic(this)},Xa().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Tc(this,e)},Xa().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Dc(this,e,t)},Xa().prototype.log=function(){return this.throwIfDisposed(),xc(this)},Xa().prototype.log1p=function(){return this.throwIfDisposed(),vc(this)},Xa().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Mc(this,e)},Xa().prototype.logicalNot=function(){return this.throwIfDisposed(),Lc(this)},Xa().prototype.logicalOr=function(e){return this.throwIfDisposed(),Pc(this,e)},Xa().prototype.logicalXor=function(e){return this.throwIfDisposed(),Bc(this,e)},Xa().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),ji(this,e,t,n)},Xa().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),zc(this,e,t,n,r)},Xa().prototype.max=function(e,t){return this.throwIfDisposed(),Sc(this,e,t)},Xa().prototype.maximum=function(e){return this.throwIfDisposed(),Ru(this,e)},Xa().prototype.mean=function(e,t){return this.throwIfDisposed(),Uc(this,e,t)},Xa().prototype.min=function(e,t){return this.throwIfDisposed(),Kc(this,e,t)},Xa().prototype.minimum=function(e){return this.throwIfDisposed(),qc(this,e)},Xa().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Xc(this,e,t)},Xa().prototype.mod=function(e){return this.throwIfDisposed(),Yc(this,e)},Xa().prototype.mul=function(e){return this.throwIfDisposed(),pu(this,e)},Xa().prototype.neg=function(){return this.throwIfDisposed(),wc(this)},Xa().prototype.norm=function(e,t,n){return this.throwIfDisposed(),mp(this,e,t,n)},Xa().prototype.notEqual=function(e){return this.throwIfDisposed(),eh(this,e)},Xa().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Ki(this,e,t,n)},Xa().prototype.onesLike=function(){return this.throwIfDisposed(),th(this)},Xa().prototype.pad=function(e,t){return this.throwIfDisposed(),rh(this,e,t)},Xa().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),lh(this,e,t,n,r,a,s)},Xa().prototype.pow=function(e){return this.throwIfDisposed(),Cu(this,e)},Xa().prototype.prelu=function(e){return this.throwIfDisposed(),ch(this,e)},Xa().prototype.prod=function(e,t){return this.throwIfDisposed(),hh(this,e,t)},Xa().prototype.reciprocal=function(){return this.throwIfDisposed(),kh(this)},Xa().prototype.relu=function(){return this.throwIfDisposed(),Ih(this)},Xa().prototype.relu6=function(){return this.throwIfDisposed(),Sh(this)},Xa().prototype.reshapeAs=function(e){return this.throwIfDisposed(),cl(this,e.shape)},Xa().prototype.reshape=function(e){return this.throwIfDisposed(),cl(this,e)},Xa().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),td(this,e,t,n)},Xa().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),nd(this,e,t,n)},Xa().prototype.reverse=function(e){return this.throwIfDisposed(),Nh(this,e)},Xa().prototype.rfft=function(){return this.throwIfDisposed(),Kh(this)},Xa().prototype.round=function(){return this.throwIfDisposed(),_h(this)},Xa().prototype.rsqrt=function(){return this.throwIfDisposed(),Ah(this)},Xa().prototype.selu=function(){return this.throwIfDisposed(),Rh(this)},Xa().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Fh(this,e,t,n,r,a,s)},Xa().prototype.sigmoid=function(){return this.throwIfDisposed(),fl(this)},Xa().prototype.sign=function(){return this.throwIfDisposed(),Dh(this)},Xa().prototype.sin=function(){return this.throwIfDisposed(),Mh(this)},Xa().prototype.sinh=function(){return this.throwIfDisposed(),Lh(this)},Xa().prototype.slice=function(e,t){return this.throwIfDisposed(),ml(this,e,t)},Xa().prototype.softmax=function(e){return this.throwIfDisposed(),Wh(this,e)},Xa().prototype.softplus=function(){return this.throwIfDisposed(),kc(this)},Xa().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),uh(this,e,t)},Xa().prototype.split=function(e,t){return this.throwIfDisposed(),jh(this,e,t)},Xa().prototype.sqrt=function(){return this.throwIfDisposed(),du(this)},Xa().prototype.square=function(){return this.throwIfDisposed(),fu(this)},Xa().prototype.squaredDifference=function(e){return this.throwIfDisposed(),qh(this,e)},Xa().prototype.squeeze=function(e){return this.throwIfDisposed(),Xh(this,e)},Xa().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof qa?[this,e]:[this,...e];return Yh(n,t)},Xa().prototype.step=function(e){return this.throwIfDisposed(),Qh(this,e)},Xa().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Zh(this,e,t,n,r,a,s,i,o)},Xa().prototype.sub=function(e){return this.throwIfDisposed(),Eu(this,e)},Xa().prototype.sum=function(e,t){return this.throwIfDisposed(),Nc(this,e,t)},Xa().prototype.tan=function(){return this.throwIfDisposed(),Jh(this)},Xa().prototype.tanh=function(){return this.throwIfDisposed(),gl(this)},Xa().prototype.tile=function(e){return this.throwIfDisposed(),ac(this,e)},Xa().prototype.toBool=function(){return this.throwIfDisposed(),Ti(this,"bool")},Xa().prototype.toFloat=function(){return this.throwIfDisposed(),Ti(this,"float32")},Xa().prototype.toInt=function(){return this.throwIfDisposed(),Ti(this,"int32")},Xa().prototype.topk=function(e,t){return this.throwIfDisposed(),sp(this,e,t)},Xa().prototype.transpose=function(e){return this.throwIfDisposed(),qi(this,e)},Xa().prototype.unique=function(e){return this.throwIfDisposed(),op(this,e)},Xa().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),up(this,e,t)},Xa().prototype.unstack=function(e){return this.throwIfDisposed(),lp(this,e)},Xa().prototype.where=function(e,t){return this.throwIfDisposed(),Xl(e,this,t)},Xa().prototype.zerosLike=function(){return this.throwIfDisposed(),mu(this)};class Qm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qm.prototype)}}class Zm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Zm.prototype)}}class Jm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Jm.prototype)}}class eg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,eg.prototype)}}class tg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,tg.prototype)}}function ng(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function rg(e,t){if(!e)throw new tg(t)}function ag(e,t){let n=0;for(const r of e)r===t&&n++;return n}function sg(e){return 1===e.length?e[0]:e}function ig(e){return Array.isArray(e)?e:[e]}function og(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function ug(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let lg={};function cg(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function hg(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>hg(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?hg(t):e[n]=t.value)}}}function pg(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in lg)s=lg[a];else if(s=t[a],null==s)throw new Jm(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new Jm(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in lg?[o,u]=lg.className:i in t&&([o,u]=t[i]),null==o)throw new Jm(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(lg))e[t]=lg[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},lg);for(const e of Object.keys(n))lg[e]=n[e];hg(s.config);const r=u(o,s.config,n,a);return lg=Object.assign({},t),r}{const e=Object.assign({},lg);for(const e of Object.keys(n))lg[e]=n[e];const t=new o(s.config);return lg=Object.assign({},e),t}}}function dg(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function fg(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function mg(e){if(null==e)throw new Jm(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function gg(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Jm(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function yg(e,t,n=0,r=1/0){return rg(n>=0),rg(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function bg(e,t){Array.isArray(e)?(re(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>bg(e,`element ${n+1} of ${t}`)))):re(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${xg(e)}.`))}function xg(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>xg(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function vg(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function wg(e,t){return Yo((()=>du(Nc(pu(e,e),t,!0))))}class kg extends $o{getConfig(){return{}}}class Ig extends kg{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yo((()=>{const t=wg(e,this.axis),n=$l(t,0,this.maxValue);return pu(e,hu(n,lu(Ym(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Ig.className="MaxNorm",Eo(Ig);class Sg extends kg{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yo((()=>hu(e,lu(Ym(),wg(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Sg.className="UnitNorm",Eo(Sg);class Ng extends kg{apply(e){return Ih(e)}}Ng.className="NonNeg",Eo(Ng);class Tg extends kg{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yo((()=>{const t=wg(e,this.axis),n=lu(pu(this.rate,$l(t,this.minValue,this.maxValue)),pu(1-this.rate,t));return pu(e,hu(n,lu(Ym(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Tg.className="MinMaxNorm",Eo(Tg);const $g={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Cg(e){return cg(e)}function Eg(e,t={}){return pg(e,Co.getMap().classNameMap,t,"constraint")}function _g(e){return null==e?null:"string"==typeof e?Eg({className:e in $g?$g[e]:e,config:{}}):e instanceof kg?e:Eg(e)}function Ag(e){return new Ig(e)}function Rg(e){return new Sg(e)}function Fg(){return new Ng}function Og(e){return new Tg(e)}const Dg=["channelsFirst","channelsLast"],Mg=["nearest","bilinear"],Lg=["valid","same","causal"],Pg=["max","avg"],Bg=["sum","mul","concat","ave"],zg=new Map;function Vg(e){gg(Dg,"DataFormat",e)}function Wg(e){gg(Lg,"PaddingMode",e)}function Ug(e){gg(Pg,"PoolMode",e)}const Gg=[];function Hg(e,t){Gg.push(e);try{const e=t();return Gg.pop(),e}catch(e){throw Gg.pop(),e}}function jg(e){if(!Xg(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Gg.length?"":Gg.join("/")+"/")+e}function Kg(e){if(!Xg(e))throw new Error("Not a valid tensor name: '"+e+"'");zg.has(e)||zg.set(e,0);const t=zg.get(e);if(zg.set(e,zg.get(e)+1),t>0){const n=`${e}_${t}`;return zg.set(n,1),n}return e}const qg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Xg(e){return!!e.match(qg)}function Yg(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Qg(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Zg(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Jg(e,t){if(t<e)throw new Jm(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function ey(e,t){return Ti(e,t)}function ty(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),cl(e,n)}function ny(e,t,n){return Yo((()=>{switch(e.rank){case 1:return Ph(e,t,n);case 2:return Bh(e,[t,0],[n,e.shape[1]]);case 3:return zh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Vh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return ml(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return ml(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Jm(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ry(e,t,n){return Yo((()=>{switch(e.rank){case 1:return Ph(e,t,n);case 2:return Bh(e,[0,t],[e.shape[0],n]);case 3:return zh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Vh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Jm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ay(e,t,n,r){return Yo((()=>{switch(e.rank){case 1:return Ph(e,t,n);case 2:switch(r){case 1:return ny(e,t,n);case 2:return ry(e,t,n);default:throw new Jm(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ny(e,t,n);case 2:return zh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ry(e,t,n);default:throw new Jm(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ny(e,t,n);case 2:return Vh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Vh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ry(e,t,n);default:throw new Jm(`The axis is not within the rank of the tensor ${r}`)}default:throw new Jm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function sy(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),dl(e,t)}function iy(e,t){switch(e.rank){case 1:return Cl([e,t]);case 2:return El([e,t],0);case 3:return _l([e,t],0);case 4:return Al([e,t],0);default:throw new Jm(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function oy(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Jm(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return ac(e,t)}function uy(e,t=0,n=1,r,a){return bh(e,t,n,r,a)}function ly(e,t,n,r){if(e.rank<2||t.rank<2)throw new eg(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new eg(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Fp({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?py(e.rank,r,"channelsLast"):null,activation:n});{const a=e.shape.slice(),s=a.pop();e=cl(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=cl(qi(t,c),[u,-1]);const h=[...a,...l];return cl(Fp({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?py(e.rank,r,"channelsLast"):null,activation:n}),h)}}function cy(e,t,n){return Yo((()=>(t=Array.isArray(t)?ep(t,"int32"):Ti(t,"int32"),oc(e,t,n))))}function hy(e){return pu(e,e)}function py(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Jm(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?cl(t,[1,r[0],1,1,1]):cl(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?cl(t,[1,1,1,1,r[0]]):cl(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?cl(t,[1,r[0],1,1]):cl(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?cl(t,[1,1,1,r[0]]):cl(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?cl(t,[1,r[0],1]):cl(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?cl(t,[1,1,r[0]]):cl(t,[1].concat(r))}else if(e<3)return t;throw new Jm(`Unsupported input rank by biasAdd: ${t.rank}`)}function dy(e,t,n){return Yo((()=>(null==n&&(n="channelsLast"),Vg(n),lu(e,py(e.rank,t,n)))))}function fy(e,t,n,r){return Yo((()=>vp(e,t,n,r)))}function my(e,t,n=!1){return n?e():t()}const gy=["fanIn","fanOut","fanAvg"],yy=["normal","uniform","truncatedNormal"];class by extends $o{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class xy extends by{apply(e,t){return Gc(e,t)}}xy.className="Zeros",Eo(xy);class vy extends by{apply(e,t){return Hc(e,t)}}vy.className="Ones",Eo(vy);class wy extends by{constructor(e){if(super(),"object"!=typeof e)throw new Jm(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Jm(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Yo((()=>pu(Iu(this.value),Hc(e,t))))}getConfig(){return{value:this.value}}}wy.className="Constant",Eo(wy);class ky extends by{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return xh(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ky.className="RandomUniform",Eo(ky);class Iy extends by{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new eg(`randomNormal does not support dType ${t}.`);return uy(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Iy.className="RandomNormal",Eo(Iy);class Sy extends by{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new eg(`truncatedNormal does not support dType ${t}.`);return ip(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Sy.className="TruncatedNormal",Eo(Sy);class Ny extends by{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Yo((()=>{if(2!==e.length||e[0]!==e[1])throw new Jm("Identity matrix initializer can only be used for 2D square matrices.");return pu(this.gain,sc(e[0]))}))}getConfig(){return{gain:this.gain}}}Ny.className="Identity",Eo(Ny);class Ty extends by{constructor(e){if(super(),e.scale<0)throw new Jm(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,gg(gy,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){gg(yy,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Vg(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Yg(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Yg(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Yg(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new eg(`${this.getClassName()} does not support dType ${t}.`);return ip(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return xh(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ty.className="VarianceScaling",Eo(Ty);class $y extends Ty{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ty.className}}$y.className="GlorotUniform",Eo($y);class Cy extends Ty{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ty.className}}Cy.className="GlorotNormal",Eo(Cy);class Ey extends Ty{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ty.className}}Ey.className="HeNormal",Eo(Ey);class _y extends Ty{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ty.className}}_y.className="HeUniform",Eo(_y);class Ay extends Ty{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ty.className}}Ay.className="LeCunNormal",Eo(Ay);class Ry extends Ty{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ty.className}}Ry.className="LeCunNormal",Eo(Ry);class Fy extends by{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new eg("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Yo((()=>{if(e.length<2)throw new eg("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=uy(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Ed.gramSchmidt(t);return e[0]>e[1]&&(n=qi(n)),pu(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Fy.className="Orthogonal",Eo(Fy);const Oy={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Dy(e,t={}){return pg(e,Co.getMap().classNameMap,t,"initializer")}function My(e){return cg(e)}function Ly(e){if("string"==typeof e){const t=e in Oy?Oy[e]:e;if("GlorotNormal"===t)return new Cy;if("GlorotUniform"===t)return new $y;if("HeNormal"===t)return new Ey;if("HeUniform"===t)return new _y;if("LeCunNormal"===t)return new Ay;if("LeCunUniform"===t)return new Ry;{const e={};return e.className=t,e.config={},Dy(e)}}return e instanceof by?e:Dy(e)}function Py(){return new xy}function By(){return new vy}function zy(e){return new wy(e)}function Vy(e){return new ky(e)}function Wy(e){return new Iy(e)}function Uy(e){return new Sy(e)}function Gy(e){return new Ny(e)}function Hy(e){return new Ty(e)}function jy(e){return new $y(e)}function Ky(e){return new Cy(e)}function qy(e){return new Ey(e)}function Xy(e){return new _y(e)}function Yy(e){return new Ay(e)}function Qy(e){return new Ry(e)}function Zy(e){return new Fy(e)}let Jy=0;function eb(){return Jy++}const tb={};function nb(e=""){return e in tb||(tb[e]=0),tb[e]+=1,e+tb[e].toString()}function rb(e){return Array.isArray(e)&&Array.isArray(e[0])}function ab(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function sb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Jm(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ib(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Jm(`Expected exactly 1 Shape; got ${e.length}`)}return e}function ob(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class ub{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=eb(),n=null==n?"Variable":n,this.originalName=jg(n),this.name=Kg(this.originalName),this.trainable_=r,this.constraint=a,this.val=cp(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function lb(e){return e.map((e=>e.read()))}function cb(e){e.forEach((e=>{e[0].write(e[1])}))}class hb{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class pb{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=eb(),null!=s&&(this.originalName=jg(s),this.name=Kg(this.originalName)),this.rank=t.length}}let db=0;class fb{constructor(e,t){this.callArgs=t,this.id=db++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let mb=0;class gb extends $o{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=mb++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=og(e)+"_"+nb(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Zm(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Jm(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return sg(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return sg(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Qm(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Qm(`Layer ${this.name} is not connected, no input to return.`);return sg(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Qm(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Qm(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return sg(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ig(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=ig(this.inputSpec);if(e.length!==t.length)throw new Jm(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new Jm(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ig(e);let r=!0;for(const e of n)if(!(e instanceof pb)){r=!1;break}let a=!0;for(const e of n)if(e instanceof pb){a=!1;break}if(r===a)throw new Jm("Arguments to apply() must be all SymbolicTensors or all Tensors");return Hg(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ig(e))t.push(n.shape);this.build(sg(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=ig(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=sg(s),null!=this.activityRegularizer)throw new eg("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=ig(e);const t=[];for(const n of e)t.push(n.shape);return sg(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new pb(s,n,this,ig(e),t,this.name,r))):new pb(s,r,this,ig(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new eg("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Qm(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Qm(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Zm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ob(this.weights)}build(e){this.built=!0}getWeights(e=!1){return lb(e?this.trainableWeights:this.weights)}setWeights(e){Yo((()=>{const t=this.weights;if(t.length!==e.length)throw new Jm(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=lb(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!le(s.shape,o.shape))throw new Jm(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}cb(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Jm(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Ly("zeros"));const u=r.apply(t,n),l=new ub(u,n,e,s,i);return u.dispose(),null!=a&&this.addLoss((()=>a.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ig(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=ig(e);t=ig(t),n=ig(n),r=ig(r),a=ab(a),s=ab(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new fb({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function yb(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=yb(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class bb extends gb{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:nb("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Jm("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Jm("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Jm("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new pb(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new fb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Jm(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function xb(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Jm("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new bb({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function vb(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Qo(r)}}function wb(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var kb;bb.className="InputLayer",Eo(bb),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(kb||(kb={}));class Ib{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Sb{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Nb extends Ib{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=Yo((()=>lu(this.totals[e],pu(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Yo((()=>{const n=pu(hu(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Zo(t[e])})))}}class Tb extends Ib{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class $b extends Ib{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Dd,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ee(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():Ra();return(...s)=>{const i=null!=n?n():Ra();return i-a<t||(a=i,r=e(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await vb(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await vb(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await vb(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await vb(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await vb(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Ee(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await vb(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await vb(e),await this.trainEnd(e))}}function Cb(e,t){return null==e&&(e={}),e instanceof Ib?[e]:Array.isArray(e)&&e[0]instanceof Ib?e:ig(e).map((e=>new $b(e,t)))}class Eb{constructor(){}static registerCallbackConstructor(e,t){re(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Eb.checkForDuplicate(t),null==Eb.constructors[e]&&(Eb.constructors[e]=[]),Eb.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Eb.constructors)Eb.constructors[+t].forEach((t=>{if(t===e)throw new Jm("Duplicate callback constructor.")}))}static clear(){Eb.constructors={}}static createCallbacks(e){const t=[];for(const n in Eb.constructors){const r=+n;e>=r&&t.push(...Eb.constructors[r])}return t.map((e=>new e))}}function _b(e,t,n,r,a,s,i,o,u){const l=new Tb,c=[new Nb,...Eb.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new Sb(c);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Ab(e,t={},n=!1){return pg(e,Co.getMap().classNameMap,t,"layer",n)}function Rb(e,t){return Yo((()=>{"float32"!==e.dtype&&(e=Ti(e,"float32"));const n=Nc(hy(e),t,!0),r=Tu(n.shape,Ym()),a=du(Ru(n,r));return hu(e,a)}))}function Fb(e,t){return Yo((()=>Uc(hy(Eu(t,e)),-1)))}function Ob(e,t){return Yo((()=>Uc(Au(Eu(t,e)),-1)))}function Db(e,t){return Yo((()=>{const n=Eu(e,t),r=$l(Au(e),Ym(),Number.MAX_VALUE),a=Au(hu(n,r));return pu(100,Uc(a,-1))}))}function Mb(e,t,n=!1){return Yo((()=>{if(n)t=Wh(t);else{const e=Nc(t,t.shape.length-1,!0);t=hu(t,e)}return t=$l(t,Ym(),1-Ym()),wc(Nc(pu(Ti(e,"float32"),xc(t)),t.shape.length-1))}))}function Lb(e,t,n=!1){return Yo((()=>{const r=Ti(ic(function(e){const t=[Yg(e.shape)];return cl(e,t)}(e)),"int32"),a=(t=$l(t,Ym(),1-Ym())).shape;return Mb(cl(Ki(r,a[a.length-1]),a),t,n)}))}function Pb(e,t){return Yo((()=>{let n;return n=$l(t,Ym(),1-Ym()),n=xc(hu(n,Eu(1,n))),Uc(function(e,t){if(!le(e.shape,t.shape))throw new Jm(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Yo((()=>{const n=Ih(t),r=wc(Au(t));return lu(Eu(n,pu(t,e)),vc(tc(r)))}))}(e,n),-1)}))}function Bb(e,t){return Yo((()=>{const n=Rb(e,-1),r=Rb(t,-1),a=pu(n,r);return wc(Nc(a,-1))}))}Eb.constructors={};const zb={meanSquaredError:Fb,meanAbsoluteError:Ob,meanAbsolutePercentageError:Db,meanSquaredLogarithmicError:function(e,t){return Yo((()=>{const n=$l(t,Ym(),Number.MAX_VALUE),r=xc(lu(1,n)),a=$l(e,Ym(),Number.MAX_VALUE),s=xc(lu(1,a));return Uc(hy(Eu(r,s)),-1)}))},squaredHinge:function(e,t){return Yo((()=>{const n=Ru(0,Eu(1,pu(e,t)));return Uc(hy(n),-1)}))},hinge:function(e,t){return Yo((()=>{const n=Ru(0,Eu(1,pu(e,t)));return Uc(n,-1)}))},categoricalHinge:function(e,t){return Yo((()=>{const n=Nc(pu(e,t),-1),r=Sc(pu(Eu(1,e),t),-1);return Ru(0,lu(1,Eu(r,n)))}))},logcosh:function(e,t){return Yo((()=>{const n=Math.log(2),r=Eu(t,e),a=Eu(lu(r,kc(pu(-2,r))),n);return Uc(a,-1)}))},categoricalCrossentropy:Mb,sparseCategoricalCrossentropy:Lb,binaryCrossentropy:Pb,kullbackLeiblerDivergence:function(e,t){return Yo((()=>{const n=$l(e,Ym(),1),r=$l(t,Ym(),1);return Nc(pu(e,xc(hu(n,r))),-1)}))},poisson:function(e,t){return Yo((()=>{const n=xc(lu(Ym(),t));return Uc(Eu(t,pu(e,n)),-1)}))},cosineProximity:Bb};function Vb(e){if("string"==typeof e){if(e in zb)return zb[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Jm(t)}return e}function Wb(e,t){return Yo((()=>{const n=pu(.5,th(t)),r=ey(uc(t,n),e.dtype);return Uc(ql(e,r),-1)}))}function Ub(e,t){return Yo((()=>ey(ql(Uu(e,-1),Uu(t,-1)),"float32")))}function Gb(e,t){return Yo((()=>Ti(Nc(Mc(ql(e,1),ql(t,1))),"float32")))}function Hb(e,t){return Yo((()=>{const n=Gb(e,t),r=function(e,t){return Yo((()=>Ti(Nc(Mc(ql(e,0),ql(t,1))),"float32")))}(e,t),a=lu(n,r);return Ti(Xl(uc(a,0),hu(n,a),0),"float32")}))}function jb(e,t){return Pb(e,t)}function Kb(e,t){return e.rank===t.rank&&(e=Xh(e,[e.rank-1])),(t=Uu(t,-1)).dtype!==e.dtype&&(t=Ti(t,e.dtype)),Ti(ql(e,t),"float32")}const qb=Mb,Xb=Lb,Yb={binaryAccuracy:Wb,categoricalAccuracy:Ub,precision:Hb,categoricalCrossentropy:qb,sparseCategoricalCrossentropy:Xb,mse:Fb,MSE:Fb,mae:Ob,MAE:Ob,mape:Db,MAPE:Db,cosine:Bb};function Qb(e){if("string"==typeof e&&e in Yb)return Yb[e];if("string"!=typeof e&&null!=e)return e;throw new Jm(`Unknown metric ${e}`)}function Zb(e){if(rg(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(zb))if(zb[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Yb))if(Yb[n]===e){t=n;break}return void 0!==t?t:e.name}}function Jb(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!ex(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function ex(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!ex(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!ex(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function tx(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function nx(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}tx([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function rx(e,t,n,r){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${n}[${r}][${a}]`)}const o=e.name,u=e.getClassName(),l=0===i.length?"":i[0];tx([`${o} (${u})`,s,a,e.countParams().toString(),l],t,r);for(let e=1;e<i.length;++e)tx(["","","","",i[e]],t,r)}function ax(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function sx(e,t){if(null===e)return null;if("string"==typeof e)return ug(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];ax(t,a,r)?n.push(r):n.push(sx(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=ug(n);t[e]=sx(r,e)}}return t}}function ix(e,t){if(null==e)return null;if("string"==typeof e)return og(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];ax(t,a,r)?n.push(r):n.push(ix(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[og(n)]="name"!==n&&"className"!==n||"string"!=typeof r?ix(r,n):r}return t}}const ox="3.15.0";class ux{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ux)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Jm(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ti(t,e.dtype)}catch(n){throw new Jm(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof pb){if(null==this.id2Value[e.id])throw new Jm(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Jm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof pb){if(null==this.id2Value[e.id])throw new Jm(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Jm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Qo(this.id2Mask)}}const lx={},cx={};function hx(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,p;if(null==lx[c]){const e=function(e,t){re(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=dx(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=dx(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:px(r)}}(i,t);h=e.sorted,p=e.recipientCounts,lx[c]=h,cx[c]=p}h=lx[c],p={},a||Object.assign(p,cx[c]);const d=new ux(t);for(let e=0;e<h.length;++e){if(null!=r){const e=qo().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=h[e],i=s.sourceLayer;if(i instanceof bb)continue;const l=[],c=[],f=[];let m=!1;for(const e of s.inputs){const n=d.getValue(e),r=d.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),a||(p[e.name]--,0!==p[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=ig(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=fx(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}a||Qo(f)}return d.disposeMasks(),s?u:u[0]}function px(e){const t={};for(const n in e)t[n]=e[n].size;return t}function dx(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function fx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class mx extends gb{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=nb(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],fg(this.inputs).length!==this.inputs.length)throw new Jm(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);fg(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;rg(0===n,"input layer has >1 nodes"),rg(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof bb))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new Zm(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(mx.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(a[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(dg);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof mx&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(dg);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Zm(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Zm(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new fb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Jm("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Jm(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new Jm(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Jm(`${e.length} of ${r} weights are not set: ${e}`)}cb(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${ox}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=ix(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Yo((()=>{e=ig(e);const n=new ux;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return hx(this.outputs,n,t)}))}computeMask(e,t){return Yo((()=>{let n;return e=ig(e),n=null==t?ng(null,e.length):ig(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=ab(e);if(t.length!==this.inputLayers.length)throw new Jm(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(dg);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=ab(t.computeOutputShape(sg(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];rg(t in n),a.push(n[t])}return sg(a)}runInternalGraph(e,t){null==t&&(t=ng(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(dg);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=ig(t.call(e,l)),u=ig(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=ig(t.call(r,l)),u=ig(t.computeMask(r,i));if(t.activityRegularizer)throw new eg("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){rg(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof mx?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=mx.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Jm(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Jm("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Jm(`No such layer: ${e}`)}calculateLosses(){return Yo((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=mx.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=mx.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[mx.nodeKey(a,s)];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=mx.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=mx.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(sg(n),r)}function u(e){const n=e.name,s=Ab(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Jm(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!mg(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],r=e[2];rg(t in a);const s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];rg(t in a);const s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new Jm("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Yo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function gx(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function yx(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Yo((()=>{if(1===e.shape.length)return $i(e);if(2===e.shape.length){if(e.shape[1]>1)return Uu(e,1);if(1===e.shape[1])return cl(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Qo(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),ep(a,"float32")}return null}function bx(e,t){return pu(e,t)}function xx(e,t){let n,r;const a=t;n=a.xs,r=a.ys,re(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=vx("input",e.inputNames,n),i=vx("output",e.outputNames,r),o=s[0].shape[0];re(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),re(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)re(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)re(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function vx(e,t,n){if(n instanceof qa)return[n];if(Array.isArray(n))return re(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new Jm(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function wx(e){return"function"==typeof e.iterator}function kx(e){re(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Ix(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ny(e,t,n-t))):ny(e,t,n-t)}function Sx(e,t){return Yo((()=>null==e?null:Array.isArray(e)?e.map((e=>Sx(e,t))):cy(e,"int32"===t.dtype?t:Ti(t,"int32"))))}function Nx(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function Tx(e){const t=[];e instanceof qa&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(ty(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function $x(e,t){if(null==e)return;const n=[];if(t instanceof qa)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof qa)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Cx(e){return Array.isArray(e)}function Ex(e){return!function(e){return e instanceof qa}(e)&&!Cx(e)}function _x(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Cx(e)&&e.length>0)t=!0;else if(Ex(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Jm(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(Ex(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new Jm(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Cx(e)){if((e=e).length!==t.length)throw new Jm(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new Jm(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Tx(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Jm(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new Jm(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function Ax(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new Jm(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new Jm(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Jm(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new Jm(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Rx extends mx{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Jm("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),tx(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?nx(o[e],n,r):rx(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?ob(e.collectedTrainableWeights):ob(e.trainableWeights),t}(e),l=ob(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Fd.adagrad(.01),Adadelta:()=>Fd.adadelta(1,.95,Ym()),Adam:()=>Fd.adam(.001,.9,.999,Ym()),Adamax:()=>Fd.adamax(.002,.9,.999,Ym(),0),RMSProp:()=>Fd.rmsprop(.001,.9,0,Ym()),SGD:()=>Fd.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Jm(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Su))throw new Jm("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Jm(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Vb(e)))}else{const n=Vb(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Jm(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Vb(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Hg("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Hg("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===Pb?-1!==["accuracy","acc"].indexOf(i)?r=Wb:-1!==["crossentropy","ce"].indexOf(i)&&(r=jb):this.lossFunctions[e]===Lb?-1!==["accuracy","acc"].indexOf(i)?r=Kb:-1!==["crossentropy","ce"].indexOf(i)&&(r=Xb):-1!==["accuracy","acc"].indexOf(i)?r=Ub:-1!==["crossentropy","ce"].indexOf(i)&&(r=qb),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=Qb(i);s=e,n=""+Zb(i)}let t;Hg(n,(()=>{t=s})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;kx(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return sg(this.testLoop(i,s,r,n.verbose,n.steps))}finally{$x(a[0],e),$x(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new eg("Verbose mode is not implemented yet.");re(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=Yo((()=>{if(t.value){const{xs:n,ys:r}=xx(e,t.value),i=n.concat(r),l=Yo((()=>a(i)));if(Qo(i),0===u)for(let e=0;e<l.length;++e)s.push(Iu(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=Yo((()=>lu(s[e],pu(c,t)))),u>0&&Qo(n)}Qo(l),o+=c,++u}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=hu(s[e],o),Qo(t)}return sg(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new Jm(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Jm(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Jm("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new ux;if(e instanceof qa&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Jm(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Jm(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=hx(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=ng(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Jm(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Yo((()=>{const r=this.checkNumSamples(e);if(n)throw new eg("Verbose predictLoop() is not implemented yet.");const a=Nx(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)Yo((()=>{const n=a[t][0],r=a[t][1],s=Ix(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new ux(i);return hx(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return sg(s.map((e=>dl(e,0))))}))}predict(e,t={}){const n=Tx(e);Ax(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return kx(r),this.predictLoop(n,r)}finally{$x(n,e)}}predictOnBatch(e){Ax(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Zm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Lb?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=fg(e.map((e=>e.shape[0])));r.sort();const a=fg(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new Jm(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new Jm(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!le(r,a))throw new Jm(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=_x(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=_x(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[Fb,Pb,Mb];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===Mb&&1===s.shape[s.shape.length-1])throw new Jm(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new Jm(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Jm(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=gx(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await yx(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return Yo((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new eg("Verbose mode is not implemented yet.");if(null!=a)throw new eg("steps mode in testLoop() is not implemented yet");{const r=Nx(s,n),a=ep(Jg(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=ny(a,s,o-s),l=Sx(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(Iu(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=lu(i[e],pu(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=hu(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;ag(e,r)>1&&(a+=`_${ag(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new ux(e),o=hx(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=bx(n,a[e]));const s=Uc(n);t.push(s),u=0===e?n:lu(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Uc(t(r[a],o[a]))}Zo(n),s.push(n)}return u=Uc(u),this.calculateLosses().forEach((e=>{u=lu(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>Yo((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new ux(s),o=hx(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=Uc(r(a[e],o[e]));n=0===e?s:lu(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Uc(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,l,c,h,p;e.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;kx(d);const f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,d);a=m[0],s=m[1],p=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new eg("validationData including sample weights is not supported yet."):new Jm(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],l=r.validationData[1];const t=!0,n=await e.standardizeUserData(u,l,null,null,t,d);c=n[0],h=n[1],g=c.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];c=Ix(a,e,t),i=a,a=Ix(a,0,e),h=Ix(s,e,t),o=s,s=Ix(s,0,e),g=c.concat(h)}else null!=r.validationSteps&&(y=!0);const b=a.concat(s).concat(p);e.checkTrainableWeightsConsistency();const x=e.makeTrainFunction(),v=e.getDedupedMetricsNames();let w,k;y?(e.makeTestFunction(),w=e.testFunction,k=v.slice().concat(v.map((e=>"val_"+e)))):(w=null,g=[],k=v.slice());const I=Cb(r.callbacks,r.yieldEvery),S=await async function(e,t,n,r,a,s,i,o,u,l,c,h,p,d,f){null==a&&(a=32),null==s&&(s=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=u&&null!=l&&(m=!0);const g=e.checkNumSamples(n,a,d,"steps_per_epoch");let y;null!=g&&(y=Jg(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=_b(o,i,s,p,g,d,a,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<s;++i){await b.onEpochBegin(i);const s={};{if("batch"===c)throw new eg("batch shuffling is not implemneted yet");c&&X(y);const i=ep(y),o=Nx(g,a);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),Yo((()=>{const p=o[c][0],d=o[c][1],f=ny(i,p,d-p);h.batch=c,h.size=d-p;const g=Sx(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,Zo(n)}if(c===o.length-1&&m){const t=e.testLoop(u,l,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];Zo(a),s["val_"+n]=a}}})),await b.onBatchEnd(c,h),wb(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,x,b,v,d,r.epochs,r.verbose,I,w,g,r.shuffle,k,r.initialEpoch,null);return S}finally{e.isTraining=!1,$x(a,t),$x(s,n),$x(i,t),$x(o,n),$x(c,u),$x(h,l),null!=p&&Qo(p)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(re(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),re(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),re(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),re(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),re(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(wx(n.validationData))re(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new eg("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=Cb(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=_b(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,l);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await p.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=xx(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await p.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const t=gx(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await yx(a[e],null,t[e]))}const l=r.concat(a).concat(i),d=o(l);Qo(l);for(let e=0;e<u.length;++e){const t=u[e],n=d[e];s[t]=n,Zo(n)}await p.onBatchEnd(h,s),wb(s),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=wx(n.validationData)?ig(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ig(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,l),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return Qo(s),$x(n[0],e),$x(n[1],t),sg(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=qo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-qo().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=og(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>og(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=og(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[og(Zb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>og(Zb(e))));{const e={};for(const t in this.metrics)e[t]=og(Zb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ab(sx(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=ug(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>ug(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=ug(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>ug(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=ug(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=js(e);if(0===t.length)throw new Jm(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Jm(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Jm("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Rs(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${ox}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await Rs(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Ls([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Jb(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Jb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Rx.className="Model",Eo(Rx);class Fx extends Rx{}async function Ox(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=Ab(sx(n),t);if(null!=e.weightsManifest){const t=await Di(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),Qo(t)}return r}Fx.className="Functional",Eo(Fx);class Dx extends Rx{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:nb("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Jm(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Dx||e instanceof Rx;let n;if(t){if(n=e,1!==n.outputs.length)throw new Jm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Jm("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Jm("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=xb({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Jm(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Jm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=yb(this.outputs[0])}this.inboundNodes=[],new fb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ng(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(ib(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Rx({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Zm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Zm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Zm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Zm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Jm("Legacy serialization format not supported yet.");a=t}else re(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof Dx))throw new eg(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of a){const t=Ab(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Jm("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Jm("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Mx(e){return new Rx(e)}function Lx(e){return new Dx(e)}function Px(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Ks(e,t);if(0===n.length)n.push(Vi(e,t));else if(n.length>1)throw new Jm(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Jm("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=Ab(sx(a),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Jm("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Fs(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Qo(e),Qo(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function Bx(e){return xb(e)}function zx(e,t){Eb.registerCallbackConstructor(e,t)}Dx.className="Sequential",Eo(Dx);class Vx extends $o{getConfig(){return{}}}class Wx extends Vx{apply(e,t=1){return function(e,t=1){if(1!==t)throw new eg(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Jl(e)}(e,t)}}Wx.className="elu",Eo(Wx);class Ux extends Vx{apply(e){return Rh(e)}}Ux.className="selu",Eo(Ux);class Gx extends Vx{apply(e){return Ih(e)}}Gx.className="relu",Eo(Gx);class Hx extends Vx{apply(e){return Yo((()=>qc(6,Ih(e))))}}Hx.className="relu6",Eo(Hx);class jx extends Vx{apply(e){return e}}jx.className="linear",Eo(jx);class Kx extends Vx{apply(e){return fl(e)}}Kx.className="sigmoid",Eo(Kx);class qx extends Vx{apply(e){return function(e){return Yo((()=>{const t=lu(.5,pu(.2,e));return $l(t,0,1)}))}(e)}}qx.className="hardSigmoid",Eo(qx);class Xx extends Vx{apply(e){return kc(e)}}Xx.className="softplus",Eo(Xx);class Yx extends Vx{apply(e){return function(e){return Yo((()=>hu(e,lu(Au(e),1))))}(e)}}Yx.className="softsign",Eo(Yx);class Qx extends Vx{apply(e){return gl(e)}}Qx.className="tanh",Eo(Qx);class Zx extends Vx{apply(e,t=-1){return Wh(e,t)}}Zx.className="softmax",Eo(Zx);class Jx extends Vx{apply(e,t=-1){return Tc(e,t)}}Jx.className="logSoftmax",Eo(Jx);class ev extends Vx{apply(e,t=1){return Yo((()=>pu(fl(pu(e,t)),e)))}}ev.className="swish",Eo(ev);class tv extends Vx{apply(e){return Yo((()=>pu(e,gl(kc(e)))))}}function nv(e){return e.getClassName()}function rv(e,t={}){return pg(e,Co.getMap().classNameMap,t,"activation")}function av(e){if(null==e){return rv({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},rv(t)}return e instanceof Vx?e:rv(e)}function sv(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}tv.className="mish",Eo(tv);class iv extends $o{}class ov extends iv{constructor(e){super(),sv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Yo((()=>{let t=Gc([1]);return this.hasL1&&(t=lu(t,Nc(pu(this.l1,Au(e))))),this.hasL2&&(t=lu(t,Nc(pu(this.l2,hy(e))))),cl(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}ov.className="L1L2",Eo(ov);const uv={l1l2:"L1L2"};function lv(e){return cg(e)}function cv(e,t={}){return pg(e,Co.getMap().classNameMap,t,"regularizer")}function hv(e){return null==e?null:"string"==typeof e?cv({className:e in uv?uv[e]:e,config:{}}):e instanceof iv?e:cv(e)}class pv extends gb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=sb(e);let n=Ih(e);return null!=this.maxValue&&(n=$l(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}pv.className="ReLU",Eo(pv);class dv extends gb{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=sb(e);return fc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}dv.className="LeakyReLU",Eo(dv);class fv extends gb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ly(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=hv(e.alphaRegularizer),this.alphaConstraint=_g(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Jm(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=ib(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new hb({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=sb(e),ch(e,this.alpha.read())}getConfig(){const e={alphaInitializer:My(this.alphaInitializer),alphaRegularizer:lv(this.alphaRegularizer),alphaConstraint:Cg(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}fv.className="PReLU",Eo(fv);class mv extends gb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new eg(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=sb(e);return Jl(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}mv.className="ELU",Eo(mv);class gv extends gb{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=sb(e);return pu(n,Ti(uc(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}gv.className="ThresholdedReLU",Eo(gv);class yv extends gb{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Zx).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=sb(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function bv(e,t,n){if("number"==typeof e)return ng(e,t);if(e.length!==t)throw new Jm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new Jm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function xv(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function vv(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Zg([n-t,0]);else{if("same"!==r)throw new Jm(`Unsupport padding mode: ${r}.`);e*=t}return e}function wv(e,t){return Yo((()=>(Vg(t),"channelsFirst"===t?qi(e,[0,2,3,1]):e)))}function kv(e,t){return Yo((()=>(Vg(t),"channelsFirst"===t?qi(e,[0,2,3,4,1]):e)))}function Iv(e,t,n,r=[1,1],a="valid",s,i,o=null){return Yo((()=>{if(null==s&&(s="channelsLast"),Vg(s),3!==e.rank&&4!==e.rank)throw new Jm(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Jm(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=wv(e,s);if("causal"===a)throw new eg("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Ep({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=qi(u,[0,3,1,2])),u}))}yv.className="Softmax",Eo(yv);class Sv extends gb{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Sv.verifyArgs(t),this.rank=e,bg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new eg(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=bv(t.kernelSize,e,"kernelSize"),this.strides=bv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Wg(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Vg(this.dataFormat),this.activation=av(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Ly(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=_g(t.biasConstraint),this.biasRegularizer=hv(t.biasRegularizer),this.activityRegularizer=hv(t.activityRegularizer),this.dilationRate=bv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Jm(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Jm(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Jm(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(rg("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!yg(e.kernelSize,"number",1,3))throw new Jm(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:nv(this.activation),useBias:this.useBias,biasInitializer:My(this.biasInitializer),biasRegularizer:lv(this.biasRegularizer),activityRegularizer:lv(this.activityRegularizer),biasConstraint:Cg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Nv extends Sv{constructor(e,t){super(e,t),this.kernel=null,Nv.verifyArgs(t),this.filters=t.filters,bg(this.filters,"filters"),this.kernelInitializer=Ly(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=_g(t.kernelConstraint),this.kernelRegularizer=hv(t.kernelRegularizer)}build(e){e=ib(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Jm(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Yo((()=>{let t;e=sb(e);const n=null==this.bias?null:this.bias.read(),r=vg(this.activation.getClassName());if(null!=r&&2===this.rank)t=Iv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return Yo((()=>{if(null==s&&(s="channelsLast"),Vg(s),3!==e.shape.length)throw new Jm(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Jm(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Jm(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=qi(e,[0,2,1])),"causal"===a)throw new eg("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Fl(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=dy(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Iv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new eg("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return Yo((()=>{if(null==s&&(s="channelsLast"),Vg(s),4!==e.rank&&5!==e.rank)throw new Jm(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Jm(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=kv(e,s);if("causal"===a)throw new eg("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ml(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=dy(o,n)),"channelsFirst"===s&&(o=qi(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=ib(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=xv(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:My(this.kernelInitializer),kernelRegularizer:lv(this.kernelRegularizer),kernelConstraint:Cg(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Jm(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Tv extends Nv{constructor(e){super(2,e),Tv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!yg(e.kernelSize,"number",1,2))throw new Jm(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Tv.className="Conv2D",Eo(Tv);class $v extends Nv{constructor(e){super(3,e),$v.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Jm(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}$v.className="Conv3D",Eo($v);class Cv extends Tv{constructor(e){if(super(e),this.inputSpec=[new hb({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Jm(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=ib(e)).length)throw new Jm("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Jm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hb({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Yo((()=>{let t=sb(e);if(4!==t.shape.length)throw new Jm(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,vv(i,c,u,this.padding),vv(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=qi(t,[0,2,3,1]));let d=Dl(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=qi(d,[0,3,1,2])),null!=this.bias&&(d=dy(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=ib(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=vv(t[r],o,s,this.padding),t[a]=vv(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Cv.className="Conv2DTranspose",Eo(Cv);class Ev extends $v{constructor(e){if(super(e),this.inputSpec=[new hb({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Jm(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=ib(e)).length)throw new Jm("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Jm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hb({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Yo((()=>{let t=sb(e);if(5!==t.shape.length)throw new Jm(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],u=n[a],l=n[s],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,vv(o,d,c,this.padding),vv(u,f,h,this.padding),vv(l,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=qi(t,[0,2,3,4,1]));let y=Pl(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=qi(y,[0,4,1,2,3])),null!==this.bias&&(y=dy(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=ib(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=vv(t[r],l,i,this.padding),t[a]=vv(t[a],c,o,this.padding),t[s]=vv(t[s],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ev.className="Conv3DTranspose",Eo(Ev);class _v extends Nv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Jm("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Jm("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Jm(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Ly(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=hv(t.depthwiseRegularizer),this.depthwiseConstraint=_g(t.depthwiseConstraint),this.pointwiseInitializer=Ly(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=hv(t.pointwiseRegularizer),this.pointwiseConstraint=_g(t.pointwiseConstraint)}build(e){if((e=ib(e)).length<this.rank+2)throw new Jm(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Jm(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new hb({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Yo((()=>{let t;if(e=sb(e),1===this.rank)throw new eg("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=qi(e,[0,2,3,1])),t=Fh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=dy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=qi(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=My(this.depthwiseInitializer),e.pointwiseInitializer=My(this.pointwiseInitializer),e.depthwiseRegularizer=lv(this.depthwiseRegularizer),e.pointwiseRegularizer=lv(this.pointwiseRegularizer),e.depthwiseConstraint=Cg(this.depthwiseConstraint),e.pointwiseConstraint=Cg(this.pointwiseConstraint),e}}_v.className="SeparableConv";class Av extends _v{constructor(e){super(2,e)}}Av.className="SeparableConv2D",Eo(Av);class Rv extends Nv{constructor(e){super(1,e),Rv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!yg(e.kernelSize,"number",1,1))throw new Jm(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Rv.className="Conv1D",Eo(Rv);class Fv extends gb{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Yo((()=>{if(e=sb(e),"channelsLast"===this.dataFormat){const t=ay(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ay(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=ay(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ay(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Fv.className="Cropping2D",Eo(Fv);class Ov extends gb{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Vg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,gg(Mg,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Yo((()=>{let t=sb(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=qi(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?Cd.resizeNearestNeighbor(t,[e,r]):Cd.resizeBilinear(t,[e,r]);return qi(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Cd.resizeNearestNeighbor(t,[e,r]):Cd.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Ov.className="UpSampling2D",Eo(Ov);class Dv extends Sv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ly(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=_g(e.depthwiseConstraint),this.depthwiseRegularizer=hv(e.depthwiseRegularizer)}build(e){if((e=ib(e)).length<4)throw new Jm(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Jm(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yo((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return Yo((()=>{null==a&&(a="channelsLast"),Vg(a);let i=wv(e,a);if(4!==e.rank)throw new Jm(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Jm(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Hl(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=qi(i,[0,3,1,2])),i}))}(e=sb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=dy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=ib(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=xv(t,this.kernelSize[0],this.padding,this.strides[0]),s=xv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=My(this.depthwiseInitializer),e.depthwiseRegularizer=lv(this.depthwiseRegularizer),e.depthwiseConstraint=Cg(this.depthwiseRegularizer),e}}function Mv(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Jm("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function Lv(e,t,n,r=!1,a,s,i=!1,o=!1){return Yo((()=>{const u=t.shape.length;if(u<3)throw new Jm(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Jg(2,u));if(t=qi(t,l),null!=s)throw new eg("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=Ti(Ti(a,"bool"),"float32")).rank===u-1&&(a=nc(a,-1)),a=qi(a,l)),r&&(t=Nh(t,0),null!=a&&(a=Nh(a,0)));const c=[];let h,p=n;const d=t.shape[0],f=lp(t);let m,g;null!=a&&(m=lp(a));for(let t=0;t<d;++t){const n=f[t],r=Yo((()=>e(n,p)));if(null==a)h=r[0],p=r[1];else{const e=Yo((()=>{const e=m[t],n=Eu(th(e),e);return{output:lu(pu(r[0],e),pu(p[0],n)),newStates:p.map(((t,a)=>lu(pu(r[1][a],e),pu(t,n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}return o&&(g=Yh(c,1)),[h,g,p]}))}Dv.className="DepthwiseConv2D",Eo(Dv);class Pv extends gb{constructor(e){let t;if(super(e),null==e.cell)throw new Jm("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new jv({cells:e.cell}):e.cell,null==t.stateSize)throw new Jm("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new hb({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Jg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){rb(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Yo((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new eg("Constants support is not implemented in RNN yet.");rb(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new hb({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!le(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new Jm(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new hb({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Yo((()=>{if(!this.stateful)throw new Qm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Jm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Gc([n,e]))):this.states_=[Gc([n,this.cell.stateSize])];else if(null==e)Qo(this.states_),null!=this.keptStates&&(Qo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Gc([n,e]))):this.states_[0]=Gc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Jm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Qo(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!le(r.shape,s))throw new Jm(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Zo(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Mv(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new hb({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof pb){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Yo((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=sb(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new Jm(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Lv(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Yo((()=>{let t=Gc(e.shape);return t=Nc(t,[1,2]),t=ty(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?oy(t,[1,e]):t)):this.cell.stateSize>1?[oy(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Pv.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Ab(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Pv.className="RNN",Eo(Pv);class Bv extends gb{}class zv extends Bv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,bg(this.units,"units"),this.activation=av(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ly(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ly(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ly(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=hv(e.kernelRegularizer),this.recurrentRegularizer=hv(e.recurrentRegularizer),this.biasRegularizer=hv(e.biasRegularizer),this.kernelConstraint=_g(e.kernelConstraint),this.recurrentConstraint=_g(e.recurrentConstraint),this.biasConstraint=_g(e.biasConstraint),this.dropout=Qg([1,Zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Qg([1,Zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ib(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yo((()=>{if(2!==(e=e).length)throw new Jm(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Kv({ones:()=>th(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Kv({ones:()=>th(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=ly(null!=s?pu(e,s):e,this.kernel.read()),null!=this.bias&&(a=dy(a,this.bias.read())),null!=i&&(n=pu(n,i));let o=lu(a,ly(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nv(this.activation),useBias:this.useBias,kernelInitializer:My(this.kernelInitializer),recurrentInitializer:My(this.recurrentInitializer),biasInitializer:My(this.biasInitializer),kernelRegularizer:lv(this.kernelRegularizer),recurrentRegularizer:lv(this.recurrentRegularizer),biasRegularizer:lv(this.biasRegularizer),activityRegularizer:lv(this.activityRegularizer),kernelConstraint:Cg(this.kernelConstraint),recurrentConstraint:Cg(this.recurrentConstraint),biasConstraint:Cg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}zv.className="SimpleRNNCell",Eo(zv);class Vv extends Pv{constructor(e){e.cell=new zv(e),super(e)}call(e,t){return Yo((()=>{null!=this.cell.dropoutMask&&(Qo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Qo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}Vv.className="SimpleRNN",Eo(Vv);class Wv extends Bv{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Jm("GRUCell does not support reset_after parameter set to true.");this.units=e.units,bg(this.units,"units"),this.activation=av(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=av(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ly(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ly(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ly(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=hv(e.kernelRegularizer),this.recurrentRegularizer=hv(e.recurrentRegularizer),this.biasRegularizer=hv(e.biasRegularizer),this.kernelConstraint=_g(e.kernelConstraint),this.recurrentConstraint=_g(e.recurrentConstraint),this.biasConstraint=_g(e.biasConstraint),this.dropout=Qg([1,Zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Qg([1,Zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=ib(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yo((()=>{if(2!==(e=e).length)throw new Jm(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Kv({ones:()=>th(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Kv({ones:()=>th(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=pu(e,a[0]));let l=ly(e,this.kernel.read());this.useBias&&(l=dy(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=pu(r,s[0]));const c=this.recurrentKernel.read(),[h,p]=jh(c,[2*this.units,this.units],c.rank-1),d=ly(r,h),[f,m,g]=jh(l,3,l.rank-1),[y,b]=jh(d,2,d.rank-1);i=this.recurrentActivation.apply(lu(f,y)),o=this.recurrentActivation.apply(lu(m,b));const x=ly(pu(o,r),p);u=this.activation.apply(lu(g,x));const v=lu(pu(i,r),pu(lu(1,wc(i)),u));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nv(this.activation),recurrentActivation:nv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:My(this.kernelInitializer),recurrentInitializer:My(this.recurrentInitializer),biasInitializer:My(this.biasInitializer),kernelRegularizer:lv(this.kernelRegularizer),recurrentRegularizer:lv(this.recurrentRegularizer),biasRegularizer:lv(this.biasRegularizer),activityRegularizer:lv(this.activityRegularizer),kernelConstraint:Cg(this.kernelConstraint),recurrentConstraint:Cg(this.recurrentConstraint),biasConstraint:Cg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Wv.className="GRUCell",Eo(Wv);class Uv extends Pv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Wv(e),super(e)}call(e,t){return Yo((()=>{null!=this.cell.dropoutMask&&(Qo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Qo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Uv.className="GRU",Eo(Uv);class Gv extends Bv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,bg(this.units,"units"),this.activation=av(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=av(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ly(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ly(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ly(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=hv(e.kernelRegularizer),this.recurrentRegularizer=hv(e.recurrentRegularizer),this.biasRegularizer=hv(e.biasRegularizer),this.kernelConstraint=_g(e.kernelConstraint),this.recurrentConstraint=_g(e.recurrentConstraint),this.biasConstraint=_g(e.biasConstraint),this.dropout=Qg([1,Zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Qg([1,Zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=ib(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends by{apply(t,r){const a=e.apply([n]),s=(new vy).apply([n]),i=e.apply([2*n]);return iy(iy(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Yo((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Jm(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Kv({ones:()=>th(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Kv({ones:()=>th(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=pu(e,s[0]));let h=ly(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=pu(r,i[0])),h=lu(h,ly(r,this.recurrentKernel.read())),this.useBias&&(h=dy(h,this.bias.read()));const[p,d,f,m]=jh(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(d),l=lu(pu(u,a),pu(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=pu(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nv(this.activation),recurrentActivation:nv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:My(this.kernelInitializer),recurrentInitializer:My(this.recurrentInitializer),biasInitializer:My(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:lv(this.kernelRegularizer),recurrentRegularizer:lv(this.recurrentRegularizer),biasRegularizer:lv(this.biasRegularizer),activityRegularizer:lv(this.activityRegularizer),kernelConstraint:Cg(this.kernelConstraint),recurrentConstraint:Cg(this.recurrentConstraint),biasConstraint:Cg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Gv.className="LSTMCell",Eo(Gv);class Hv extends Pv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Gv(e),super(e)}call(e,t){return Yo((()=>{null!=this.cell.dropoutMask&&(Qo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Qo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Hv.className="LSTM",Eo(Hv);class jv extends Bv{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Yo((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;rb(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{Hg(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Ab(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return lb(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}cb(t)}}function Kv(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):fy(t(),n),o=()=>my(i,t,r);return!a||a<=1?Zo(o().clone()):Array(a).fill(void 0).map(o).map((e=>Zo(e.clone())))}jv.className="StackedRNNCells",Eo(jv);class qv extends Pv{constructor(e){if(e.unroll)throw new eg("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new eg("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new hb({ndim:5})]}call(e,t){return Yo((()=>{if(null!=this.cell.dropoutMask&&(Qo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Qo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Jm("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Yo((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=Gc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){Yo((()=>{if(!this.stateful)throw new Qm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new Jm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Gc(a))):this.states_=[Gc(a)];else if(null==e)Qo(this.states_),null!=this.keptStates&&(Qo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Gc(a))):this.states_[0]=Gc(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Jm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Qo(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!le(n.shape,r))throw new Jm(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Zo(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=xv(u,r[0],a,s[0],i[0]),h=xv(l,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}qv.className="ConvRNN2D";class Xv extends Gv{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,bg(this.filters,"filters"),this.kernelSize=bv(n,2,"kernelSize"),this.kernelSize.forEach((e=>bg(e,"kernelSize"))),this.strides=bv(r||1,2,"strides"),this.strides.forEach((e=>bg(e,"strides"))),this.padding=a||"valid",Wg(this.padding),this.dataFormat=s||"channelsLast",Vg(this.dataFormat),this.dilationRate=bv(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>bg(e,"dilationRate")))}build(e){var t;e=ib(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Jm(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends by{apply(e,t){return sy([n.apply([r]),Hc([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Yo((()=>{if(3!==e.length)throw new Jm(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Kv({ones:()=>th(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?pu(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Kv({ones:()=>th(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let d=o(a,p,0),f=o(a,p,1),m=o(a,p,2),g=o(a,p,3);const[y,b,x,v]=jh(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?jh(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,w,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,S,this.padding);const[N,T,$,C]=jh(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,$),g=this.recurrentConv(g,C);const E=this.recurrentActivation.apply(lu(u,d)),_=this.recurrentActivation.apply(lu(l,f)),A=lu(pu(_,s),pu(E,this.activation.apply(lu(c,m)))),R=pu(this.recurrentActivation.apply(lu(h,g)),this.activation.apply(A));return[R,R,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=Rl(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?dy(a,n,this.dataFormat):a}recurrentConv(e,t){return Rl(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Xv.className="ConvLSTM2DCell",Eo(Xv);class Yv extends qv{constructor(e){const t=new Xv(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Yv.className="ConvLSTM2D",Eo(Yv);class Qv extends gb{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=sb(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return my((()=>fy(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Qv.className="Dropout",Eo(Qv);class Zv extends Qv{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Zv.className="SpatialDropout1D",Eo(Zv);class Jv extends gb{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,bg(this.units,"units"),this.activation=av(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Ly(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ly(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=_g(e.kernelConstraint),this.biasConstraint=_g(e.biasConstraint),this.kernelRegularizer=hv(e.kernelRegularizer),this.biasRegularizer=hv(e.biasRegularizer),this.activityRegularizer=hv(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=ib(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=ib(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=sb(e),r=vg(this.activation.getClassName());let a;return null!=r?a=ly(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=ly(n,this.kernel.read()),null!=this.bias&&(a=dy(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:nv(this.activation),useBias:this.useBias,kernelInitializer:My(this.kernelInitializer),biasInitializer:My(this.biasInitializer),kernelRegularizer:lv(this.kernelRegularizer),biasRegularizer:lv(this.biasRegularizer),activityRegularizer:lv(this.activityRegularizer),kernelConstraint:Cg(this.kernelConstraint),biasConstraint:Cg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Jv.className="Dense",Eo(Jv);class ew extends gb{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ib(e);for(const t of e.slice(1))if(null==t)throw new Jm(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Yg(e,1)]}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);let n=sb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=qi(n,e)}return function(e){if(e.rank<=1)throw new Jm(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Yg(e.shape,1)];return cl(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}ew.className="Flatten",Eo(ew);class tw extends gb{constructor(e){super(e),this.supportsMasking=!0,this.activation=av(e.activation)}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=sb(e);return this.activation.apply(n)}))}getConfig(){const e={activation:nv(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}tw.className="Activation",Eo(tw);class nw extends gb{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Yo((()=>{return e=sb(e),t=e,n=this.n,Yo((()=>{if(2!==t.shape.length)throw new Jm(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return oy(ty(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}nw.className="RepeatVector",Eo(nw);class rw extends gb{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new Jm("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=Yg(e);if(null!==s){if(0===a||i%a!=0)throw new Jm(n);r[s]=i/a}else if(i!==a)throw new Jm(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=sb(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return cl(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}rw.className="Reshape",Eo(rw);class aw extends gb{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Jg(1,e.dims.length+1);if(!le(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new hb({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=ib(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return qi(sb(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}aw.className="Permute",Eo(aw);class sw extends gb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=sb(e);return Wu(eh(n,this.maskValue),-1)}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=sb(e),r=Wu(eh(n,this.maskValue),-1,!0);return pu(n,Ti(r,n.dtype))}))}}sw.className="Masking",Eo(sw);class iw extends gb{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ig(e.inputLength))}this.inputDim=e.inputDim,bg(this.inputDim,"inputDim"),this.outputDim=e.outputDim,bg(this.outputDim,"outputDim"),this.embeddingsInitializer=Ly(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=hv(e.embeddingsRegularizer),this.activityRegularizer=hv(e.activityRegularizer),this.embeddingsConstraint=_g(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Yo((()=>this.maskZero?(e=sb(e),eh(e,mu(e))):null))}computeOutputShape(e){if(e=ib(e),null==this.inputLength)return[...e,this.outputDim];const t=ig(this.inputLength);if(t.length!==e.length-1)throw new Jm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new Jm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);let n=sb(e);"int32"!==n.dtype&&(n=ey(n,"int32"));const r=cy(this.embeddings.read(),cl(n,[n.size]));return cl(r,ib(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:My(this.embeddingsInitializer),embeddingsRegularizer:lv(this.embeddingsRegularizer),activityRegularizer:lv(this.activityRegularizer),embeddingsConstraint:Cg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}iw.className="Embedding",Eo(iw);class ow extends gb{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new eg}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new Jm("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ib(e)]),(e=e).length<2)throw new Jm(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=fg(t),t.length>1)throw new Jm(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===fg(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Yo((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Zg(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=ty(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=cl(r,[a].concat(Yg(e.slice(1))));i=qi(i,[1,0]),i=cl(i,s),t.push(i),n=!0}else if(e>1){const a=Jg(1,e).concat([0]);t.push(qi(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=cl(qi(cl(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(Jg(0,a-1));r=qi(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=fg(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Yo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Jm("`mask` should be an Array");if(!Array.isArray(e))throw new Jm("`inputs` should be an Array");if(t.length!==e.length)throw new Jm(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:nc(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Mc(n,t[e]);return n}))}}class uw extends ow{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=lu(t,e[n]);return t}))}}uw.className="Add",Eo(uw);class lw extends ow{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=pu(t,e[n]);return t}))}}lw.className="Multiply",Eo(lw);class cw extends ow{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=lu(t,e[n]);return pu(1/e.length,t)}))}}cw.className="Average",Eo(cw);class hw extends ow{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ru(t,e[n]);return t}))}}hw.className="Maximum",Eo(hw);class pw extends ow{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=qc(t,e[n]);return t}))}}pw.className="Minimum",Eo(pw);class dw extends ow{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Jm("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(le(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new Jm("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Yo((()=>sy(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Jm("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Jm("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Jm("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Jm(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Yo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Ti(th(e[n]),"bool")):t[n].rank<e[n].rank?r.push(nc(t[n],-1)):r.push(t[n]);const a=dl(r,this.axis);return Vu(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function fw(e,t){for(;e<0;)e+=t;return e}dw.className="Concatenate",Eo(dw);class mw extends ow{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){re(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new eg("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Jm(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Jm(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>fw(t,e[n].shape.length))):[fw(this.axes,n.shape.length),fw(this.axes,r.shape.length)],this.normalize&&(n=Rb(n,t[0]),r=Rb(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new eg("batchDot is not implemented for tensors of 4D or higher rank yet");if(re(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),re(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new eg("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return Yo((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=cl(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=cl(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?Nc(pu(e,t),s[0]):Nc(pu(qi(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=ji(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=Xh(i,t)}return 1===i.shape.length&&(i=nc(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[fw(this.axes,e.length),fw(this.axes,t.length)],n}computeOutputShape(e){re(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new eg("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}mw.className="Dot",Eo(mw);class gw extends gb{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=sb(e);return my((()=>lu(uy(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}gw.className="GaussianNoise",Eo(gw);class yw extends gb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=sb(e);return this.rate>0&&this.rate<1?my((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return pu(n,uy(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}yw.className="GaussianDropout",Eo(yw);class bw extends gb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||sb(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Yo((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=sb(e),r=-1.7580993408473766;let a=lc(xh(n),this.rate);a=ey(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=lu(pu(t,a),pu(lu(a,-1),r));return lu(pu(o,s),i)};return my(r,(()=>sb(e)),t.training||!1)}return e}))}}function xw(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=vl(e,t,n,r,a,s);else if(3===e.rank)i=wl(e,t,n,r,a,s);else{if(4!==e.rank)throw new eg(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=kl(e,t,n,r,a,s)}return i}bw.className="AlphaDropout",Eo(bw);class vw extends gb{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ly(e.betaInitializer||"zeros"),this.gammaInitializer=Ly(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ly(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ly(e.movingVarianceInitializer||"ones"),this.betaConstraint=_g(e.betaConstraint),this.gammaConstraint=_g(e.gammaConstraint),this.betaRegularizer=hv(e.betaRegularizer),this.gammaRegularizer=hv(e.gammaRegularizer)}build(e){e=ib(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Jm(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new hb({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Yo((()=>{const n=null!=t.training&&t.training,r=sb(e),a=r.shape,s=a.length,i=Jg(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=ng(1,s);u[o]=a[o];const l=i.slice();l.sort();const c=!le(l,Jg(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=cl(this.movingMean.read(),u),t=cl(this.movingVariance.read(),u),n=this.center?cl(this.beta.read(),u):null,a=this.scale?cl(this.gamma.read(),u):null;return xw(r,e,t,n,a,this.epsilon)}return xw(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(e,t,n,r,a=.001){return le(r.slice().sort(),Jg(0,e.rank-1))?function(e,t,n,r,a=.001){return Yo((()=>{const s=Qc(e,r),i=s.mean,o=s.variance;return[xw(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return Yo((()=>{const s=Qc(e,r),i=s.mean,o=s.variance,u=[];for(const t of Jg(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=cl(i,u),c=cl(o,u),h=null==t?null:cl(t,u),p=null==n?null:cl(n,u);return[xw(e,l,c,p,h,a),i,o]}))}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Yo((()=>{const r=1-n,a=e.read(),s=pu(Eu(a,t),r);e.write(Eu(a,s))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:My(this.betaInitializer),gammaInitializer:My(this.gammaInitializer),movingMeanInitializer:My(this.movingMeanInitializer),movingVarianceInitializer:My(this.movingVarianceInitializer),betaRegularizer:lv(this.betaRegularizer),gammaRegularizer:lv(this.gammaRegularizer),betaConstraint:Cg(this.betaConstraint),gammaConstraint:Cg(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}vw.className="BatchNormalization",Eo(vw);class ww extends gb{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ly(e.betaInitializer||"zeros"),this.gammaInitializer=Ly(e.gammaInitializer||"ones"),this.betaRegularizer=hv(e.betaRegularizer),this.gammaRegularizer=hv(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=ib(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==fg(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=sb(e),r=n.shape,a=r.length;return Yo((()=>{let{mean:e,variance:t}=Qc(n,this.axis,!0);const s=ng(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a?cl(e,s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=ac(e,l),t=ac(t,l),o=ac(o,c),u=ac(u,c),xw(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:My(this.betaInitializer),gammaInitializer:My(this.gammaInitializer),betaRegularizer:lv(this.betaRegularizer),gammaRegularizer:lv(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}ww.className="LayerNormalization",Eo(ww);class kw extends gb{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Jm(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Jm(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Jm(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new hb({ndim:4})]}computeOutputShape(e){let t,n;return e=ib(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Yo((()=>{return t=sb(e),n=this.padding,r=this.dataFormat,Yo((()=>{if(4!==t.rank)throw new Jm(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Jm("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Jm(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],rh(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Iw(e,t,n,r,a,s){return Yo((()=>{let i;Vg(a),Ug(s),Wg(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=wv(e,a);const o="same"===r?"same":"valid";return i="max"===s?zc(e,t,n,o):hl(e,t,n,o),"channelsFirst"===a&&(i=qi(i,[0,3,1,2])),i}))}function Sw(e,t,n,r,a,s){return Yo((()=>{let i;Vg(a),Ug(s),Wg(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=kv(e,a);const o="same"===r?"same":"valid";return i="max"===s?Vc(e,t,n,o):pl(e,t,n,o),"channelsFirst"===a&&(i=qi(i,[0,4,1,2,3])),i}))}kw.className="ZeroPadding2D",Eo(kw);class Nw extends gb{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Jm(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(bg(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Jm(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}bg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Wg(this.padding),this.inputSpec=[new hb({ndim:3})]}computeOutputShape(e){const t=xv((e=ib(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Yo((()=>{this.invokeCallHook(e,t),e=ty(sb(e),2);const n=this.poolingFunction(sb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Xh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Tw extends Nw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Vg(a),Wg(r),Iw(e,t,n,r,a,"max")}}Tw.className="MaxPooling1D",Eo(Tw);class $w extends Nw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Vg(a),Wg(r),Iw(e,t,n,r,a,"avg")}}$w.className="AveragePooling1D",Eo($w);class Cw extends gb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Jm(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];bg(this.poolSize,"poolSize"),bg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Vg(this.dataFormat),Wg(this.padding),this.inputSpec=[new hb({ndim:4})]}computeOutputShape(e){e=ib(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=xv(t,this.poolSize[0],this.padding,this.strides[0]),n=xv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Yo((()=>(this.invokeCallHook(e,t),this.poolingFunction(sb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ew extends Cw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Vg(a),Wg(r),Iw(e,t,n,r,a,"max")}}Ew.className="MaxPooling2D",Eo(Ew);class _w extends Cw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Vg(a),Wg(r),Iw(e,t,n,r,a,"avg")}}_w.className="AveragePooling2D",Eo(_w);class Aw extends gb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Jm(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];bg(this.poolSize,"poolSize"),bg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Vg(this.dataFormat),Wg(this.padding),this.inputSpec=[new hb({ndim:5})]}computeOutputShape(e){e=ib(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=xv(t,this.poolSize[0],this.padding,this.strides[0]),n=xv(n,this.poolSize[1],this.padding,this.strides[1]),r=xv(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Yo((()=>(this.invokeCallHook(e,t),this.poolingFunction(sb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Rw extends Aw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Vg(a),Wg(r),Sw(e,t,n,r,a,"max")}}Rw.className="MaxPooling3D",Eo(Rw);class Fw extends Aw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Vg(a),Wg(r),Sw(e,t,n,r,a,"avg")}}Fw.className="AveragePooling3D",Eo(Fw);class Ow extends gb{constructor(e){super(e),this.inputSpec=[new hb({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new eg}}class Dw extends Ow{constructor(e){super(e||{})}call(e,t){return Yo((()=>{const t=sb(e);return Uc(t,1)}))}}Dw.className="GlobalAveragePooling1D",Eo(Dw);class Mw extends Ow{constructor(e){super(e||{})}call(e,t){return Yo((()=>{const t=sb(e);return Sc(t,1)}))}}Mw.className="GlobalMaxPooling1D",Eo(Mw);class Lw extends gb{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Vg(this.dataFormat),this.inputSpec=[new hb({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new eg}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Pw extends Lw{call(e,t){return Yo((()=>{const t=sb(e);return"channelsLast"===this.dataFormat?Uc(t,[1,2]):Uc(t,[2,3])}))}}Pw.className="GlobalAveragePooling2D",Eo(Pw);class Bw extends Lw{call(e,t){return Yo((()=>{const t=sb(e);return"channelsLast"===this.dataFormat?Sc(t,[1,2]):Sc(t,[2,3])}))}}Bw.className="GlobalMaxPooling2D",Eo(Bw);class zw extends gb{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Ab(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class Vw extends zw{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=ib(e)).length<3)throw new Jm(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=ib(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Yo((()=>Lv(((e,n)=>[sb(this.layer.call(e,t)),[]]),e=sb(e),[],!1,null,null,!1,!0)[1]))}}Vw.className="TimeDistributed",Eo(Vw);class Ww extends zw{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Ab(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Ab(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,gg(Bg,"BidirectionalMergeMode",a),e.weights)throw new eg("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):sg(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Mv(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Jm("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new hb({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new eg("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof pb;for(const e of s)if(e instanceof pb!==o)throw new Jm("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Yo((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=Nh(a,1)),"concat"===this.mergeMode?i=sy([r,a]):"sum"===this.mergeMode?i=lu(r,a):"ave"===this.mergeMode?i=pu(.5,lu(r,a)):"mul"===this.mergeMode?i=pu(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Hg(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Hg(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Ab(t.layer);if(delete t.layer,null!=t.numConstants)throw new eg("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function Uw(e){return new bb(e)}function Gw(e){return new mv(e)}function Hw(e){return new pv(e)}function jw(e){return new dv(e)}function Kw(e){return new fv(e)}function qw(e){return new yv(e)}function Xw(e){return new gv(e)}function Yw(e){return new Rv(e)}function Qw(e){return new Tv(e)}function Zw(e){return new Cv(e)}function Jw(e){return new $v(e)}function ek(e){return new Ev(e)}function tk(e){return new Av(e)}function nk(e){return new Fv(e)}function rk(e){return new Ov(e)}function ak(e){return new Dv(e)}function sk(e){return new tw(e)}function ik(e){return new Jv(e)}function ok(e){return new Qv(e)}function uk(e){return new Zv(e)}function lk(e){return new ew(e)}function ck(e){return new nw(e)}function hk(e){return new rw(e)}function pk(e){return new aw(e)}function dk(e){return new iw(e)}function fk(e){return new uw(e)}function mk(e){return new cw(e)}function gk(e){return new dw(e)}function yk(e){return new hw(e)}function bk(e){return new pw(e)}function xk(e){return new lw(e)}function vk(e){return new mw(e)}function wk(e){return new vw(e)}function kk(e){return new ww(e)}function Ik(e){return new kw(e)}function Sk(e){return new $w(e)}function Nk(e){return Sk(e)}function Tk(e){return Sk(e)}function $k(e){return new _w(e)}function Ck(e){return $k(e)}function Ek(e){return $k(e)}function _k(e){return new Fw(e)}function Ak(e){return _k(e)}function Rk(e){return _k(e)}function Fk(e){return new Dw(e)}function Ok(e){return new Pw(e)}function Dk(e){return new Mw(e)}function Mk(e){return new Bw(e)}function Lk(e){return new Tw(e)}function Pk(e){return new Ew(e)}function Bk(e){return new Rw(e)}function zk(e){return new Uv(e)}function Vk(e){return new Wv(e)}function Wk(e){return new Hv(e)}function Uk(e){return new Gv(e)}function Gk(e){return new Vv(e)}function Hk(e){return new zv(e)}function jk(e){return new Yv(e)}function Kk(e){return new Xv(e)}function qk(e){return new Pv(e)}function Xk(e){return new jv(e)}function Yk(e){return new Ww(e)}function Qk(e){return new Vw(e)}Ww.className="Bidirectional",Eo(Ww);const Zk=Dk,Jk=Mk,eI=Lk,tI=Pk;function nI(e){return new gw(e)}function rI(e){return new yw(e)}function aI(e){return new bw(e)}function sI(e){return new sw(e)}function iI(e,t){return Wb(e,t)}function oI(e,t){return jb(e,t)}function uI(e,t){return Kb(e,t)}function lI(e,t){return Ub(e,t)}function cI(e,t){return qb(e,t)}function hI(e,t){return Hb(e,t)}function pI(e,t){return function(e,t){return Yo((()=>{const n=Gb(e,t),r=function(e,t){return Yo((()=>Ti(Nc(Mc(ql(e,1),ql(t,0))),"float32")))}(e,t),a=lu(n,r);return Ti(Xl(uc(a,0),hu(n,a),0),"float32")}))}(e,t)}function dI(e,t){return Bb(e,t)}function fI(e,t){return Ob(e,t)}function mI(e,t){return Db(e,t)}function gI(e,t){return Db(e,t)}function yI(e,t){return Db(e,t)}function bI(e,t){return Fb(e,t)}function xI(e,t){return Fb(e,t)}function vI(e,t){return Fb(e,t)}function wI(e){return new ov(e)}function kI(e){return sv(t=e),new ov({l1:null!=t?t.l1:null,l2:0});var t}function II(e){return sv(t=e),new ov({l2:null!=t?t.l2:null,l1:0});var t}class SI extends Ib{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Rx))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function NI(e,t){return e<t}function TI(e,t){return e>t}class $I extends SI{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new eg("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=NI:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=TI:this.monitorFunc=NI,this.monitorFunc===NI&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===NI?1/0:-1/0}async onEpochEnd(e,t){await vb(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const CI={earlyStopping:function(e){return new $I(e)}};var EI,_I;He().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(EI||(EI={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(_I||(_I={}));const AI={};function RI(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};AI[e]=n}function FI(e){return AI[e]}function OI(e){delete AI[e]}function DI(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return MI(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>MI(e,n,r,a)));const o=MI(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===s.type?u[0]:De(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function MI(e,t,n,r){const[a,s]=BI(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[PI(a,e)]));return void 0!==i?t[PI(a,i)][s]:void 0}function LI(e,t){const[n,r,a]=BI(e);return[PI(n,t&&t.currentContextId),r,a]}function PI(e,t){return t?`${e}-${t}`:e}function BI(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function zI(e,t,n){let r=DI("pad",e,t,n);if("explicit"===r){r=DI("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function VI(e){return e.kept?e:$i(e)}const WI=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],UI=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],GI=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],HI=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],jI=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],KI=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],qI=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],XI=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],YI=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],QI=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],ZI=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],JI=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],eS=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],tS=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],nS=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],rS=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],aS=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],sS=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],iS=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class oS{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[N,T,$,C,E,_,A,R,F,O,D,M,L,P,B,z,V,W,U].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=LI(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=LI(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=LI(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(d.initNodes=s),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=FI(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=lS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=lS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=xS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=xS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=hS(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=hS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=bS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=bS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=cS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=cS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=wS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=wS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=yS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=yS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=vS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=vS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=fS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=mS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=mS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=dS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=dS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=LI(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:pS(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=LI(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=LI(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function uS(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=He().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function lS(e,t,n,r=!1){const a=e[t];return null!=a?uS(a.s,r):n}function cS(e,t,n){const r=e[t];return r?r.b:n}function hS(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function pS(e){switch("string"==typeof e&&(e=EI[e]),e){case EI.DT_FLOAT:case EI.DT_HALF:return"float32";case EI.DT_INT32:case EI.DT_INT64:case EI.DT_INT8:case EI.DT_UINT8:return"int32";case EI.DT_BOOL:return"bool";case EI.DT_DOUBLE:return"float32";case EI.DT_STRING:return"string";default:return null}}function dS(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function fS(e,t,n){const r=e[t];return r&&r.type?pS(r.type):n}function mS(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>pS(e))):n}function gS(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function yS(e,t,n){const r=e[t];return r&&r.shape?gS(r.shape):n}function bS(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function xS(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>uS(e,r))):n}function vS(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>gS(e))):n}function wS(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class kS{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return MI(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return MI(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return hS(this.node.rawAttrs,e,t);if(null!=n.s)return lS(this.node.rawAttrs,e,t);if(null!=n.b)return cS(this.node.rawAttrs,e,t);if(null!=n.shape)return yS(this.node.rawAttrs,e,t);if(null!=n.type)return fS(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return bS(this.node.rawAttrs,e,t);if(null!=n.list.s)return xS(this.node.rawAttrs,e,t);if(null!=n.list.shape)return vS(this.node.rawAttrs,e,t);if(null!=n.list.b)return wS(this.node.rawAttrs,e,t);if(null!=n.list.type)return mS(this.node.rawAttrs,e,t)}return t}}function IS(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){re(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];re(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function SS(e){return"number"!=typeof e&&!e.some((e=>e<0))}function NS(e,t,n){let r=TS(e,n);const a=!SS(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=TS(e.shape,r)})),!SS(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function TS(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class $S{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Iu(0),Zo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),IS(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Zo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return _s([],[0].concat(this.elementShape));const n=this.readMany(e);return IS(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Yh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return _s([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return IS(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),dl(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,lp(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];Yo((()=>{t=cl(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=cl(ml(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class CS{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);IS(t,e.shape,"TensorList shape mismatch: "),Zo(e)})),this.idTensor=Iu(0),this.maxNumElements=r,Zo(this.idTensor)}get id(){return this.idTensor.id}copy(){return new CS([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);IS(e,this.elementShape,"TensorList shape mismatch: ");const r=NS(this.elementShape,this.tensors,e);return Yo((()=>{const e=this.tensors.map((e=>cl(e,r)));return Yh(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=NS(this.elementShape,this.tensors,e),r=this.tensors.pop();return IS(r.shape,e,"TensorList shape mismatch: "),cl(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(IS(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Zo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);IS(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=NS(this.elementShape,this.tensors,t);return cl(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);IS(this.elementShape,t.shape,"TensorList shape mismatch: "),Zo(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);IS(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=NS(this.elementShape,this.tensors,n);return 0===e.length?_s([],[0].concat(r)):Yo((()=>{const t=e.map((e=>cl(this.tensors[e],r)));return Yh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);IS(this.elementShape,t,"TensorList shape mismatch: ");const n=NS(this.elementShape,this.tensors,t);return 0===this.size()?_s([],[0].concat(n)):Yo((()=>{const e=this.tensors.map((e=>cl(e,n)));return dl(e,0)}))}}function ES(e,t,n){const[r,a]=DI("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,u="fusedbatchnorm"===r,l=DI("numArgs",e,t,n);if(s){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=DI("strides",e,t,n),h=zI(e,t,n),p=DI("dataFormat",e,t,n).toUpperCase(),d=DI("dilations",e,t,n);let[f,m]=DI("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:DI("leakyreluAlpha",e,t,n)}}function _S(e,t,n){return{boxes:DI("boxes",e,t,n),scores:DI("scores",e,t,n),maxOutputSize:DI("maxOutputSize",e,t,n),iouThreshold:DI("iouThreshold",e,t,n),scoreThreshold:DI("scoreThreshold",e,t,n),softNmsSigma:DI("softNmsSigma",e,t,n)}}class AS{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Iu(0),this.tensorMap=new Map,Zo(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Iu(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Yo((()=>{const e=lp(t),r=n.length,a=e.length;re(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];Zo(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Yo((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Yh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function RS(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return Yo((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[lu(DI("a",e,t,n),DI("b",e,t,n))];case"AddN":return[zu(DI("tensors",e,t,n))];case"FloorMod":case"Mod":return[Yc(DI("a",e,t,n),DI("b",e,t,n))];case"Mul":return[pu(DI("a",e,t,n),DI("b",e,t,n))];case"RealDiv":case"Div":return[hu(DI("a",e,t,n),DI("b",e,t,n))];case"DivNoNan":return[Yl(DI("a",e,t,n),DI("b",e,t,n))];case"FloorDiv":return[cu(DI("a",e,t,n),DI("b",e,t,n))];case"Sub":return[Eu(DI("a",e,t,n),DI("b",e,t,n))];case"Minimum":return[qc(DI("a",e,t,n),DI("b",e,t,n))];case"Maximum":return[Ru(DI("a",e,t,n),DI("b",e,t,n))];case"Pow":return[Cu(DI("a",e,t,n),DI("b",e,t,n))];case"SquaredDifference":return[qh(DI("a",e,t,n),DI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return Yo((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Au(DI("x",e,t,n))];case"Acos":return[Pu(DI("x",e,t,n))];case"Acosh":return[Bu(DI("x",e,t,n))];case"Asin":return[Hu(DI("x",e,t,n))];case"Asinh":return[ju(DI("x",e,t,n))];case"Atan":return[Ku(DI("x",e,t,n))];case"Atan2":return[qu(DI("x",e,t,n),DI("y",e,t,n))];case"Atanh":return[Xu(DI("x",e,t,n))];case"Ceil":return[Tl(DI("x",e,t,n))];case"Complex":return[Cs(DI("real",e,t,n),DI("imag",e,t,n))];case"Cos":return[Bl(DI("x",e,t,n))];case"Cosh":return[zl(DI("x",e,t,n))];case"Elu":return[Jl(DI("x",e,t,n))];case"Erf":return[ec(DI("x",e,t,n))];case"Exp":return[tc(DI("x",e,t,n))];case"Expm1":return[rc(DI("x",e,t,n))];case"Floor":return[ic(DI("x",e,t,n))];case"Log":return[xc(DI("x",e,t,n))];case"Log1p":return[vc(DI("x",e,t,n))];case"Imag":return[cc(DI("x",e,t,n))];case"Neg":return[wc(DI("x",e,t,n))];case"Reciprocal":return[kh(DI("x",e,t,n))];case"Real":return[wh(DI("x",e,t,n))];case"Relu":return[Ih(DI("x",e,t,n))];case"Round":return[_h(DI("x",e,t,n))];case"Selu":return[Rh(DI("x",e,t,n))];case"Sigmoid":return[fl(DI("x",e,t,n))];case"Sin":return[Mh(DI("x",e,t,n))];case"Sign":return[Dh(DI("x",e,t,n))];case"Sinh":return[Lh(DI("x",e,t,n))];case"Softplus":return[kc(DI("x",e,t,n))];case"Sqrt":return[du(DI("x",e,t,n))];case"Square":return[fu(DI("x",e,t,n))];case"Tanh":return[gl(DI("x",e,t,n))];case"Tan":return[Jh(DI("x",e,t,n))];case"ClipByValue":return[$l(DI("x",e,t,n),DI("clipValueMin",e,t,n),DI("clipValueMax",e,t,n))];case"Relu6":return[Sh(DI("x",e,t,n))];case"Rsqrt":return[Ah(MI(e.inputNames[0],t,n))];case"Prod":return[hh(DI("x",e,t,n),DI("axes",e,t,n))];case"LeakyRelu":return[fc(DI("x",e,t,n),DI("alpha",e,t,n))];case"Prelu":return[ch(DI("x",e,t,n),DI("alpha",e,t,n))];case"IsNan":return[dc(MI(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=DI("thenBranch",e,t,n),a=DI("elseBranch",e,t,n),s=DI("cond",e,t,n),i=DI("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=DI("body",e,t,n),a=DI("cond",e,t,n),s=DI("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[VI(DI("pred",e,t,n))];case"Switch":{const r=DI("pred",e,t,n);let a=DI("data",e,t,n);return a.kept||(a=VI(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==MI(e,t,n)));return r?[VI(MI(r,t,n))]:void 0}case"Enter":{const r=DI("frameName",e,t,n),a=DI("tensor",e,t,n);return n.enterFrame(r),[VI(a)]}case"Exit":{const r=DI("tensor",e,t,n);return n.exitFrame(),[VI(r)]}case"NextIteration":{const r=DI("tensor",e,t,n);return n.nextIteration(),[VI(r)]}case"TensorArrayV3":{const r=DI("size",e,t,n),a=DI("dtype",e,t,n),s=DI("elementShape",e,t,n),i=DI("dynamicSize",e,t,n),o=DI("clearAfterRead",e,t,n),u=DI("identicalElementShapes",e,t,n),l=DI("name",e,t,n),c=new $S(l,a,r,s,u,i,o);return n.addTensorArray(c),[c.idTensor,Iu(1)]}case"TensorArrayWriteV3":{const r=DI("tensorArrayId",e,t,n),a=DI("index",e,t,n),s=DI("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=DI("tensorArrayId",e,t,n),a=DI("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=DI("tensorArrayId",e,t,n),a=DI("indices",e,t,n),s=DI("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=DI("tensorArrayId",e,t,n),a=DI("indices",e,t,n),s=DI("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=DI("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=DI("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=DI("tensorArrayId",e,t,n),a=DI("tensor",e,t,n),s=DI("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=DI("tensorArrayId",e,t,n);return[Iu(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=DI("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=DI("tensorListId",e,t,n),a=DI("index",e,t,n),s=DI("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=DI("tensorListId",e,t,n),a=DI("index",e,t,n),s=DI("elementShape",e,t,n),i=DI("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=DI("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new CS([],n,e.dtype,r),i=lp(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(DI("tensor",e,t,n),r,DI("elementShape",e,t,n),DI("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=DI("elementShape",e,t,n),a=DI("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new CS([],e,t,n)}(r,a,DI(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=DI("tensorListId",e,t,n),a=DI("indices",e,t,n),s=DI("elementShape",e,t,n),i=DI("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=DI("tensorListId",e,t,n),a=DI("elementShape",e,t,n),s=DI("elementDType",e,t,n),i=DI("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);IS(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=lp(e);return new CS(a,t,r)}(DI("tensor",e,t,n),DI("elementShape",e,t,n),DI("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=DI("tensorListId",e,t,n),a=n.getTensorList(r.id),s=DI("dtype",e,t,n),i=DI("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=DI("tensorListId",e,t,n),a=DI("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=DI("tensorListId",e,t,n),a=DI("elementShape",e,t,n),s=DI("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=DI("tensor",e,t,n),a=DI("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=TS(e.shape.slice(1),n),i=0===r?0:e.size/r,o=Yo((()=>{const n=[];e=cl(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],i];n[r]=cl(ml(e,o,u),s)}return e.dispose(),n})),u=new CS([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,DI("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return Yo((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=DI("stride",e,t,n),a=DI("pad",e,t,n),s=DI("dataFormat",e,t,n).toUpperCase(),i=DI("dilation",e,t,n);return[Fl(DI("x",e,t,n),DI("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=DI("strides",e,t,n),a=zI(e,t,n),s=DI("dataFormat",e,t,n).toUpperCase(),i=DI("dilations",e,t,n);return[Rl(DI("x",e,t,n),DI("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=ES(e,t,n);return[Ep({x:DI("x",e,t,n),filter:DI("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=ES(e,t,n);return[Rp({x:DI("x",e,t,n),filter:DI("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=DI("outputShape",e,t,n),a=DI("strides",e,t,n),s=zI(e,t,n);return[Dl(DI("x",e,t,n),DI("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=DI("strides",e,t,n),a=zI(e,t,n),s=DI("dilations",e,t,n),i=DI("dataFormat",e,t,n).toUpperCase();return[Hl(DI("input",e,t,n),DI("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=DI("strides",e,t,n),a=DI("pad",e,t,n),s=DI("dataFormat",e,t,n).toUpperCase(),i=DI("dilations",e,t,n);return[Ml(DI("x",e,t,n),DI("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=DI("strides",e,t,n),a=DI("pad",e,t,n),s=DI("kernelSize",e,t,n);return[hl(DI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=DI("strides",e,t,n),a=DI("pad",e,t,n),s=DI("kernelSize",e,t,n);return[zc(DI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=DI("strides",e,t,n),a=DI("pad",e,t,n),s=DI("kernelSize",e,t,n),i=DI("includeBatchInIndex",e,t,n),{result:o,indexes:u}=Wc(DI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=DI("strides",e,t,n),a=DI("pad",e,t,n),s=DI("kernelSize",e,t,n);return[pl(DI("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=DI("strides",e,t,n),a=DI("pad",e,t,n),s=DI("kernelSize",e,t,n);return[Vc(DI("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=DI("strides",e,t,n),a=DI("pad",e,t,n),s=DI("dilations",e,t,n),i=r[1],o=r[2],u=s[1],l=s[2];return[Kl(DI("x",e,t,n),DI("filter",e,t,n),[i,o],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return Yo((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=DI("shape",e,t,n),a=DI("dtype",e,t,n);return[Tu(r,DI("value",e,t,n),a)]}case"LinSpace":return[yc(DI("start",e,t,n),DI("stop",e,t,n),DI("num",e,t,n))];case"Multinomial":{const r=DI("logits",e,t,n),a=DI("numSamples",e,t,n),s=DI("seed",e,t,n);return[Jc(r,a,s)]}case"OneHot":{const r=DI("indices",e,t,n),a=DI("depth",e,t,n),s=DI("onValue",e,t,n),i=DI("offValue",e,t,n);return[Ki(r,a,s,i)]}case"Ones":return[Hc(DI("shape",e,t,n),DI("dtype",e,t,n))];case"OnesLike":return[th(DI("x",e,t,n))];case"RandomUniform":return[xh(DI("shape",e,t,n),DI("minval",e,t,n),DI("maxval",e,t,n),DI("dtype",e,t,n))];case"Range":return[vh(DI("start",e,t,n),DI("stop",e,t,n),DI("step",e,t,n),DI("dtype",e,t,n))];case"TruncatedNormal":{const r=DI("shape",e,t,n),a=DI("mean",e,t,n),s=DI("stdDev",e,t,n),i=DI("seed",e,t,n);return[ip(r,a,s,DI("dtype",e,t,n),i)]}case"Zeros":return[Gc(DI("shape",e,t,n),DI("dtype",e,t,n))];case"ZerosLike":return[mu(DI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=_S(e,t,n),l=await Cd.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=_S(e,t,n),u=DI("padToMaxOutputSize",e,t,n),l=await Cd.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=_S(e,t,n);return[await Cd.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=Ti(DI("condition",e,t,n),"bool"),a=[await pp(r)];return r.dispose(),a}case"ListDiff":return Oh(DI("x",e,t,n),DI("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return Yo((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=DI("x",e,t,n),a=DI("k",e,t,n),s=DI("sorted",e,t,n),i=sp(r,a,s);return[i.values,i.indices]}case"Unique":{const r=DI("x",e,t,n),a=op(r);return[a.values,a.indices]}case"UniqueV2":{const r=DI("x",e,t,n),a=DI("axis",e,t,n),s=op(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return Yo((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=DI("images",e,t,n),a=DI("size",e,t,n),s=DI("alignCorners",e,t,n),i=DI("halfPixelCenters",e,t,n);return[Cd.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=DI("images",e,t,n),a=DI("size",e,t,n),s=DI("alignCorners",e,t,n),i=DI("halfPixelCenters",e,t,n);return[Cd.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=DI("image",e,t,n),a=DI("boxes",e,t,n),s=DI("boxInd",e,t,n),i=DI("cropSize",e,t,n),o=DI("method",e,t,n),u=DI("extrapolationValue",e,t,n);return[Cd.cropAndResize(r,a,s,i,o,u)]}case"ImageProjectiveTransformV3":{const r=DI("images",e,t,n),a=DI("transforms",e,t,n),s=DI("outputShape",e,t,n),i=DI("fillValue",e,t,n),o=DI("interpolation",e,t,n),u=DI("fillMode",e,t,n);return[Cd.transform(r,a,o.toLowerCase(),u.toLowerCase(),i,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return Yo((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=DI("default",e,t,n);return[MI(e.name,t,n)||r];case"Placeholder":return[MI(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[VI(DI("x",e,t,n))];case"IdentityN":return DI("x",e,t,n).map((e=>VI(e)));case"Shape":return[ep(DI("x",e,t,n).shape,"int32")];case"ShapeN":return DI("x",e,t,n).map((e=>ep(e.shape)));case"Size":return[Iu(DI("x",e,t,n).size,"int32")];case"Rank":return[Iu(DI("x",e,t,n).rank,"int32")];case"NoOp":return[Iu(1)];case"Print":const a=DI("x",e,t,n),s=DI("data",e,t,n),i=DI("message",e,t,n),o=DI("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return Yo((()=>((e,t,n)=>{switch(e.op){case"Equal":return[ql(DI("a",e,t,n),DI("b",e,t,n))];case"NotEqual":return[eh(DI("a",e,t,n),DI("b",e,t,n))];case"Greater":return[uc(DI("a",e,t,n),DI("b",e,t,n))];case"GreaterEqual":return[lc(DI("a",e,t,n),DI("b",e,t,n))];case"Less":return[mc(DI("a",e,t,n),DI("b",e,t,n))];case"LessEqual":return[gc(DI("a",e,t,n),DI("b",e,t,n))];case"LogicalAnd":return[Mc(DI("a",e,t,n),DI("b",e,t,n))];case"LogicalNot":return[Lc(DI("a",e,t,n))];case"LogicalOr":return[Pc(DI("a",e,t,n),DI("b",e,t,n))];case"Select":case"SelectV2":return[Xl(DI("condition",e,t,n),DI("a",e,t,n),DI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return Yo((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ji(DI("a",e,t,n),DI("b",e,t,n),DI("transposeA",e,t,n),DI("transposeB",e,t,n))];case"Einsum":return[Zl(DI("equation",e,t,n),...DI("tensors",e,t,n))];case"Transpose":return[qi(DI("x",e,t,n),DI("perm",e,t,n))];case"_FusedMatMul":const[r,a]=DI("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=DI("numArgs",e,t,n),u=DI("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=DI("args",e,t,n);return[Fp({a:DI("a",e,t,n),b:DI("b",e,t,n),transposeA:DI("transposeA",e,t,n),transposeB:DI("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return Yo((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[xl(DI("x",e,t,n),DI("mean",e,t,n),DI("variance",e,t,n),DI("offset",e,t,n),DI("scale",e,t,n),DI("epsilon",e,t,n))];case"LRN":return[bc(DI("x",e,t,n),DI("radius",e,t,n),DI("bias",e,t,n),DI("alpha",e,t,n),DI("beta",e,t,n))];case"Softmax":return[Wh(DI("x",e,t,n))];case"LogSoftmax":return[Tc(DI("x",e,t,n))];case"SparseToDense":return[bp(DI("sparseIndices",e,t,n),DI("outputShape",e,t,n),DI("sparseValues",e,t,n),DI("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return Yo((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=DI("axis",e,t,n),a=DI("keepDims",e,t,n);return[Sc(DI("x",e,t,n),r,a)]}case"Mean":{const r=DI("axis",e,t,n),a=DI("keepDims",e,t,n);return[Uc(DI("x",e,t,n),r,a)]}case"Min":{const r=DI("axis",e,t,n),a=DI("keepDims",e,t,n);return[Kc(DI("x",e,t,n),r,a)]}case"Sum":{const r=DI("axis",e,t,n),a=DI("keepDims",e,t,n);return[Nc(DI("x",e,t,n),r,a)]}case"All":{const r=DI("axis",e,t,n),a=DI("keepDims",e,t,n);return[Vu(DI("x",e,t,n),r,a)]}case"Any":{const r=DI("axis",e,t,n),a=DI("keepDims",e,t,n);return[Wu(DI("x",e,t,n),r,a)]}case"ArgMax":{const r=DI("axis",e,t,n);return[Uu(DI("x",e,t,n),r)]}case"ArgMin":{const r=DI("axis",e,t,n);return[Gu(DI("x",e,t,n),r)]}case"Prod":{const r=DI("axis",e,t,n),a=DI("keepDims",e,t,n);return[hh(DI("x",e,t,n),r,a)]}case"Cumprod":{const r=DI("axis",e,t,n),a=DI("exclusive",e,t,n),s=DI("reverse",e,t,n);return[Vl(DI("x",e,t,n),r,a,s)]}case"Cumsum":{const r=DI("axis",e,t,n),a=DI("exclusive",e,t,n),s=DI("reverse",e,t,n);return[Wl(DI("x",e,t,n),r,a,s)]}case"Bincount":const r=DI("x",e,t,n),a=DI("weights",e,t,n),s=DI("size",e,t,n);return[Il(r,a,s)];case"DenseBincount":{const r=DI("x",e,t,n),a=DI("weights",e,t,n),s=DI("size",e,t,n),i=DI("binaryOutput",e,t,n);return[Ul(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return Yo((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=DI("n",e,t,n),a=DI("axis",e,t,n);let s=DI("tensors",e,t,n);return s=s.slice(0,r),[dl(s,a)]}case"Gather":{const r=DI("x",e,t,n),a=DI("indices",e,t,n);return[oc(r,Ti(a,"int32"),0)]}case"GatherV2":{const r=DI("axis",e,t,n),a=DI("batchDims",e,t,n),s=DI("x",e,t,n),i=DI("indices",e,t,n);return[oc(s,Ti(i,"int32"),r,a)]}case"Reverse":{const r=DI("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=DI("x",e,t,n);return[Nh(s,a)]}case"ReverseV2":{const r=DI("axis",e,t,n),a=DI("x",e,t,n);return[Nh(a,r)]}case"Slice":{const r=DI("begin",e,t,n),a=DI("size",e,t,n);return[ml(DI("x",e,t,n),r,a)]}case"StridedSlice":{const r=DI("begin",e,t,n),a=DI("end",e,t,n),s=DI("strides",e,t,n),i=DI("beginMask",e,t,n),o=DI("endMask",e,t,n),u=DI("ellipsisMask",e,t,n),l=DI("newAxisMask",e,t,n),c=DI("shrinkAxisMask",e,t,n),h=DI("x",e,t,n);return[Zh(h,r,a,s,i,o,u,l,c)]}case"Pack":return Yo((()=>{const r=DI("axis",e,t,n),a=DI("tensors",e,t,n),s=a[0].shape,i=Xh(a[0]).shape,o=a.map((e=>{const t=le(e.shape,s);if(!t&&!le(Xh(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:cl(e,s)}));return[Yh(o,r)]}));case"Unpack":{const r=DI("axis",e,t,n),a=DI("tensor",e,t,n);return lp(a,r)}case"Tile":{const r=DI("reps",e,t,n);return[ac(DI("x",e,t,n),r)]}case"Split":case"SplitV":{const r=DI("axis",e,t,n),a=DI("numOrSizeSplits",e,t,n),s=DI("x",e,t,n);return jh(s,a,r)}case"ScatterNd":{const r=DI("indices",e,t,n),a=DI("values",e,t,n),s=DI("shape",e,t,n);return[yp(r,a,s)]}case"GatherNd":{const r=DI("x",e,t,n),a=DI("indices",e,t,n);return[xp(r,a)]}case"SparseToDense":{const r=DI("sparseIndices",e,t,n),a=DI("outputShape",e,t,n),s=DI("sparseValues",e,t,n),i=DI("defaultValue",e,t,n);return[bp(r,s,a,s.dtype===i.dtype?i:Ti(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return Yo((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=Ad.sparseFillEmptyRows(DI("indices",e,t,n),DI("values",e,t,n),DI("denseShape",e,t,n),DI("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=Ad.sparseReshape(DI("inputIndices",e,t,n),DI("inputShape",e,t,n),DI("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[Ad.sparseSegmentMean(DI("data",e,t,n),DI("indices",e,t,n),DI("segmentIds",e,t,n))];case"SparseSegmentSum":return[Ad.sparseSegmentSum(DI("data",e,t,n),DI("indices",e,t,n),DI("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return Yo((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Uh(DI("x",e,t,n))];case"IFFT":return[Gh(DI("x",e,t,n))];case"RFFT":return[Kh(DI("x",e,t,n))];case"IRFFT":return[Hh(DI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return Yo((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=Rd.stringNGrams(DI("data",e,t,n),DI("dataSplits",e,t,n),DI("separator",e,t,n),DI("nGramWidths",e,t,n),DI("leftPad",e,t,n),DI("rightPad",e,t,n),DI("padWidth",e,t,n),DI("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=Rd.stringSplit(DI("input",e,t,n),DI("delimiter",e,t,n),DI("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[Rd.stringToHashBucketFast(DI("input",e,t,n),DI("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return Yo((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Ti(DI("x",e,t,n),DI("dtype",e,t,n))];case"ExpandDims":{const r=DI("axis",e,t,n);return[nc(DI("x",e,t,n),r)]}case"Squeeze":{const r=DI("axis",e,t,n);return[Xh(DI("x",e,t,n),r)]}case"Reshape":return[cl(DI("x",e,t,n),DI("shape",e,t,n))];case"MirrorPad":return[Xc(DI("x",e,t,n),DI("padding",e,t,n),DI("mode",e,t,n))];case"PadV2":case"Pad":return[rh(DI("x",e,t,n),DI("padding",e,t,n),DI("constantValue",e,t,n))];case"SpaceToBatchND":{const r=DI("blockShape",e,t,n),a=DI("paddings",e,t,n);return[uh(DI("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=DI("blockShape",e,t,n),a=DI("crops",e,t,n);return[bl(DI("x",e,t,n),r,a)]}case"DepthToSpace":{const r=DI("blockSize",e,t,n),a=DI("dataFormat",e,t,n).toUpperCase();return[Gl(DI("x",e,t,n),r,a)]}case"BroadcastTo":return[Nl(DI("x",e,t,n),DI("shape",e,t,n))];case"BroadcastArgs":return[Sl(DI("s0",e,t,n),DI("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=DI("keyDType",e,t,n),s=DI("valueDType",e,t,n),i=new AS(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=DI("tableHandle",e,t,n,r),s=DI("keys",e,t,n),i=DI("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=DI("tableHandle",e,t,n,r),s=DI("keys",e,t,n),i=DI("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=DI("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=FI(e.op);if(a&&a.customExecutor)return a.customExecutor(new kS(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return We(a)?a.then((e=>[].concat(e))):[].concat(a)}class FS{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function OS(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>BI(e)[0]));let c=[];null!=r&&(c=r.map((e=>BI(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(PS(e)||BS(e)||zS(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const DS=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],MS=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],LS=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function PS(e){return DS.indexOf(e.op)>=0}function BS(e){return MS.indexOf(e.op)>=0}function zS(e){return LS.indexOf(e.op)>=0}class VS{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new VS(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=OS(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>BI(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[BI(e)[0]])),a=t.map((e=>BI(e)[0]));let s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return Yo((()=>{const n=new FS(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=BI(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=RS(t,r,n,this._resourceManager);if(We(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>MI(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const s=function(e,t,n){return t[PI(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const n=i[e.id];if(1===n){if(this.keepTensorForDebug){const[n,a]=LI(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=He().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const s=new FS(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);const i=t.map((e=>MI(e,this.tensorsMap,s))),o=i.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[BI(e)[0]])),i=n.map((e=>BI(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=OS(e,o,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=BI(t),a=[];a[r]=e[t],d[n]=a}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(s,p,t,d,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!PS(e)&&!MI(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,a,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&DI("isConstant",e.node,r,n)&&([c]=LI(e.node.name,n)),null==r[e.node.name]){const h=RS(e.node,r,n,this._resourceManager);c||([c]=LI(e.node.name,n));const p=n.currentContext;We(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=LI(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!MI(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!MI(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=BI(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value;re(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&re(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=BI(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=BI(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class WS{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class US{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new WS}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Vi(e,this.loadOptions);else{const t=Ks(e,this.loadOptions);if(0===t.length)t.push(Vi(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=Fs(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new VS(oS.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=oS.Instance.transformGraph(e.modelInitializer);this.initializer=new VS(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=js(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof qa||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function GS(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new US(e,t);return await n.load(),n}const HS="3.15.0";function jS(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(QS(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=jS(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function KS(e,t=XS){return qS(e,t)}function qS(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(QS(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=qS(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function XS(e){return null===e?null:QS(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function YS(e,t){const n=new Map;jS(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(We(t)){const r=await t;n.set(e,r)}}return jS(e,t,n)}function QS(e){let t=!1;if(He().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(6401);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof qa)&&!(e instanceof Promise)&&!t)}function ZS(e){return e instanceof qa?{value:e.clone(),recurse:!1}:QS(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class JS{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class eN extends JS{constructor(){super(eN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function tN(e){return new aN(e)}function nN(e){return new sN(e)}eN.INITIAL_CAPACITY=32;class rN{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new pN(this,e)}filter(e){return new cN(this,e)}map(e){return new hN(this,e)}mapAsync(e){return new dN(this,e)}serialMapAsync(e){return new dN(this,e).serial()}flatmap(e){return new mN(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new lN(this,e,t)}columnMajorBatch(e,t=!0,n=XS){return this.rowMajorBatch(e,t).map((e=>KS(e,n)))}concatenate(e,t){return new gN(tN([this,e]),t)}take(e){return e<0||null==e?this:new uN(this,e)}skip(e){return e<0||null==e?this:new oN(this,e)}prefetch(e){return new xN(this,e)}shuffle(e,t){return new vN(this,e,t)}serial(){return new iN(this)}}class aN extends rN{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return jS(e,t)}(t,ZS)),done:!1};var t}}class sN extends rN{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class iN extends rN{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class oN extends rN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Qo(e.value)}return this.upstream.next()}}class uN extends rN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class lN extends rN{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class cN extends rN{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Qo(e.value)}}}class hN extends rN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=us(e.value),n=this.transform(e.value),r=us(n);for(const e of t)os(e,r)||e.dispose();return{value:n,done:!1}}}class pN extends rN{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class dN extends rN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=us(e.value),n=await this.transform(e.value),r=us(n);for(const e of t)os(e,r)||e.dispose();return{value:n,done:!1}}}class fN extends rN{constructor(){super(),this.outputQueue=new eN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class mN extends fN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=us(e.value),n=this.transform(e.value),r=us(n);this.outputQueue.pushAll(n);for(const e of t)os(e,r)||e.dispose();return!0}}class gN extends rN{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var yN;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(yN||(yN={}));class bN extends rN{constructor(e,t=yN.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await YS(this.iterators,(function(e){return e instanceof rN?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case yN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case yN.SHORTEST:return{value:null,done:!0};case yN.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class xN extends rN{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new JS(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class vN extends xN{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=dh.alea(n||Ra().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class wN{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return re(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),kN((async()=>(await n.iterator()).columnMajorBatch(e,t,NN)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,kN((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,kN((async()=>(await t.iterator()).filter((t=>Yo((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return kN((async()=>(await t.iterator()).map((t=>Yo((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return kN((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return kN((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,kN((async()=>{return n=nN((async()=>({value:await t.iterator(),done:!1}))).take(e),new gN(n,r);var n,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,kN((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=dh.alea(t||Ra().toString());return kN((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,kN((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function kN(e,t=null){return new class extends wN{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function IN(e){return kN((async()=>tN(e)),e.length)}function SN(e){if(!QS(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return kN((async()=>function(e,t=yN.FAIL){return new bN(e,t)}(await YS(e,(e=>{if(e instanceof wN)return{value:e.iterator(),recurse:!1};if(QS(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),yN.SHORTEST)),t)}function NN(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof qa||Se(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof qa?Yh(e):_s(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}wN.MAX_BUFFER_SIZE=1e4;class TN extends wN{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const $N='"',CN=Symbol("out"),EN=Symbol("field"),_N=Symbol("quote"),AN=Symbol("quoteafterquote"),RN=Symbol("quoteinquote");class FN extends wN{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new TN(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(re(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&re(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(re(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o)}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const a=e.length;let s=CN;for(let t=0;t<a;t++)switch(s){case CN:switch(e.charAt(t)){case $N:r=t+1,s=_N;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=CN;break;default:s=EN,r=t}break;case EN:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),s=CN,r=t+1);break;case _N:e.charAt(t)===$N&&(s=AN);break;case AN:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=CN,r=t+1;break;case $N:s=_N;break;default:s=RN}break;case RN:e.charAt(t)===$N&&(s=_N)}if(s===AN?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class ON extends rN{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!He().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new ON(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(oe(t));return n.set(e,n.length-e.length),_s(n,t)}}class DN extends rN{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=ep([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=tp([r,n,s,a],[1,4])}else this.cropBox=tp([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!He().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new DN(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&re("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=ao(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Yo((()=>{const t=nc(Ti(e,"float32"),0);let n;n=Cd.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return cl(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class MN{}class LN extends rN{split(e){return new PN(this,e)}}class PN extends LN{constructor(e,t){super(),this.upstream=e,this.impl=new BN(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class BN extends fN{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class zN extends rN{decodeUTF8(){return new VN(this)}}class VN extends LN{constructor(e){super(),this.upstream=e,this.impl=new WN(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class WN extends fN{constructor(e){if(super(),this.upstream=e,He().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(6759);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=He().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class UN extends zN{constructor(e,t={}){super(),this.file=e,this.options=t,re(e instanceof Uint8Array||!!He().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}));return{value:await e,done:!1}}}function GN(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class HN extends MN{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(GN(this.input)&&He().get("IS_NODE")){const e=n(549);this.input=e.readFileSync(this.input.substr(7))}return new UN(this.input,this.options)}}class jN extends MN{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return GN(this.url)?new HN(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,a;var s;"string"==typeof e?r=e:(r=e.url,a={method:(s=e).method,headers:s.headers,body:s.body,mode:s.mode,credentials:s.credentials,cache:s.cache,redirect:s.redirect,referrer:s.referrer,integrity:s.integrity});const i=await(n||Fa)(r,a);if(i.ok){const e=new Uint8Array(await i.arrayBuffer());return new UN(e,t)}throw new Error(i.statusText)}(this.url,this.fileOptions)}}function KN(e,t={}){return new FN(new jN(e),t)}function qN(e){const t=nN(e);return kN((async()=>t))}function XN(e){return kN((async()=>{const t=await e();return nN((()=>t.next()))}))}async function YN(e,t){return DN.create(e,t)}async function QN(e){return ON.create(e)}const ZN="3.15.0";function JN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&re("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const eT=hp;class tT extends K{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new j(this,Ko())}nextDataId(){return tT.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,He().get("IS_NODE")&&ra("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&$e(n[0])){const a=n.map((e=>Oa(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?ef(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Da(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ni(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Ko().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ra();return e(),{kernelMs:Ra()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){JN([e],"where");const t=this.readSync(e.dataId);return eT(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function nT(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(JN(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=oe(i.shape),c=n||i.dtype,h=ve(c,l);for(let e=0;e<l;++e)h[e]=t(u[e],a);return o.makeTensorInfo(i.shape,c,h)}}function rT(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(JN(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,a);return o.makeTensorInfo(i.shape,l,c)}}tT.nextDataId=0,iu("cpu",(()=>new tT),1);const aT=nT(Kt,(e=>e>=0?e:Math.exp(e)-1)),sT={kernelName:Kt,backendName:"cpu",kernelFunc:aT};function iT(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const oT={kernelName:hn,backendName:"cpu",kernelFunc:iT};function uT(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;JN([a],"leakyRelu");const i=oe(a.shape),o=n.data.get(a.dataId).values,u=xe("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}const lT={kernelName:yn,backendName:"cpu",kernelFunc:uT};function cT(e){return(t,n,r,a,s)=>{const i=Zi(t,n),o=i.length,u=Fe(i),l=xe(s,oe(i)),c=t.length,h=n.length,p=Fe(t),d=Fe(n),f=Yi(t,i),m=Yi(n,i);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<l.length;++t){const n=Ve(t,o,u),s=n.slice(-c);f.forEach((e=>s[e]=0));const i=ze(s,c,p),g=n.slice(-h);m.forEach((e=>g[e]=0));const y=ze(g,h,d);l[t]=e(r[i],a[y])}return[l,i]}}const hT=cT(((e,t)=>e<0?t*e:e));function pT(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;JN([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=hT(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(u,"float32",o)}const dT={kernelName:er,backendName:"cpu",kernelFunc:pT},fT=nT(sr,(e=>Math.max(0,e))),mT={kernelName:sr,backendName:"cpu",kernelFunc:fT},gT=nT(hr,(e=>Math.min(Math.max(0,e),6))),yT={kernelName:hr,backendName:"cpu",kernelFunc:gT};function bT(e){return(t,n,r)=>{const a=xe(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}const xT=bT((e=>1/(1+Math.exp(-e)))),vT=nT(kr,(e=>1/(1+Math.exp(-e)))),wT={kernelName:kr,backendName:"cpu",kernelFunc:vT};function kT(e,t,n,r,a){if("linear"===n)return iT({inputs:{x:t},backend:e});if("relu"===n)return fT({inputs:{x:t},backend:e});if("elu"===n)return aT({inputs:{x:t},backend:e});if("relu6"===n)return gT({inputs:{x:t},backend:e});if("prelu"===n)return pT({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return uT({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return vT({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function IT(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const ST={kernelName:kt,backendName:"cpu",kernelFunc:IT};function NT(e,t,n="float32"){if("complex64"===n)return IT({inputs:{real:NT(e,t,"float32"),imag:NT(e,t,"float32")},backend:e});const r=Le(oe(t),n);return e.makeTensorInfo(t,n,r)}function TT(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const $T={kernelName:rr,backendName:"cpu",kernelFunc:TT};function CT(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return iT({inputs:{x:a},backend:n});const e=NT(n,a.shape,a.dtype),t=CT({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=IT({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=TT({inputs:{input:a},backend:n}),t=CT({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Ie(a.dtype,s)){const e=iT({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=Aa([0],a.dtype),[r,s]=cT(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}const ET={kernelName:xt,backendName:"cpu",kernelFunc:CT};function _T(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;JN([s,i],e);const u=o.data.get(s.dataId).values,l=o.data.get(i.dataId).values,c="string"===s.dtype?Rf(u):u,h="string"===s.dtype?Rf(l):l,p=r||s.dtype,[d,f]=t(s.shape,i.shape,c,h,p);return o.makeTensorInfo(f,p,d)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=CT({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(a.dataId).values,c=CT({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(s.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=IT({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function AT(e){return(t,n,r,a,s,i)=>{const o=Zi(t,n),u=oe(o),l=o.length,c=Fe(o),h=xe("float32",u),p=xe("float32",u),d=Yi(t,o),f=Yi(n,o),m=ef(r,a),g=ef(s,i),y=t.length,b=Fe(t),x=n.length,v=Fe(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,p[t]=a.imag}else for(let t=0;t<h.length;t++){const n=Ve(t,l,c),r=n.slice(-y);d.forEach((e=>r[e]=0));const a=ze(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));const i=ze(s,x,v),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const RT=cT(((e,t)=>e+t)),FT=AT(((e,t,n,r)=>({real:e+n,imag:t+r}))),OT=_T(Je,RT,FT),DT={kernelName:Je,backendName:"cpu",kernelFunc:OT};function MT(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=oe(a.shape),o=ge(s,i),u=oe(o);re(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const LT={kernelName:ir,backendName:"cpu",kernelFunc:MT};function PT(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;JN([a,s],"matMul");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[l-1]:s.shape[l-2],p=i?a.shape[u-1]:a.shape[u-2],d=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=oe(f),y=oe(m),b=Zi(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,d]);re(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],v=MT({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),w=MT({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],I=i?v.shape[2]:v.shape[1],S=o?w.shape[1]:w.shape[2],N=Math.max(g,y),T=n.data.get(v.dataId).values,$=n.data.get(w.dataId).values,C=Fe(v.shape),E=Fe(w.shape),[_,A,R]=i?[C[0],1,C[1]]:[C[0],C[1],1],[F,O,D]=o?[1,E[1],E[0]]:[E[1],1,E[0]],M=I*S,L=Ni([N,I,S],v.dtype),P=L.values,B=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=B)for(let n=0;n<S;n+=B)for(let r=0;r<k;r+=B){const a=Math.min(t+B,I),s=Math.min(n+B,S),i=Math.min(r+B,k);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,g-1)*_,s=Math.min(e,y-1)*D;n+=T[r+o*A+a*R]*$[a*F+t*O+s]}P[e*M+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}const BT={kernelName:ft,backendName:"cpu",kernelFunc:PT},zT={kernelName:ea,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=PT({inputs:{a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(d=OT({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=kT(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};function VT(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const WT={kernelName:Ye,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;JN(t,"abs");let r=new Float32Array(oe(t.shape));return r=VT(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},UT=nT(Qe,(e=>Math.acos(e))),GT={kernelName:Qe,backendName:"cpu",kernelFunc:UT},HT=nT(Ze,(e=>Math.acosh(e))),jT={kernelName:Ze,backendName:"cpu",kernelFunc:HT},KT={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;JN(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),s=Ni(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function qT(e,t,n,r,a){const s=t.length,i=oe(t),o=Fe(t),u=Fe(a),l=xe(n,oe(a));for(let t=0;t<i;++t){const n=Ve(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[ze(a,s,u)]=e[t]}return l}function XT(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;JN(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const u=qT(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const YT={kernelName:jr,backendName:"cpu",kernelFunc:XT},QT={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;JN(a,"all");const o=ye(s,a.shape);let u=o;const l=Rc(u,a.shape.length);let c=a;null!=l&&(c=XT({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Oc(u.length,a.shape.length)),Ac("all",u,c.shape.length);const[h,p]=Ec(c.shape,u),d=oe(p),f=Le(oe(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=MT({inputs:{x:g},backend:n,attrs:{shape:_c(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},ZT={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;JN(a,"any");const o=ye(s,a.shape);let u=o;const l=Rc(u,a.shape.length);let c=a;null!=l&&(c=XT({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Oc(u.length,a.shape.length)),Ac("any",u,c.shape.length);const[h,p]=Ec(c.shape,u),d=oe(p),f=Le(oe(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=MT({inputs:{x:g},backend:n,attrs:{shape:_c(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},JT={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;JN(a,"argMax");let i=ye(s,a.shape);const o=Rc(i,a.shape.length);let u=a;const l=[];null!=o&&(u=XT({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Oc(i.length,u.shape.length)),i=[i[0]],Ac("argMax",i,u.shape.length);const[c,h]=Ec(u.shape,i),p=Le(oe(c),"int32"),d=oe(h),f=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const a=f[t+e];a>n&&(n=a,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},e$={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;JN(a,"argMin");let i=ye(s,a.shape);const o=Rc(i,a.shape.length);let u=a;const l=[];null!=o&&(u=XT({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Oc(i.length,u.shape.length)),i=[i[0]],Ac("argMin",i,u.shape.length);const[c,h]=Ec(u.shape,i),p=Le(oe(c),"int32"),d=oe(h),f=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const a=f[t+e];a<n&&(n=a,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},t$=nT(st,(e=>Math.asin(e))),n$={kernelName:st,backendName:"cpu",kernelFunc:t$},r$=nT(it,(e=>Math.asinh(e))),a$={kernelName:it,backendName:"cpu",kernelFunc:r$},s$=nT(ot,(e=>Math.atan(e))),i$={kernelName:ot,backendName:"cpu",kernelFunc:s$},o$=cT(((e,t)=>Math.atan2(e,t))),u$=_T(lt,o$),l$={kernelName:lt,backendName:"cpu",kernelFunc:u$},c$=nT(ut,(e=>Math.atanh(e))),h$={kernelName:ut,backendName:"cpu",kernelFunc:c$};function p$(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,d=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ni(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){const v=y*i-p,w=Math.max(0,v),k=Math.min(a.inHeight,c+v),I=n+y*b;for(let n=0;n<a.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(a.inWidth,h+i);let y=f,b=0,v=0;for(let n=w;n<k;n+=u){const a=m+n*r[1];for(let n=c;n<p;n+=l){const i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/v:y}}}return m}function d$(e,t,n,r,a=!1,s=!1){const i=Ni(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=Ni(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=d;o<x;o+=c){const u=o-h,l=m.get(e,n,o,t);l>v&&(v=l,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+u)}}i.set(w,e,n,o,t)}}return i}function f$(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,h=a.dilationWidth,p=a.effectiveFilterDepth,d=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ni(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){const N=w*i-m;let T=N;for(;T<0;)T+=l;const $=Math.min(a.inDepth,p+N),C=n+w*k;for(let n=0;n<a.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(a.inHeight,d+i),w=C+n*I;for(let n=0;n<a.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=h;const d=Math.min(a.inWidth,f+i),g=w+n*S;let k=b,I=0,N=0;for(let n=T;n<$;n+=l){const a=x+n*r[1];for(let n=p;n<m;n+=c){const i=a+n*r[2];for(let n=o;n<d;n+=h){const a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===s?I/N:k}}}}return x}const m$={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;JN(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;re(ol(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Qu(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&le(l.inShape,l.outShape))c=iT({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=Fe(a.shape),r=p$(e,a.shape,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},g$={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;JN(a,"avgPool3d");const c=Zu(a.shape,s,i,1,o,u,l),h=f$(n.data.get(a.dataId).values,a.shape,a.dtype,Fe(a.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},y$={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;JN([a,s],"avgPool3DGrad");const c=Zu(s.shape,i,o,1,u,l),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,S=k-1-c.padInfo.left,N=w-1-c.padInfo.top,T=Ni(s.shape,"float32"),$=1/(f*m*g),C=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-I,i=r-N,o=a-S;let u=0;for(let n=0;n<v;n+=y){const r=(s+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){const a=(i+n)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){const s=(o+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(u+=C.get(e,r,a,s,t))}}}T.set(u*$,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},b$={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;JN([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Qu(i.shape,o,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=Ni(i.shape,"float32"),k=1/(d*f),I=n.data.get(a.dataId).values,S=Ni(a.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-v,s=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(a+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const a=(s+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(i+=S.get(e,r,a,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},x$={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;re(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),re(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),re(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),JN([a,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,d=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let v=0,w=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[v++]+(c[e]-h[w++])*d[k++]/Math.sqrt(p[I++]+l),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};function v$(e,t,n,r,a){const s=ko(r,t,n),i=oe(n),o=Fe(r);if(s){const n=Io(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=Ni(r,a,"string"===a?Rf(e):e),l=Ni(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===a?Ff(l.values):l.values}function w$(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;JN(a,"slice");const[o,u]=So(a,s,i);lo(a,o,u);const l=v$(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}const k$={kernelName:br,backendName:"cpu",kernelFunc:w$},I$={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;JN([a],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),u=Vd(a.shape,s,o),l=Wd(u.length,s.length),c=Ud(a.shape,s,o),h=Gd(i,s.length),p=Hd(c,i,s.length),d=MT({inputs:{x:a},backend:n,attrs:{shape:u}}),f=XT({inputs:{x:d},backend:n,attrs:{perm:l}}),m=MT({inputs:{x:f},backend:n,attrs:{shape:c}}),g=w$({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function S$(e,t,n,r,a){const s=oe(r),i=Le(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function N$(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],i=Ni([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}const T$={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=S$(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},$$={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=Zi(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},C$=bT((e=>Math.ceil(e))),E$=rT(vt,C$),_$={kernelName:vt,backendName:"cpu",kernelFunc:E$},A$=nT(wt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),R$={kernelName:wt,backendName:"cpu",kernelFunc:A$},F$={kernelName:It,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(oe(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function O$(e,t,n,r){const a=ve(n,oe(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=oe(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?Rf(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}function D$(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const M$={kernelName:dn,backendName:"cpu",kernelFunc:D$};function L$(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ye(a,t[0].shape)[0];let i=Ld(t.map((e=>e.shape)),s);if(0===oe(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>oe(e.shape)>0));if(1===o.length)return iT({inputs:{x:o[0]},backend:n});if(Md(o.map((e=>e.shape)),s),"complex64"===o[0].dtype){const e=o.map((e=>TT({inputs:{input:e},backend:n}))),t=o.map((e=>D$({inputs:{input:e},backend:n}))),r=L$({inputs:e,backend:n,attrs:{axis:s}}),a=L$({inputs:t,backend:n,attrs:{axis:s}}),i=IT({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const u=o.map((e=>{const t=oe(e.shape.slice(s));return MT({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Ld(u.map((e=>e.shape)),1);const c=1===u[0].shape[0],h=O$(l,i,t[0].dtype,c),p=Ld(o.map((e=>e.shape)),s),d=n.makeTensorInfo(p,t[0].dtype,h);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const P$={kernelName:St,backendName:"cpu",kernelFunc:L$};function B$(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;JN([a,s],"conv2d");const h=ul(u),p=Ju(a.shape,s.shape,i,l,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,v=new Ga(p.outShape,a.dtype),w=Fe(a.shape),k=Fe(s.shape),I=w[0],S=x?w[1]:w[2],N=x?w[2]:1,T=x?1:w[1],$=v.strides[0],C=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,_=x?1:v.strides[1],A=n.data.get(a.dataId).values,R=n.data.get(s.dataId).values,F=v.values;for(let e=0;e<p.batchSize;++e){const t=e*I,n=e*$;for(let e=0;e<p.outHeight;++e){const r=n+e*C,a=e*p.strideHeight-b;for(let e=0;e<d;++e){const n=a+e*m;if(n<0||n>=p.inHeight)continue;const s=e*k[0],i=t+n*S;for(let e=0;e<p.outWidth;++e){const t=r+e*E,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const a=i+r*N;let o=s+e*k[1];for(let e=0;e<p.inChannels;++e){const n=A[a+e*T];for(let e=0;e<p.outChannels;++e)F[t+e*_]+=n*R[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const z$={kernelName:Nt,backendName:"cpu",kernelFunc:B$},V$={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;JN([a,s],"conv2dBackpropFilter");const h=ul(u),p=Ju(a.shape,c,i,1,o,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new Ga(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new Ga(a.shape,a.dtype,w),S=new Ga(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/d)),n=Math.min(p.outHeight,(p.inHeight+v-e)/d);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let l=0;l<p.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-v;for(let e=a;e<s;++e){const n=r+e*f-x;u+=y?I.get(l,t,n,i)*S.get(l,c,e,o):I.get(l,i,t,n)*S.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},W$={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;JN([a,s],"conv2dBackpropInput");const h=Fe(s.shape),p=Fe(a.shape);let d=ul(l);const f=Ju(i,s.shape,o,1,u,c,!1,d),m=new Ga(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:$,outChannels:C,outHeight:E,outWidth:_,strideHeight:A,strideWidth:R}=f;d=f.dataFormat;const F=I-1-f.padInfo.top,O=S-1-f.padInfo.left,D="channelsLast"===d,M=m.strides[0],L=D?m.strides[1]:m.strides[2],P=D?m.strides[2]:1,B=D?1:m.strides[1],z=p[0],V=D?p[1]:p[2],W=D?p[2]:1,U=D?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){const r=n-F,a=Math.max(0,Math.ceil(r/A)),s=Math.min(E,(I+r)/A);for(let i=0;i<$;++i){const o=i-O,u=Math.max(0,Math.ceil(o/R)),l=Math.min(_,(S+o)/R);let c=0;for(let n=a;n<s;++n){const a=n*A-r;for(let r=u;r<l;++r){const s=z*e+V*n+W*r,i=x*(I-1-a)+v*(S-1-(r*R-o))+w*t;for(let e=0;e<C;++e)c+=y[s+U*e]*b[i+e]}}g[M*e+L*n+P*i+B*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},U$={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;JN([a,s],"conv3d");const l=el(a.shape,s.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,v=new Ga(l.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=v.values,S=Fe(a.shape),N=Fe(s.shape);for(let e=0;e<l.batchSize;++e){const t=e*S[0],n=e*v.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*v.strides[1],a=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=a+e*d;if(n<0||n>=l.inDepth)continue;const s=e*N[0],i=t+n*S[1];for(let e=0;e<l.outHeight;++e){const t=r+e*v.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=s+e*N[1],o=i+r*S[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const s=a+e*N[2],i=o+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=w[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},G$={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;JN([a,s],"conv3dBackpropFilterV2");const l=Fe(a.shape),c=Fe(s.shape),h=el(a.shape,u,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Ga(h.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,$,C]=c,E=n.data.get(a.dataId).values,[_,A,R,F]=l,O=h.padInfo.front,D=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((O-e)/p)),n=Math.min(h.outDepth,(h.inDepth+O-e)/p),r=e*v;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((M-a)/d)),i=Math.min(h.outHeight,(h.inHeight+M-a)/d),o=a*w+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((D-r)/f)),l=Math.min(h.outWidth,(h.inWidth+D-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*_,y=m*N;for(let m=t;m<n;++m){const t=(e+m*p-O)*A+h,n=m*T+y;for(let e=s;e<i;++e){const s=(a+e*d-M)*R+t,i=e*$+n;for(let e=u;e<l;++e){const t=e*C+i;g+=E[(r+e*f-D)*F+s+o]*S[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},H$={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;JN([a],"conv3dBackpropInputV2");const l=Fe(a.shape),c=Fe(s.shape),h=el(u,s.shape,o,1,i),p=new Ga(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(a.dataId).values,[x,v,w,k]=l,I=n.data.get(s.dataId).values,[S,N,T,$]=c,{batchSize:C,filterDepth:E,filterHeight:_,filterWidth:A,inChannels:R,inDepth:F,inHeight:O,inWidth:D,outChannels:M,outDepth:L,outHeight:P,outWidth:B,strideDepth:z,strideHeight:V,strideWidth:W}=h,U=E-1-h.padInfo.front,G=_-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<R;++t)for(let n=0;n<F;++n){const r=n-U,a=Math.max(0,Math.ceil(r/z)),s=Math.min(L,(E+r)/z);for(let i=0;i<O;++i){const o=i-G,u=Math.max(0,Math.ceil(o/V)),l=Math.min(P,(_+o)/V);for(let c=0;c<D;++c){const h=c-H,p=Math.max(0,Math.ceil(h/W)),C=Math.min(B,(A+h)/W);let R=0;for(let n=a;n<s;++n){const a=n*z-r;for(let r=u;r<l;++r){const s=r*V-o;for(let i=p;i<C;++i){const o=x*e+v*n+w*r+k*i,u=S*(E-1-a)+N*(_-1-s)+T*(A-1-(i*W-h))+$*t;for(let e=0;e<M;++e)R+=b[o+e]*I[u+e]}}}d[f*e+m*n+g*i+y*c+t]=R}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},j$=nT(At,(e=>Math.cos(e))),K$={kernelName:At,backendName:"cpu",kernelFunc:j$},q$=nT(Rt,(e=>Math.cosh(e))),X$={kernelName:Rt,backendName:"cpu",kernelFunc:q$},Y$={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,p,d]=a.shape,f=s.shape[0],[m,g]=o,y=Ni([f,m,g,d],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=Fe(a.shape),k=Fe(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(a-n)*(h-1)/(m-1):0,f=g>1?(s-r)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<d;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}else if("bilinear"===u){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(p-1)+u*f:.5*(r+s)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const r=n+u*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<d;r++){let s=r+h*w[2]+n*w[1]+i*w[0];const l=v[s];s=r+m*w[2]+n*w[1]+i*w[0];const c=v[s];s=r+h*w[2]+a*w[1]+i*w[0];const p=v[s];s=r+m*w[2]+a*w[1]+i*w[0];const d=l+(c-l)*b,f=p+(v[s]-p)*b;s=r+u*k[2]+t*k[1]+e*k[0],y.values[s]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(p-1)+n*f:.5*(r+s)*(p-1);if(a<0||a>p-1){for(let r=0;r<d;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}continue}const o=Math.round(a),u=Math.round(c);for(let r=0;r<d;r++){const a=r+o*w[2]+u*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Q$={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;JN(a,"cumprod");const u=Rc([s],a.shape.length);let l=a;null!=u&&(l=XT({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=Oc(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=rs(l.dtype,"int32"),p=Me(oe(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?1:d[n];else{const r=m(e,t-1);p[n]=i?d[r]*p[r]:d[n]*p[r]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=XT({inputs:{x:g},backend:n,attrs:{perm:Fc(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},Z$={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;JN(a,"cumsum");const u=Rc([s],a.shape.length);let l=a;null!=u&&(l=XT({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=Oc(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=rs(l.dtype,"int32"),p=Le(oe(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?0:d[n];else{const r=m(e,t-1);p[n]=i?d[r]+p[r]:d[n]+p[r]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=XT({inputs:{x:g},backend:n,attrs:{perm:Fc(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},J$={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=S$(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=N$(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},eC={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;re("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=a.shape[0],u=a.shape[1],l=a.shape[2],c=a.shape[3],h=u*s,p=l*s,d=c/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<p;++t){const a=Math.floor(t/s),i=(r*s+t%s)*d;for(let t=0;t<d;++t){const r=t+i+c*(a+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,p,d],a.dtype,m)}};function tC(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;JN([a,s],"depthwiseConv2DNative");const c=Fe(a.shape),h=Fe(s.shape);let p=u;null==p&&(p=[1,1]),re(ol(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=Ju(a.shape,s.shape,i,p,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,v=b.top,w=d.outChannels/d.inChannels,k=new Ga(d.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<d.outHeight;++e){const r=n+e*k.strides[1],a=e*d.strideHeight-v;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=d.inHeight)continue;const s=e*h[0],i=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const a=s+e*h[1],o=i+r*d.inChannels;let u=t,l=a;for(let e=0;e<d.inChannels;++e){const t=I[o+e];for(let e=0;e<w;++e)N[u+e]+=t*S[l+e];u+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const nC={kernelName:Pt,backendName:"cpu",kernelFunc:tC},rC={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;JN([a,s],"depthwiseConv2dNativeBackpropFilter");const h=Ju(a.shape,c,i,o,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new Ga(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(a.dataId).values,w=new Ga(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,I=new Ga(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(h.outHeight,(h.inHeight+b-e)/p);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((y-r)/d)),s=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=a;e<s;++e){const n=r+e*d-y;l+=w.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},aC={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;JN([a,s],"depthwiseConv2DNativeBackpropInput");const h=Fe(a.shape),p=Fe(s.shape),d=Ju(c,s.shape,i,o,u,l,!0),f=new Ga(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[v,w,k]=h,I=n.data.get(s.dataId).values,[S,N,T]=p,{batchSize:$,filterHeight:C,filterWidth:E,inChannels:_,inHeight:A,inWidth:R,outChannels:F,outHeight:O,outWidth:D,strideHeight:M,strideWidth:L}=d,P=C-1-d.padInfo.top,B=E-1-d.padInfo.left,z=F/_;for(let e=0;e<$;++e)for(let t=0;t<_;++t)for(let n=0;n<A;++n){const r=n-P,a=Math.max(0,Math.ceil(r/M)),s=Math.min(O,(C+r)/M);for(let i=0;i<R;++i){const o=i-B,u=Math.max(0,Math.ceil(o/L)),l=Math.min(D,(E+o)/L);let c=0;for(let n=a;n<s;++n){const a=n*M-r;for(let r=u;r<l;++r){const s=v*e+w*n+k*r,i=S*(C-1-a)+N*(E-1-(r*L-o))+T*t;for(let e=0;e<z;++e)c+=x[s+(t*z+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},sC={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=oe(r.shape),s=n.data.get(r.dataId).values,i=Ni([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},iC={kernelName:Wt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(a.dataId).values,p=a.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=Yu(r.shape,a.shape,s,i,"NHWC",o),$=oe(T),C=T.length,E=ve(r.dtype,$);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let s=0;s<b;++s){const i=s*w-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const s=n+t*S;if(s>=0&&s<f)for(let n=0;n<I;++n){const d=i+n*N;if(d>=0&&d<m){const i=ze([e,s,d,o],c,Fe(r.shape)),f=ze([t,n,o],p,Fe(a.shape)),m=l[i]+h[f];m>u&&(u=m)}}}E[ze([e,t,s,o],C,Fe(T))]=u}}}return{dataId:u.write(Aa(E,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},oC={kernelName:Gt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=De(r.shape,l.data.get(r.dataId).values),h=De(a.shape,l.data.get(a.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Yu(r.shape,a.shape,i,o,"NHWC",u);re(s.rank===N.length,(()=>`Error in ${Gt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));const T=De(N,l.data.get(s.dataId).values),$=Pe(a.shape,a.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<d)for(let n=0;n<k;++n){const l=a+n*S;if(l>=0&&l<f){const a=c[e][r][l][s]+h[t][n][s];a>i&&(i=a,o=t,u=n)}}}$[o][u][s]+=T[e][t][r][s]}}}return{dataId:l.write(Aa($,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},uC={kernelName:Ut,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=De(r.shape,l.data.get(r.dataId).values),h=De(a.shape,l.data.get(a.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Yu(r.shape,a.shape,i,o,"NHWC",u);re(s.rank===N.length,(()=>`Error in ${Ut}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));const T=De(N,l.data.get(s.dataId).values),$=Pe(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<d)for(let n=0;n<k;++n){const l=a+n*S;if(l>=0&&l<f){const a=c[e][r][l][s]+h[t][n][s];a>i&&(i=a,o=r,u=l)}}}$[e][o][u][s]+=T[e][t][r][s]}}}return{dataId:l.write(Aa($,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},lC=cT(((e,t)=>e*t)),cC=AT(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),hC=_T(Wn,lC,cC),pC={kernelName:Wn,backendName:"cpu",kernelFunc:hC};function dC(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;JN(a,"sum"),o="bool"===a.dtype?CT({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):iT({inputs:{x:a},backend:n});const u=o.shape.length,l=ye(s,o.shape),c=Rc(l,u);let h=l,p=o;null!=c&&(p=XT({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Oc(h.length,u)),Ac("sum",h,p.shape.length);const[d,f]=Ec(p.shape,h);let m=NT(n,d,rs(p.dtype,"int32"));const g=oe(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=MT({inputs:{x:m},backend:n,attrs:{shape:_c(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const fC={kernelName:Nr,backendName:"cpu",kernelFunc:dC},mC={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=cf(a,s.length);pf(i.length,u,s);const{path:l,steps:c}=df(o,u),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=hf(d,u[t]);let a;ff(e)?a=s[t]:(a=XT({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);le(a.shape,i)||(a=MT({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===p?p=a:(p=hC({inputs:{a,b:p},backend:n}),f.push(p))}e<h-1&&(l[e]>=0&&(p=dC({inputs:{x:p},backend:n,attrs:{axis:l[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},gC={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;JN([r,a],"eluGrad");const s=new Float32Array(oe(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},yC=cT(((e,t)=>e===t?1:0)),bC=_T(Yt,yC,null,"bool"),xC={kernelName:Yt,backendName:"cpu",kernelFunc:bC},vC=qd,wC=Xd,kC=Yd,IC=Qd,SC=Zd,NC=Jd,TC=nT(Xt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+vC*n);return t*(1-((((NC*r+SC)*r+IC)*r+kC)*r+wC)*r*Math.exp(-n*n))})),$C={kernelName:Xt,backendName:"cpu",kernelFunc:TC},CC=bT((e=>Math.exp(e))),EC=rT(Qt,CC,"float32"),_C={kernelName:Qt,backendName:"cpu",kernelFunc:EC};function AC(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(re(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),MT({inputs:{x:a},backend:n,attrs:{shape:o}})}const RC={kernelName:Zt,backendName:"cpu",kernelFunc:AC},FC=bT((e=>Math.expm1(e))),OC=rT(Jt,FC),DC={kernelName:Jt,backendName:"cpu",kernelFunc:OC},MC=cT(((e,t)=>e/t)),LC=_T(Ht,MC),PC={kernelName:Ht,backendName:"cpu",kernelFunc:LC},BC=cT(((e,t)=>e-t)),zC=AT(((e,t,n,r)=>({real:e-n,imag:t-r}))),VC=_T(zr,BC,zC),WC={kernelName:zr,backendName:"cpu",kernelFunc:VC};function UC(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[a,s],c=oe(l),h=xe("float32",c),p=xe("float32",c);for(let e=0;e<a;e++){const r=w$({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=w$({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=IT({inputs:{real:r,imag:a},backend:n}),{real:l,imag:c}=GC(i,t,n),d=ef(l,c);for(let t=0;t<s;t++){const n=af(d,t);h[e*s+t]=n.real,p[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",p),m=IT({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function GC(e,t,n){const r=oe(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=HC(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",_a(r,"float32")),i=iT({inputs:{x:s},backend:n}),u=PC.kernelFunc({inputs:{a:e,b:s},backend:n}),l=PC.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=uf(a*r,t,n),u=af(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),sf(r,s,i,a)}return r}(ef(s,i),r,t);return tf(e)}var o}function HC(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=ef(e,t),i=n/2,o=nf(s),u=o.real,l=o.imag,c=[u.length],h=a.makeTensorInfo(c,"float32",u),p=a.makeTensorInfo(c,"float32",l),d=IT({inputs:{real:h,imag:p},backend:a}),f=rf(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=IT({inputs:{real:b,imag:x},backend:a}),w=HC(u,l,i,r,a),k=w.real,I=w.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),$=IT({inputs:{real:N,imag:T},backend:a}),C=HC(m,g,i,r,a),E=C.real,_=C.imag,A=[E.length],R=a.makeTensorInfo(A,"float32",E),F=a.makeTensorInfo(A,"float32",_),O=IT({inputs:{real:R,imag:F},backend:a}),D=of(n,r),M=[D.real.length],L=a.makeTensorInfo(M,"float32",D.real),P=a.makeTensorInfo(M,"float32",D.imag),B=IT({inputs:{real:L,imag:P},backend:a}),z=hC({inputs:{a:B,b:O},backend:a}),V=OT({inputs:{a:$,b:z},backend:a}),W=VC({inputs:{a:$,b:z},backend:a}),U=TT({inputs:{input:V},backend:a}),G=TT({inputs:{input:W},backend:a}),H=D$({inputs:{input:V},backend:a}),j=D$({inputs:{input:W},backend:a}),K=L$({inputs:[U,G],backend:a,attrs:{axis:0}}),q=L$({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(K.dataId).values,Y=a.data.get(q.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(O),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(q),{real:X,imag:Y}}const jC={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=oe(r.shape),s=r.shape[r.shape.length-1],i=MT({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=UC(i,!1,n),u=MT({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function KC(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||_e(a),o=ve(i,oe(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}const qC={kernelName:tn,backendName:"cpu",kernelFunc:KC},XC={kernelName:nn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=xe(r.dtype,oe(r.shape)),[i,o,u,l]=r.shape,c=a.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let a=0;a<l;a++){const i=Math.round(u-e-1),o=t+n+r+a;let h=c[o];i>=0&&i<u&&(h=c[t+n+i*l+a]),s[o]=h}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},YC=bT((e=>Math.floor(e))),QC=rT(rn,YC),ZC={kernelName:rn,backendName:"cpu",kernelFunc:QC},JC=cT(((e,t)=>Math.floor(e/t))),eE=_T(an,JC,null,"int32"),tE={kernelName:an,backendName:"cpu",kernelFunc:eE},nE={kernelName:ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=B$({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=OT({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=kT(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}},rE={kernelName:na,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=tC({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=OT({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=kT(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function aE(e,t,n,r,a,s,i,o,u){const l=Ni([r,s],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const s=e[n*a+t];c+=s*i[t],r.push(s)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)l.values[n*s+e]=t.get(...t.indexToLoc(c*s+e))}return l}const sE={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=oe(r.shape),i=a.shape,o=i[i.length-1],[u,l,c,h]=so(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const p=aE(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,s);return n.makeTensorInfo(u,r.dtype,p.values)}};function iE(e,t,n){const r=Ni(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const u=e.locToIndex(a);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}const oE={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;JN([a,s],"gatherV2");const u=ye(i,a.shape)[0],l=n.data.get(s.dataId).values,c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];re(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const p=oe(s.shape),d=Af(a,s,u,h),f=MT({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=MT({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=iE(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}},uE=cT(((e,t)=>e>t?1:0)),lE=_T(ln,uE,null,"bool"),cE={kernelName:ln,backendName:"cpu",kernelFunc:lE},hE=cT(((e,t)=>e>=t?1:0)),pE=_T(cn,hE,null,"bool"),dE={kernelName:cn,backendName:"cpu",kernelFunc:pE},fE={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=oe(r.shape),s=r.shape[r.shape.length-1],i=MT({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=UC(i,!0,n),u=MT({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},mE=nT(fn,(e=>Number.isFinite(e)?1:0),"bool"),gE={kernelName:fn,backendName:"cpu",kernelFunc:mE},yE=nT(mn,(e=>Math.abs(e)===1/0?1:0),"bool"),bE={kernelName:mn,backendName:"cpu",kernelFunc:yE},xE=nT(gn,(e=>Number.isNaN(e)?1:0),"bool"),vE={kernelName:gn,backendName:"cpu",kernelFunc:xE},wE=cT(((e,t)=>e<t?1:0)),kE=_T(bn,wE,null,"bool"),IE={kernelName:bn,backendName:"cpu",kernelFunc:kE},SE=cT(((e,t)=>e<=t?1:0)),NE=_T(xn,SE,null,"bool"),TE={kernelName:xn,backendName:"cpu",kernelFunc:NE};function $E(e,t,n){const r=(t-e)/(n-1),a=Le(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}const CE={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=$E(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},EE=bT((e=>Math.log(e))),_E=rT(wn,EE),AE={kernelName:wn,backendName:"cpu",kernelFunc:_E},RE=nT(kn,(e=>Math.log1p(e))),FE={kernelName:kn,backendName:"cpu",kernelFunc:RE},OE=cT(((e,t)=>e&&t)),DE=_T(In,OE,null,"bool"),ME={kernelName:In,backendName:"cpu",kernelFunc:DE},LE=nT(Sn,(e=>e?0:1),"bool"),PE={kernelName:Sn,backendName:"cpu",kernelFunc:LE},BE=cT(((e,t)=>e||t)),zE=_T(Nn,BE,null,"bool"),VE={kernelName:Nn,backendName:"cpu",kernelFunc:zE},WE={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;JN(a,"LRN");const l=a.shape[3],c=l-1,h=n.data.get(a.dataId).values,p=oe(a.shape),d=new Float32Array(p);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,c);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let e=0;e<p;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-u);d[e]=n}return n.makeTensorInfo(a.shape,a.dtype,d)}},UE={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;JN(i,"LRNGrad");const h=oe(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),r=e-t+Math.min(p,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=l*a+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function GE(e,t,n,r){const a=xe(r,oe(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}function HE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const l=u.length,c=ye(s,u);let h=c;const p=Rc(h,l);let d=o.data.get(a.dataId).values;if(null!=p){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[p[t]];d=qT(d,u,a.dtype,p,e),h=Oc(h.length,l),u=e}JN(a,"max"),Ac("max",h,l);const[f,m]=Ec(u,h),g=GE(d,oe(m),f,a.dtype),y=o.write(g,f,a.dtype);let b=f;return i&&(b=_c(f,c)),{dataId:y,shape:b,dtype:a.dtype}}const jE={kernelName:En,backendName:"cpu",kernelFunc:HE},KE=cT(((e,t)=>Math.max(e,t))),qE=_T(_n,KE),XE={kernelName:_n,backendName:"cpu",kernelFunc:qE},YE={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;JN(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;re(ol(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Qu(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&le(l.inShape,l.outShape))c=iT({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=Fe(a.shape),r=p$(e,a.shape,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},QE={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;JN(a,"maxPool3d");const c=Zu(a.shape,s,i,1,o,u,l),h=f$(n.data.get(a.dataId).values,a.shape,a.dtype,Fe(a.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},ZE={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;JN([a,s],"maxPool3DGrad");const c=Zu(s.shape,i,o,1,u,l),h=function(e,t){const n=Ni(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*a-d;let p=l;for(;p<0;)p+=o;const w=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const d=a*s-f;let k=d;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+d);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=p;r<w;r+=o){const a=r-l;for(let s=k;s<I;s+=u){const i=s-d,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*c*h+a*c+i)}}}n.set(N,m,y,r,a,g)}}}return n}(n.bufferSync(s),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,I=x-1-c.padInfo.top,S=Ni(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-w,i=r-I,o=a-k;let u=0;for(let n=0;n<b;n+=m){const r=(s+n)/p;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){const s=(i+a)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const p=b*x*v-1-h.get(e,r,s,l,t)===n*x*v+a*v+i?1:0;0!==p&&(u+=N.get(e,r,s,l,t)*p)}}}S.set(u,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},JE={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;JN([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=Qu(o.shape,u,l,1,c,h),d=n.data.get(o.dataId).values,f=Ni(p.outShape,o.dtype,d$(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=v-1-p.padInfo.left,k=x-1-p.padInfo.top,I=Ni(o.shape,"float32"),S=n.data.get(a.dataId).values,N=Ni(a.shape,"float32",S);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const a=n-k,s=r-w;let i=0;for(let n=0;n<x;n+=y){const r=(a+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=b){const o=(s+a)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=x*v-1-f.get(e,r,o,t)===n*v+a?1:0;0!==u&&(i+=N.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},e_={kernelName:Dn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;JN(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Qu(r.shape,a,s,[1,1],i),[h,p]=function(e,t,n,r,a){const s=p$(e,0,n,Fe(t),a,"max"),i=d$(e,t,n,a,!0,r);return[s.values,i.values]}(l,r.shape,r.dtype,o,c),d=u.write(h,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},t_={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=ye(s,a.shape),u=oe(Ec(a.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=CT({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});l.push(h);const p=LC({inputs:{a:h,b:c},backend:n});l.push(p);const d=dC({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:i}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},n_={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;JN(a,"min");const o=ye(s,a.shape);let u=o;const l=Rc(u,a.shape.length);let c=a;null!=l&&(c=XT({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Oc(u.length,a.shape.length)),Ac("min",u,c.shape.length);const[h,p]=Ec(c.shape,u),d=oe(p),f=Le(oe(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=MT({inputs:{x:g},backend:n,attrs:{shape:_c(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},r_=cT(((e,t)=>Math.min(e,t))),a_=_T(Pn,r_),s_={kernelName:Pn,backendName:"cpu",kernelFunc:a_},i_={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;JN(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===i?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,d=Fe(a.shape),f=oe(o),m=o.length,g=Fe(o),y=xe(a.dtype,f);for(let e=0;e<f;e++){let t=Ve(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=ze(t,p,d);y[e]=h[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},o_=cT(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),u_=_T(zn,o_),l_={kernelName:zn,backendName:"cpu",kernelFunc:u_};function c_(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=ye([o],a.shape),l=HE({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=_c(l.shape,u),h=MT({inputs:{x:l},backend:n,attrs:{shape:c}}),p=VC({inputs:{a,b:h},backend:n}),d=EC({inputs:{x:p},backend:n}),f=dC({inputs:{x:d},backend:n,attrs:{axis:u,keepDims:!1}}),m=MT({inputs:{x:f},backend:n,attrs:{shape:c}}),g=LC({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const h_={kernelName:Cr,backendName:"cpu",kernelFunc:c_},p_={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;JN(a,"multinomial");const u=o?a:c_({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,p=[l,s],d=Le(oe(p),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=dh.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();d[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){d[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",d)}};function d_(e,t,n){const r=_a(-1,n);return lC([],t,r,e,n)}const f_={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;JN(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=d_(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},m_=jp,g_={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;JN(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:h}=m_(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},y_=Kp,b_={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;JN(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:d}=y_(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},x_=qp,v_={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;JN(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=x_(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},w_=cT(((e,t)=>e!==t?1:0)),k_=_T(Gn,w_,null,"bool"),I_={kernelName:Gn,backendName:"cpu",kernelFunc:k_},S_={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;JN(a,"oneHot");const u=oe(a.shape),l=new Float32Array(u*s);l.fill(o);const c=n.data.get(a.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<s&&(l[e*s+c[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",l)}};function N_(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=TT({inputs:{input:r},backend:n}),t=N_({inputs:{x:e},backend:n}),a=D$({inputs:{input:r},backend:n}),s=N_({inputs:{x:a},backend:n}),i=IT({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return KC({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const T_={kernelName:Yr,backendName:"cpu",kernelFunc:N_},$_={kernelName:qn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=TT({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=D$({inputs:{input:a},backend:r}),i=N_({inputs:{x:s},backend:r}),o=IT({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return KC({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function C_(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return AC({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ae(s,e.shape,"All tensors passed to stack must have matching shapes"),re(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=L$({inputs:t.map((e=>{const t=AC({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const E_={kernelName:Yn,backendName:"cpu",kernelFunc:C_},__={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;JN(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=n.data.get(a.dataId).values,c=oe(a.shape),h=a.shape.length,p=Fe(a.shape),d=oe(o),f=o.length,m=Fe(o),g=xe(a.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[ze(Ve(e,h,p).map(((e,t)=>e+u[t])),f,m)]=l[e];return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},A_=cT(((e,t)=>Math.pow(e,t))),R_=_T(Jn,A_),F_={kernelName:Jn,backendName:"cpu",kernelFunc:R_};function O_(e,t,n,r){const[a,s]=Ec(e,r),i=rs(t,"int32"),o=Le(oe(a),i),u=oe(s);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}const D_={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;JN(a,"prod");const o=a.shape.length,u=ye(s,a.shape),l=Rc(u,o);let c=u,h=a;const p=[];null!=l&&(h=XT({inputs:{x:a},backend:n,attrs:{perm:l}}),p.push(h),c=Oc(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=O_(h.shape,h.dtype,d,c);let y=m;return i&&(y=_c(m,u)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function M_(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Le(0,r);const a=Le(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}const L_={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=M_(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},P_=nT(ar,(e=>1/e)),B_={kernelName:ar,backendName:"cpu",kernelFunc:P_},z_={kernelName:lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;JN(a,"resizeBilinear");const u=Fe(a.shape),[l,c]=o,[h,p,d,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(oe([h,l,c,f])),y=[s&&l>1?p-1:p,s&&c>1?d-1:d],b=[s&&l>1?l-1:l,s&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(p-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(d-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],p=o+s*u[2],y=l+s*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],s=t+(m[p+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}},V_={kernelName:cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;JN([s,a],"resizeBilinearGrad");const o=Fe(a.shape),[u,l,c,h]=a.shape,[,p,d]=s.shape,f=new Float32Array(u*l*c*h),m=[i&&p>1?l-1:l,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let v=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=t+r*o[1],i=t+a*o[1],u=n-r,p=1-u;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,l=1-a,d=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=p*l,k=p*a,I=u*l,S=u*a;for(let e=0;e<h;e++){const t=x[v++];f[d+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}},W_={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;JN(a,"resizeNearestNeighbor");const u=Fe(a.shape),[l,c]=o,[h,p,d,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*l*c*f),y=[s&&l>1?p-1:p,s&&c>1?d-1:d],b=[s&&l>1?l-1:l,s&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(p-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(d-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,l,c,f],a.dtype,g)}},U_={kernelName:ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;JN([s,a],"resizeNearestNeighborGrad");const o=Fe(a.shape),u=Fe(s.shape),[l,c,h,p]=a.shape,[,d,f]=s.shape,m=new Float32Array(l*c*h*p),g=n.data.get(s.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let r=0;r<h;r++){const s=n+r*o[2],l=Math.floor(r*k),y=Math.floor(l-S/2);for(let n=0;n<p;n++){let o=0;for(let s=0;s<I;s++){const l=s+a;if(l<0||l>=d)continue;const p=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const a=p+t*u[2],s=t*v;r===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},G_={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;JN(a,"reverse");const i=a.shape.length,o=ye(s,a.shape);if(0===i)return iT({inputs:{x:a},backend:n});const u=new Ga(a.shape,a.dtype),l=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},H_={kernelName:Jr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=xe(r.dtype,oe(r.shape)),[l,c,h,p]=r.shape,[d,f]=zd(i,c,h),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let i=0;i<p;i++){const o=[l,e,r,i],b=o[2],x=o[1];let v=(b-d)*g-(x-f)*m,w=(b-d)*m+(x-f)*g;v=Math.round(v+d),w=Math.round(w+f);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),v>=0&&v<h&&w>=0&&w<c&&(k=y[t+w*(h*p)+v*p+i]),u[t+n+a+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},j_=nT(dr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),K_={kernelName:dr,backendName:"cpu",kernelFunc:j_},q_=bT((e=>1/Math.sqrt(e))),X_=rT(fr,q_),Y_={kernelName:fr,backendName:"cpu",kernelFunc:X_};function Q_(e,t,n,r,a,s,i,o,u,l){const c=[r/a,a],h=e.values,p=t.values;if(0===r)return Ni(n,t.dtype);const d=Ni(c,t.dtype);d.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)l?d.values[u*a+n]+=p[e*a+n]:d.values[u*a+n]=0===t.rank?p[0]:p[e*a+n]}return d}const Z_={kernelName:mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=uo(0,a,i),p=Q_(n.bufferSync(a),n.bufferSync(s),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}},J_={kernelName:gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;JN([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=rs(a.dtype,s.dtype),h=Le(oe(a.shape),c);let p=0;const d=0===i||i>1||1===a.shape.length?1:oe(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<d;t++)1===o[e]?h[p++]=u[e]:h[p++]=l[e];return n.makeTensorInfo(a.shape,c,h)}},eA=jd,tA=Kd,nA=nT(yr,(e=>e>=0?tA*e:eA*(Math.exp(e)-1))),rA={kernelName:yr,backendName:"cpu",kernelFunc:nA},aA=nT(wr,(e=>e<0?-1:e>0?1:0)),sA={kernelName:wr,backendName:"cpu",kernelFunc:aA},iA=nT(xr,(e=>Math.sin(e))),oA={kernelName:xr,backendName:"cpu",kernelFunc:iA},uA=nT(vr,(e=>Math.sinh(e))),lA={kernelName:vr,backendName:"cpu",kernelFunc:uA},cA=Math.log(1.1920928955078125e-7)+2,hA=nT(Ir,(e=>{const t=e>-cA,n=e<cA,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),pA={kernelName:Ir,backendName:"cpu",kernelFunc:hA},dA={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;JN([a],"spaceToBatchND");const o=oe(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=__.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=Vd(l.shape,s,o,!1),h=Wd(c.length,s.length,!1),p=Ud(l.shape,s,o,!1),d=MT({inputs:{x:l},backend:n,attrs:{shape:c}}),f=XT({inputs:{x:d},backend:n,attrs:{perm:h}}),m=MT({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};function fA(e,t,n,r,a,s,i){const o=t[0],u=s[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(yf(o));return[ve(n,0),[0,h],ve(a,0),l,c]}let p=!0,d=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(bf(t,n));if(n>=u)throw new Error(xf(t,n,u));++f[n],p=p&&n>=d,d=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],s=ve(n,t*h),p=ve(a,t),d=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],a=d[n],i=(0===n?0:f[n-1])+a;d[n]++;for(let n=0;n<h;++n)s[i*h+n]=e[t*h+n];p[i]=r[t],c[t]=i}for(let e=0;e<u;++e)if(0===d[e]){const t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;p[t]=i}return[s,[t,h],p,l,c]}}const mA={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=fA(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function gA(e,t,n,r,a){const s=oe(r),i=t[0],o=a.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(vf(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(wf(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/l);if(l*e!==s)throw new Error(If(r,u));u[c]=e}if(oe(u)!==s)throw new Error(Sf(r,u));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const d=[];if(o>0){d[o-1]=1;for(let e=o-2;e>=0;--e)d[e]=d[e+1]*u[e+1]}const f=ve(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*p[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/d[e]),n%=d[e]}return[f,[i,o],u]}const yA={kernelName:_r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,h]=gA(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function bA(e,t,n,r,a,s=!1,i=0){const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?a[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const p=ve(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&p.fill(i),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let d=0,f=1,m=0,g=a[d];for(;;){let t=0;if(f<o){if(t=a[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error($f(g,c));g>m&&p.fill(i,m*l,g*l);for(let t=d;t<f;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(Cf(t,r[t],u[0]));for(let t=0;t<l;t++)p[g*l+t]+=e[n*l+t]}if(s)for(let e=0;e<l;e++)p[g*l+e]/=f-d;if(d=f,++f,m=g+1,g=t,f>o)break}return m<c&&p.fill(i,m*l,c*l),[p,h]}const xA={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=bA(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},vA={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=bA(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},wA={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=uo(0,a,o),d=Q_(n.bufferSync(a),n.bufferSync(s),o,p,c,l,u,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,d.dtype,d.values)}},kA={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ye(i,a.shape)[0],u=gf(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=w$({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},IA=bT((e=>Math.sqrt(e))),SA=nT(Sr,(e=>Math.sqrt(e))),NA={kernelName:Sr,backendName:"cpu",kernelFunc:SA},TA={kernelName:Dr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;JN(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},$A=cT(((e,t)=>{const n=e-t;return n*n})),CA=_T(Or,$A),EA={kernelName:Or,backendName:"cpu",kernelFunc:CA},_A=nT(Qr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),AA={kernelName:Qr,backendName:"cpu",kernelFunc:_A};function RA(e,t,n,r){const a=Ni(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}const FA={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;JN(a,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=No(a.shape,s,i,o,u,l,c,h,p);let w;if(m)w=MT({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){re(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=ho(b,x,v),t=w$({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});w=MT({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=RA(d,n.bufferSync(a),v,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class OA{constructor(e,t,n,r,a,s){this.separator=Oa(e),this.nGramWidths=t,this.leftPad=Oa(n),this.rightPad=Oa(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(a-(i+1))),c=s-(u+l),h=t+(u>0?0:i-o);let p=0;p+=u*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=l*this.rightPad.length,p+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(p);const d=n[r+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=ve("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}const i=new Array(s[a]);for(let n=0;n<a;++n){const r=t[n];let a=s[n];if(this.nGramWidths.forEach((s=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,u,s),a+=u})),this.preserveShort&&a===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(e,r,i,a,u,o)}}return[i,s]}}function DA(e,t,n,r,a,s,i,o){return new OA(n,r,a,s,i,o).compute(e,t)}const MA={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=DA(p,d,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function LA(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function PA(e,t,n){const r=e.length,a=[];let s=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=a.length;LA(e[u],t,n,a);const l=a.length-r;o[u]=l,s+=l,i=Math.max(i,l)}const u=ve("int32",2*s),l=new Array(s),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=a[h],++h;return[u,l,c]}const BA={kernelName:Pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=PA(o,u,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function zA(e,t){const n=ve("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Ea(e[r]).modulo(t).getLowBitsUnsigned();return n}const VA={kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=zA(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},WA=nT(Vr,(e=>Math.tan(e))),UA={kernelName:Vr,backendName:"cpu",kernelFunc:WA},GA=nT(Wr,(e=>Math.tanh(e)));function HA(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Ni(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}const jA={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;JN(a,"tile");const i=HA(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},KA=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function qA(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);qA(e,t,Math.max(n,Math.floor(t-s*o/a+u)),Math.min(r,Math.floor(t+(a-s)*o/a+u)))}const a=e[t];let s=n,i=r;for(J(e,n,t),KA(e[r],a)>0&&J(e,n,r);s<i;){for(J(e,s,i),s++,i--;KA(e[s],a)<0;)s+=1;for(;KA(e[i],a)>0;)i-=1}0===KA(e[n],a)?J(e,n,i):(i+=1,J(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function XA(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],u=xe(n,i*r),l=xe("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o);let i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(qA(i,r),i=i.slice(0,r)),a&&i.sort(KA);const c=t*r,h=u.subarray(c,c+r),p=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,p[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[Ni(c,n,u),Ni(c,"int32",l)]}const YA={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;JN(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=XA(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},QA={kernelName:Hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,p,d]=a.shape,[f,m]=null!=l?l:[h,p],g=[c,f,m,d],y=Fe(a.shape),b=y[0],x=y[1],v=y[2],w=xe(a.dtype,oe(g));w.fill(u);const k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let e=0;e<c;++e){const t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<d;++a){let s;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,d=(t[3]*r+t[4]*n+t[5])/l,f=ZA(c,p,o),m=ZA(d,h,o);switch(i){case"nearest":s=eR(k,h,p,b,x,v,e,m,f,a,u);break;case"bilinear":s=tR(k,h,p,b,x,v,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*b+n*x+r*v+a]=s}return r.makeTensorInfo(g,a.dtype,w)}return{dataId:r.write(w,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function ZA(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Q(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return Q(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Q(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function JA(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}function eR(e,t,n,r,a,s,i,o,u,l,c){return JA(e,t,n,r,a,s,i,Math.round(o),Math.round(u),l,c)}function tR(e,t,n,r,a,s,i,o,u,l,c){const h=Math.floor(o),p=Math.floor(u),d=h+1,f=p+1;return(d-o)*((f-u)*JA(e,t,n,r,a,s,i,h,p,l,c)+(u-p)*JA(e,t,n,r,a,s,i,h,f,l,c))+(o-h)*((f-u)*JA(e,t,n,r,a,s,i,d,p,l,c)+(u-p)*JA(e,t,n,r,a,s,i,d,f,l,c))}function nR(e,t,n,r){const a=ye(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[a]),u=new Ga(s,r,e),l=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const h=s.slice();h[1]=Object.keys(i).length;const p=new Ga(h,r);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(u.get(n,e,r),n,t,r)}));const d=n.slice();return d[a]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const rR={kernelName:Kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;JN(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=nR(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},aR={kernelName:qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i).fill(0),h=a.shape.slice();h[s]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[s]=e;const t=w$({inputs:{x:a},backend:n,attrs:{begin:c,size:h}});p[e]=MT({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return p}},sR={kernelName:Xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;JN(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-s.shape.length;let c=s;for(let e=0;e<l;++e){const t=AC({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=_a(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=bC({inputs:{a:r,b:c},backend:n}),i=CT({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=hC({inputs:{a:i,b:a},backend:n}),h=dC({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(s),u.push(i),u.push(l),u.push(h)}const h=C_({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},iR=[zT,WT,GT,jT,DT,KT,QT,ZT,JT,e$,n$,a$,i$,l$,h$,m$,g$,y$,b$,BT,x$,I$,T$,$$,ET,_$,R$,ST,F$,P$,z$,V$,W$,U$,G$,H$,K$,X$,Y$,Q$,Z$,J$,eC,nC,rC,aC,sC,iC,oC,uC,mC,sT,gC,xC,$C,_C,RC,DC,jC,qC,XC,ZC,tE,nE,rE,sE,oE,cE,dE,oT,fE,M$,gE,bE,vE,lT,IE,TE,CE,AE,FE,ME,PE,VE,WE,UE,jE,XE,YE,QE,ZE,JE,e_,t_,n_,s_,i_,l_,p_,pC,f_,g_,b_,v_,I_,S_,$_,E_,__,F_,dT,D_,L_,$T,PC,B_,mT,yT,LT,z_,V_,W_,U_,G_,H_,K_,Y_,Z_,J_,rA,wT,sA,oA,lA,k$,h_,pA,dA,mA,yA,xA,vA,wA,kA,NA,TA,EA,AA,FA,MA,BA,VA,WC,fC,UA,{kernelName:Wr,backendName:"cpu",kernelFunc:GA},jA,YA,QA,YT,rR,aR,sR,T_];for(const e of iR)ca(e);const oR={},uR={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function lR(e,t){if(!(e in oR)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete oR[e]}),!1),1===e?n.getContext("webgl",uR)||n.getContext("experimental-webgl",uR):n.getContext("webgl2",uR)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;oR[e]=n}const n=oR[e];return null==n||n.isContextLost()?(delete oR[e],lR(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),oR[e])}var cR,hR,pR;function dR(e,t){return[t,e]}function fR(e){const t=oe(e);return pe(Math.ceil(t/4))}function mR(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function gR(e,t){const n=e;let r,a,s,i,o,u,l,c,h,p;return 2===He().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,u=n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function yR(e,t){const n=t();return He().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function bR(e){return!!(He().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function xR(e,t){return CR(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(cR||(cR={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(hR||(hR={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(pR||(pR={}));const vR=/ERROR: [0-9]+:([0-9]+):/g;function wR(e,t){const n=vR.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>fe((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${fe(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function kR(e,t){if(yR(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function IR(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(yR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),yR(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),yR(e,(()=>e.enableVertexAttribArray(o))),!0)}function SR(e,t,n,r){yR(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),yR(e,(()=>e.activeTexture(e.TEXTURE0+n))),yR(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),yR(e,(()=>e.uniform1i(n,r)))}function NR(e,t,n){yR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),yR(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function TR(e,t){yR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),yR(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function $R(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function CR(e,t,n){const r=yR(e,(()=>t()));if(null==r)throw new Error(n);return r}function ER(e,t=2){return oe(e.slice(0,e.length-t))}function _R(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function AR(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[ER(e),..._R(e)]),t}function RR(e){return e%2==0}function FR(e,t){if(le(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(RR(n)&&RR(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&RR(e[0])&&RR(t[0])}let OR,DR;function MR(e,t){return null!=e.getExtension(t)}function LR(e){try{if(null!=lR(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function PR(e){const t=gR(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function BR(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&re("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const zR=He();function VR(){let e,t,n,r,a,s,i,o,u,l;return 2===He().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function WR(e,t,n="index"){const r=Fe(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function UR(e,t,n="index"){const r=Fe(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function GR(e){const t=Fe(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}zR.registerFlag("HAS_WEBGL",(()=>zR.getNumber("WEBGL_VERSION")>0)),zR.registerFlag("WEBGL_VERSION",(()=>LR(2)?2:LR(1)?1:0)),zR.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),zR.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===zR.get("WEBGL_VERSION"))),zR.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),zR.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),zR.registerFlag("WEBGL_PACK",(()=>zR.getBool("HAS_WEBGL"))),zR.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>zR.getBool("WEBGL_PACK"))),zR.registerFlag("WEBGL_PACK_CLIP",(()=>zR.getBool("WEBGL_PACK"))),zR.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>zR.getBool("WEBGL_PACK"))),zR.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>zR.getBool("WEBGL_PACK"))),zR.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>zR.getBool("WEBGL_PACK"))),zR.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>zR.getBool("WEBGL_PACK"))),zR.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>zR.getBool("WEBGL_PACK"))),zR.registerFlag("WEBGL_PACK_REDUCE",(()=>zR.getBool("WEBGL_PACK"))),zR.registerFlag("WEBGL_LAZILY_UNPACK",(()=>zR.getBool("WEBGL_PACK"))),zR.registerFlag("WEBGL_CONV_IM2COL",(()=>zR.getBool("WEBGL_PACK"))),zR.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==OR){const t=lR(e);OR=t.getParameter(t.MAX_TEXTURE_SIZE)}return OR}(zR.getNumber("WEBGL_VERSION")))),zR.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==DR){const t=lR(e);DR=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,DR)}(zR.getNumber("WEBGL_VERSION")))),zR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=zR.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=lR(e);return t=MR(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:MR(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),zR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>zR.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!bs())),zR.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=lR(e);if(1===e){if(!MR(t,"OES_texture_float"))return!1}else if(!MR(t,"EXT_color_buffer_float"))return!1;return PR(t)}(zR.getNumber("WEBGL_VERSION")))),zR.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!zR.getBool("WEBGL_FORCE_F16_TEXTURES")&&zR.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),zR.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=lR(e);if(1!==e){if(MR(t,"EXT_color_buffer_float"))return PR(t);const e="EXT_color_buffer_half_float";if(MR(t,e)){const n=t.getExtension(e);return function(e,t){const n=gR(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!MR(t,"OES_texture_float")&&!!MR(t,"WEBGL_color_buffer_float")&&PR(t)}(zR.getNumber("WEBGL_VERSION")))),zR.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=zR.getNumber("WEBGL_VERSION"))&&null!=lR(e).fenceSync;var e})),zR.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>zR.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),zR.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),zR.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>bs()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),zR.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),zR.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),zR.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),zR.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const HR="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:jR}=y;function KR(e,t,n){const r=[];if(e.forEach((e=>{const t=oe(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=rF(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),s=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?XR(e,r):qR(e,r);const s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=jR(e.shapeInfo.logicalShape,t.logicalShape),u=nF(i),l=i-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let p="";p=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let d="return outputValue;";const f=1===oe(e.shapeInfo.logicalShape),m=1===oe(t.logicalShape);if(1!==s||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&le(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=nF(u),c=jR(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", "),`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=VR(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${YR}\n    ${QR}\n    ${ZR}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(le(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return le(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${UR(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=WR(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${UR(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=WR(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=WR(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=WR(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=JR),[h,u,c,a,l,s,n.userCode].join("\n")}function qR(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=eF(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${tF(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=eF(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&le(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=be(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${qR(aF(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${sF(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${tF(e)}\n      }\n    `;const l=s[0],c=s[1],h=eF(r);return 1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=be(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${qR(aF(e,l),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${sF(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${tF(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===s&&null==d)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===i&&null==d)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=eF(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:u,keptDims:l}=be(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${qR(aF(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${sF(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${tF(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(d===o&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(d===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=eF(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:l}=be(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${qR(aF(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${sF(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${tF(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${eF(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=be(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${qR(aF(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${sF(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${tF(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${eF(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function XR(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${VR().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=VR();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=VR();if(null!=s&&le(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${XR(aF(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${sF(s,r)});\n        }\n      `}const o=VR();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=VR();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(s[i-1]/2);let p=h*Math.ceil(s[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,p*=s[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const YR="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",QR="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ZR="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",JR="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function eF(e){return`offset${e}`}function tF(e){const t=e.name,n=oe(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function nF(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function rF(e,t,n){const{newShape:r,keptDims:a}=be(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,u=!e&&s>1&&!le(t,n)&&r.length<s||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:a}}function aF(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function sF(e,t){return t.map((t=>e[t])).join(", ")}function iF(e,t,n){const r={},a={},s={},i=[];let o,u,l,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===He().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const p=!1;for(let i=0;i<t.variableNames.length;i++){const o=t.variableNames[i];r[o]=e.getUniformLocation(n,o,p),r[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,p),t.enableShapeUniforms&&(a[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,p),s[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,p))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",p),l=e.getUniformLocation(n,"outShapeStrides",p),u=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{i[r]=e.getUniformLocation(n,t.name,p)})),{uniformLocations:r,customUniformLocations:i,infLoc:c,nanLoc:h,inShapesLocations:a,inTexShapesLocations:s,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}}function oF(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!le(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!le(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function uF(e){return He().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class lF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=cR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=VR();this.outputShape=e,this.enableShapeUniforms=uF(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?UR(["r","c","d"],e):WR(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class cF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=cR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=VR();this.outputShape=e,this.enableShapeUniforms=uF(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?UR(["r","c","d"],e):WR(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class hF{constructor(e){this.variableNames=["A"],this.outTexUsage=hR.DOWNLOAD;const t=VR();this.outputShape=e,this.userCode=`\n      ${HR}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class pF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=hR.DOWNLOAD;const t=VR();this.outputShape=e,this.userCode=`\n      ${HR}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class dF{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=VR();this.outputShape=e,this.enableShapeUniforms=uF(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":GR(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class fF{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=VR();this.outputShape=e,this.enableShapeUniforms=uF(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":GR(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function mF(e,t,n,r,a,s){!function(e,t){const n=He().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return CR(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return yR(e,(()=>e.bindTexture(o,i))),yR(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),yR(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),yR(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),yR(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===He().getNumber("WEBGL_VERSION")?yR(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):yR(e,(()=>e.texStorage2D(o,1,r,t,n))),yR(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function gF(e){return e.internalFormatFloat}function yF(e){return e.internalFormatHalfFloat}function bF(e){return e.downloadTextureFormat}function xF(e){return e.internalFormatPackedFloat}function vF(e){return e.internalFormatPackedHalfFloat}class wF{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=He().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){oR[e]=t}(t,e)):this.gl=lR(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===He().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=xR(this.gl,e),MR(this.gl,t))this.textureHalfFloatExtension=xR(this.gl,t);else if(He().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),MR(this.gl,r))this.colorBufferHalfFloatExtension=xR(this.gl,r);else if(He().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",MR(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!MR(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=CR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return yR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),yR(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=CR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return yR(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),yR(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return CR(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=gR(this.gl,this.textureHalfFloatExtension)}get debug(){return He().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;yR(e,(()=>e.finish())),yR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),yR(e,(()=>e.deleteFramebuffer(this.framebuffer))),yR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),yR(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),yR(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=dR(t,n);return mF(e,a,s,gF(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=dR(t,n);return mF(e,a,s,yF(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=dR(t,n);return mF(e,a,s,bF(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){yR(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===He().getNumber("WEBGL_VERSION")?yR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):yR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===He().getNumber("WEBGL_VERSION")?yR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):yR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),yR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,u;yR(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),2===He().getNumber("WEBGL_VERSION")?yR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):yR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),yR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=mR(t,n);return mF(e,a,s,vF(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=mR(t,n);return mF(e,a,s,xF(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(TR(this.gl,this.framebuffer),this.outputTexture=null),yR(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=dR(t,n),i=new Uint8Array(t*n*4);return yR(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=mR(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();yR(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return yR(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),yR(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),yR(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(He().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return yR(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=VR();return function(e,t){const n=CR(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(yR(e,(()=>e.shaderSource(n,t))),yR(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return CR(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return yR(t,(()=>t.attachShader(n,this.vertexShader))),yR(t,(()=>t.attachShader(n,e))),function(e,t){if(yR(e,(()=>e.linkProgram(t))),!He().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&kR(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return yR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),IR(e,t,"clipSpacePos",n,3,20,0)&&IR(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&yR(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&kR(this.gl,this.program),yR(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return CR(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),yR(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),SR(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=mR(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&kR(this.gl,this.program),$R(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),yR(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),yR(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=xR(this.gl,2===He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await me((()=>this.disposed||this.isQueryAvailable(e,He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||me((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),NR(this.gl,e,this.framebuffer),this.debug&&$R(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(NR(this.gl,this.outputTexture,this.framebuffer),this.debug&&$R(this.gl)):TR(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;NR(r,e,this.framebuffer),this.debug&&$R(r),this.outputTexture=e,yR(r,(()=>r.viewport(0,0,t,n))),yR(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),yR(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:kF,bincountImpl:IF,bincountReduceImpl:SF,ceilImpl:NF,concatImpl:TF,equalImpl:$F,expImpl:CF,expm1Impl:EF,floorImpl:_F,gatherNdImpl:AF,gatherV2Impl:RF,greaterImpl:FF,greaterEqualImpl:OF,lessImpl:DF,lessEqualImpl:MF,linSpaceImpl:LF,logImpl:PF,maxImpl:BF,maximumImpl:zF,minimumImpl:VF,multiplyImpl:WF,negImpl:UF,notEqualImpl:GF,prodImpl:HF,rangeImpl:jF,rsqrtImpl:KF,sigmoidImpl:qF,simpleAbsImpl:XF,sliceImpl:YF,sparseFillEmptyRowsImpl:QF,sparseReshapeImpl:ZF,sparseSegmentReductionImpl:JF,sqrtImpl:eO,stridedSliceImpl:tO,stringNGramsImpl:nO,stringSplitImpl:rO,stringToHashBucketFastImpl:aO,subImpl:sO,tileImpl:iO,topKImpl:oO,transposeImpl:uO,uniqueImpl:lO}=H;function cO(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function hO(e,t){return 1===t?[e]:cO(e,t)}class pO{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=uF(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=hO("rc",this.rank),t=nF(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class dO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=uF(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):WR(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":GR(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class fO{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=gO(t,n),a=yO(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=mO(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===pR.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===pR.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===pR.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===pR.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===pR.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=gO(n,r),s=yO(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=mO(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=He().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function mO(e,t,n,r,a){const s=function(e,t){switch(e){case pR.PACKED_2X2_FLOAT32:return xF(t);case pR.PACKED_2X2_FLOAT16:return vF(t);case pR.UNPACKED_FLOAT32:return gF(t);case pR.UNPACKED_FLOAT16:return yF(t);case pR.PACKED_4X1_UNSIGNED_BYTE:return bF(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=mR(e[0],e[1]);i=t*n}else{const[t,n]=dR(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function gO(e,t){if(e===hR.UPLOAD)return pR.PACKED_2X2_FLOAT32;if(e===hR.RENDER||null==e)return function(e){return He().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?pR.PACKED_2X2_FLOAT32:pR.UNPACKED_FLOAT32:e?pR.PACKED_2X2_FLOAT16:pR.UNPACKED_FLOAT16}(t);if(e===hR.DOWNLOAD||e===hR.PIXELS)return pR.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function yO(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class bO{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=uF(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const xO="return abs(x);",vO="return x;";class wO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=uF(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class kO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=uF(this.outputShape.length);const t=e.length,n=hO("rc",t),r=nF(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const IO=hp,SO={},NO=He().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class TO extends K{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!He().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof wF)t=e;else{const n=lR(He().getNumber("WEBGL_VERSION"),e);t=new wF(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=lR(He().getNumber("WEBGL_VERSION"));t=new wF(e),this.binaryCache=((n=He().getNumber("WEBGL_VERSION"))in SO||(SO[n]={}),SO[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new fO(this.gpgpu),this.numMBBeforeWarning=null==He().global.screen?1024:He().global.screen.height*He().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new j(this,Ko())}nextDataId(){return TO.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((He().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||He().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:hR.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(He().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:hR.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new wO(i,vO):new bO(i,vO);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=Ra()),c="complex64"===r?ef(this.readSync(a.real.dataId),this.readSync(a.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=Ra()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new wO(r,vO):new bO(r,vO);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(He().getBool("DEBUG")&&!He().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===He().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&He().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...fR(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=ef(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=oe(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;yR(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ko().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new wO(a,vO):new bO(a,vO);const r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=Ko().makeTensorFromDataId(l.dataId,l.shape,l.dtype),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Da(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ni(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!bR(n)){if(He().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=oe(t);if(He().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...fR(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=He().getBool("WEBGL_PACK")&&!0===r,i=s?AR(t):t,o=s?new pF(i):new hF(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=ie(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=ie(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=ee(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ra(),endMs:null}}endTimer(e){return He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ra(),e)}async getQueryTime(e){if(He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=NO){return He().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&oe(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ra("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return IO(e.shape,t)}packedUnaryOp(e,t,n){const r=new wO(e.shape,t),a=this.compileAndRun(r,[e],n);return Ko().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=XF(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(He().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,xO,e.dtype);const t=new bO(e.shape,xO),n=this.compileAndRun(t,[e]);return Ko().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&$e(n[0])){const a=n.map((e=>Oa(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Ko().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new kO(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new pO(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[ER(e.shape),..._R(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[ER(t),..._R(t)],s=new dO(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;null!=t&&re(oe(a)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=AR(a);let o;o=r?new cF(i):new lF(i);const u=[null!=t?t:fR(i)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,s){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===cR.DENSE){const t=null!=s?s:fR(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===oe(i.shape))return o.values=xe(i.dtype,0),i;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&oe(t.shape)<=He().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!FR(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=rF(e.packedInputs,t.shape,s);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=Fe(o);h=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,d=2===o.length&&le(t.shape,s),f=1===oe(t.shape),m=Yi(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&le(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${p}_${g}_${i?u:""}_${o.length}_${f}_${m}_${d}_${l}_${c}_${h}_${y}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+`${He().getNumber("WEBGL_VERSION")}`,s}(e,l,c),p=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=KR(a,i,t),u=function(e,t){const n=CR(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(yR(e,(()=>e.shaderSource(n,t))),yR(e,(()=>e.compileShader(n))),He().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw wR(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),l=e.createProgram(u);return He().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:s,outShapeInfo:i},iF(e,t,l))}(this.gpgpu,e,l,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),He().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(oF(t.inShapeInfos,n),oF([t.outShapeInfo],[r]));const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===He().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],u=t.inTexShapesLocations[`${a}TexShape`];if(o){const{uniformShape:r}=rF(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(oe(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=Fe(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,p,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=He().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Ra();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!He().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(He().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Yo((()=>{if(!He().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=He().getBool("DEBUG");He().set("DEBUG",!1);const t=this.abs(Iu(1e-8)).dataSync()[0];if(He().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=Ra());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=He().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?Z(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=be(e);e=t.newShape}let r=oe(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=ER(e);let n=2,a=2;return e.length&&([n,a]=_R(e)),r=t*(n/2)*(a/2),pe(r).map((e=>2*e))}return pe(r)}(n,o),t.texShape=c),null!=a){const e=AR(n);let s,i=c[1],h=c[0];const p=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!o&&p||([i,h]=mR(c[0],c[1])),s=o?new fF(e,p):new dF(e,p);const d=p?[h,i]:c,f=this.makeTensorInfo(d,r),m=this.texData.get(f.dataId);m.usage=p?hR.PIXELS:hR.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,a);const g=[[h,i]],y=!0,b=this.runWebGLProgram(s,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,He().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Ra()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Ne(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Dd(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw wR(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}=iF(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}}TO.nextDataId=0,xs()&&iu("webgl",(()=>new TO),2);class $O{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Zi(t,n),this.enableShapeUniforms=uF(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class CO{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Zi(t,n);const a=this.outputShape.length;this.enableShapeUniforms=uF(a);let s="";if(r)if(0===a||1===oe(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${nF(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=hO("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function EO(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const _O={kernelName:hn,backendName:"webgl",kernelFunc:EO};function AO(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=EO({inputs:{x:r},backend:n}),u=EO({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const RO={kernelName:kt,backendName:"webgl",kernelFunc:AO},FO="return (a < 0.) ? b * a : a;",OO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",DO={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",_a(s,"float32")),o=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CO(OO,a.shape,i.shape):new $O(FO,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},MO="return (a < 0.) ? b * a : a;",LO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",PO={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CO(LO,r.shape,a.shape):new $O(MO,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}};function BO({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=He().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new wO(i.shape,t):new bO(i.shape,e),o.runWebGLProgram(l,[i],u)}}function zO({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new $O(e,u.shape,l.shape);return c.runWebGLProgram(i,[a,s],rs(n.dtype,r.dtype))})),s=AO({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),s}const h=s||rs(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=a){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?Rf(e):e,r="string"===u.dtype?Rf(t):t,[s,i]=a(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=s,o}let p;return p=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new CO(t,u.shape,l.shape,n):new $O(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}function VO(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?LO:MO;if("leakyrelu"===e)return t?OO:FO;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class WO{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=uF(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class UO{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Zi(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const GO="return a * b;";function HO(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=rs(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new UO("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new UO("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=AO({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=WF(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CO(GO,r.shape,a.shape):new $O(GO,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}const jO={kernelName:Wn,backendName:"webgl",kernelFunc:HO};function KO(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=oe(a.shape),u=ge(s,o),l=oe(u);re(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(a.dataId);return!c.isPacked||FR(a.shape,u)||null!==c.texture&&FR(c.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[ER(e.shape),..._R(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[ER(t),..._R(t)],i=new dO(s,r),o=[r],u=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,u,i)}const qO={kernelName:ir,backendName:"webgl",kernelFunc:KO};class XO{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${ce(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class YO{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function QO(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Bd(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,h;c="mean"===n?0===i?new XO({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new XO({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new YO({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=s,s=r.runWebGLProgram(c,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}class ZO{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=nF(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class JO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=nF(this.rank),a=cO("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function eD(e,t,n){const r=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JO(e.shape,t):new ZO(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function tD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=t,s=e.shape.length,i=ye(a,e.shape);let o=i;const u=Rc(o,s),l=null!=u;let c=e;l&&(c=eD(e,u,r),o=Oc(o.length,s)),Ac("sum",o,s);const[h,p]=Ec(c.shape,o);let d=h;n&&(d=_c(h,i));const f=oe(p),m=KO({inputs:{x:c},attrs:{shape:[oe(e.shape)/f,f]},backend:r}),g=QO(m,as(e.dtype),"sum",r),y=KO({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(a,s,i,n)}const nD={kernelName:Nr,backendName:"webgl",kernelFunc:tD};function rD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=uO(e,a.shape,a.dtype,s,u);l=i.makeTensorInfo(u,a.dtype),i.texData.get(l.dataId).values=t}else l=eD(a,s,i);return l}const aD={kernelName:jr,backendName:"webgl",kernelFunc:rD};function sD({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],p=r?t.shape[c-1]:t.shape[c-2],d=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=oe(m),b=oe(g),x=Zi(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);re(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[y,h,d]:[y,d,h],w=r?[b,f,p]:[b,p,f],k=KO({inputs:{x:e},backend:a,attrs:{shape:v}}),I=KO({inputs:{x:t},backend:a,attrs:{shape:w}}),S=[k,I],N=Math.max(y,b),T=n?k.shape[1]:k.shape[2],$=null!=s,C=null!=i,E="leakyrelu"===u,_=null!=u?VO(u,!0):null;let A;if((1===d||1===f)&&T>1e3&&!1===($||C||E||null!=_)){let e=k,t=I;n&&(e=rD({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=rD({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),S.push(t));const s=1===f;let i=e;1!==f&&(i=KO({inputs:{x:e},backend:a,attrs:{shape:[N,T,1]}}),S.push(i));const o=1===f?2:1;let u=t;s&&(u=KO({inputs:{x:t},backend:a,attrs:{shape:[N,1,T]}}),S.push(u));const l=HO({inputs:{a:i,b:u},backend:a});A=tD({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),S.push(l)}else{const u=rs(e.dtype,t.dtype),l=new WO(v,w,[N,d,f],n,r,$,_,C,E),c=[k,I];if(null!=s&&c.push(s),C&&c.push(i),E){const e=a.makeTensorInfo([],"float32",_a(o,"float32"));c.push(e),S.push(e)}A=a.runWebGLProgram(l,c,u)}const R=KO({inputs:{x:A},backend:a,attrs:{shape:x}});S.push(A);for(const e of S)a.disposeIntermediateTensorInfo(e);return R}const iD={kernelName:ea,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return sD({a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},oD="return abs(x);",uD={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=XF(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=He().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new wO(r.shape,oD):new bO(r.shape,oD),n.runWebGLProgram(a,[r],r.dtype)}},lD=BO({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),cD={kernelName:Qe,backendName:"webgl",kernelFunc:lD},hD=BO({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),pD={kernelName:Ze,backendName:"webgl",kernelFunc:hD},dD="return a + b;",fD=zO({opSnippet:dD,packedOpSnippet:dD,supportsComplex:!0,cpuKernelImpl:kF}),mD={kernelName:Je,backendName:"webgl",kernelFunc:fD};class gD{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class yD{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const bD={kernelName:et,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return EO({inputs:{x:a[0]},backend:r});if(a.length>He().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>rs(e,t))),i=a.map((e=>e.shape)),o=He().getBool("WEBGL_PACK")?new yD(a[0].shape,i):new gD(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},xD={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ye(s,a.shape);let l=u;const c=Rc(l,o);let h=a;null!=c&&(h=rD({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Oc(l.length,o)),Ac("all",l,o);const[p,d]=Ec(h.shape,l),f=KO({inputs:{x:h},backend:n,attrs:{shape:[-1,oe(d)]}}),m=QO(f,f.dtype,"all",n);let g;return g=KO(i?{inputs:{x:m},backend:n,attrs:{shape:_c(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},vD={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ye(s,a.shape);let l=u;const c=Rc(l,o);let h=a;null!=c&&(h=rD({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Oc(l.length,o)),Ac("any",l,o);const[p,d]=Ec(h.shape,l),f=KO({inputs:{x:h},backend:n,attrs:{shape:[-1,oe(d)]}}),m=QO(f,f.dtype,"any",n);let g;return g=KO(i?{inputs:{x:m},backend:n,attrs:{shape:_c(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class wD{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class kD{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,re(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=nF(o),l=hO("coords",o);let c,h;if(1===s){h=o+1;const e=nF(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=hO("sourceLocR",h-1).concat("inIdx.r"),g=hO("sourceLocG",h-1).concat("inIdx.g"),y=hO("sourceLocB",h-1).concat("inIdx.b"),b=hO("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function ID(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=Bd(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new wD(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=ID(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function SD(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=Bd(a[a.length-1]),i=new kD(a,s,n,null==r),o=null==r?[t]:[t,r],u=e.runWebGLProgram(i,o,"int32");if(u.shape.length===t.shape.length){const r=SD(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function ND(e,t,n,r){const a=[n];if(Ac("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!He().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=Ec(i.shape,a),l=oe(u),c=KO({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=ID(e,c,r);n.push(h);const p=KO({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return SD(e,t,r)}const TD={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=ye(s,a.shape);const o=Rc(i,a.shape.length);let u=a;const l=[];null!=o&&(u=rD({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Oc(i.length,u.shape.length)),Ac("argMax",[i[0]],u.shape.length);const c=ND(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},$D={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=ye(s,a.shape);const o=Rc(i,a.shape.length);let u=a;const l=[];null!=o&&(u=rD({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Oc(i.length,u.shape.length)),Ac("argMin",[i[0]],u.shape.length);const c=ND(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},CD=BO({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),ED={kernelName:st,backendName:"webgl",kernelFunc:CD},_D=BO({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),AD={kernelName:it,backendName:"webgl",kernelFunc:_D},RD=BO({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),FD={kernelName:ot,backendName:"webgl",kernelFunc:RD},OD=zO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),DD={kernelName:lt,backendName:"webgl",kernelFunc:OD},MD=BO({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),LD={kernelName:ut,backendName:"webgl",kernelFunc:MD};class PD{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class BD{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const zD={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;BR(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;re(ol(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Qu(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&le(l.inShape,l.outShape))return EO({inputs:{x:a},backend:n});const c=new PD(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}},VD={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=Zu(a.shape,s,i,[1,1,1],o,u,l),h=new BD(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};class WD{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class UD{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const GD={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Zu(i.shape,o,u,[1,1,1],l,c),p=new UD(h);return n.runWebGLProgram(p,[a],i.dtype)}},HD={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;BR([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Qu(i.shape,o,u,1,l),h=new WD(c);return n.runWebGLProgram(h,[a],i.dtype)}},jD={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return sD({a,b:s,transposeA:i,transposeB:o,backend:n})}};class KD{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Zi(e,t),Zi(e,n);let i="0.0";null!=r&&(Zi(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(Zi(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class qD{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Zi(e,t),Zi(e,n);let i="vec4(0.0)";null!=r&&(Zi(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(Zi(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const XD={kernelName:sn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;re(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),re(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),re(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,s];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const p=He().getBool("WEBGL_PACK_NORMALIZATION")?new qD(r.shape,a.shape,s.shape,c,h,u):new KD(r.shape,a.shape,s.shape,c,h,u);return t.runWebGLProgram(p,l,l[0].dtype)}};class YD{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=nF(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return QD.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${QD[t]} = start[${t}] + coords.${QD[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const QD=["x","y","z","w","u","v"];class ZD{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=nF(this.rank),n=hO("coords",this.rank),r=hO("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function JD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=So(a,s,i);if(lo(a,o,u),0===oe(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=YF(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=ko(a.shape,o,u);if(l||!c){const e=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZD(u):new YD(u),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Io(t,Fe(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(a,o,u,n)}const eM={kernelName:br,backendName:"webgl",kernelFunc:JD},tM={kernelName:mt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;re(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=Vd(a.shape,s,o),l=Wd(u.length,s.length),c=Ud(a.shape,s,o),h=Gd(i,s.length),p=Hd(c,i,s.length),d=[],f=KO({inputs:{x:a},backend:n,attrs:{shape:u}}),m=rD({inputs:{x:f},backend:n,attrs:{perm:l}}),g=KO({inputs:{x:m},backend:n,attrs:{shape:c}}),y=JD({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},nM={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=IF(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},rM={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=Zi(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},aM=zO({opSnippet:"return float(a != b);",cpuKernelImpl:GF,dtype:"bool"}),sM={kernelName:Gn,backendName:"webgl",kernelFunc:aM};function iM(e){const{inputs:t,backend:n}=e,{input:r}=t;return EO({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const oM={kernelName:rr,backendName:"webgl",kernelFunc:iM},uM={kernelName:xt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return EO({inputs:{x:s},backend:r});const t=Gc(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=AO({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=iM({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!Ie(s.dtype,i)){const e=EO({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new bO(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",xe("bool",1)),t=aM({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},lM="return ceil(x);",cM=BO({opSnippet:lM,packedOpSnippet:lM,cpuKernelImpl:NF}),hM={kernelName:vt,backendName:"webgl",kernelFunc:cM};class pM{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class dM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const fM={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=He().getBool("WEBGL_PACK_CLIP")?new dM(a.shape):new pM(a.shape);const u=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,u)}};class mM{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function gM(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const yM={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new mM(r.shape),i=[gM(r,a.complexTensorInfos.real),gM(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class bM{constructor(e){this.outputShape=[],this.outputShape=Ld(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class xM{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ld(e,t);const n=this.outputShape,r=n.length,a=nF(r),s=hO("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${vM(i,u,t)}),\n            vec2(${vM(l,u,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${vM(i,u,d)}),\n          vec2(${vM(l,u,d)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function vM(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function wM(e){const{inputs:t,backend:n}=e,{input:r}=t;return EO({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const kM={kernelName:dn,backendName:"webgl",kernelFunc:wM};function IM(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>iM({inputs:{input:e},backend:n}))),a=e.map((e=>wM({inputs:{input:e},backend:n}))),s=IM(r,t,n),i=IM(a,t,n),o=AO({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=oe(e.shape.slice(t));return KO({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Ld(a.map((e=>e.shape)),1),o=1===a[0].shape[0],u=TF(s,i,r,o),l=Ld(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>He().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=IM(e.slice(0,r),t,n),s=IM(e.slice(r),t,n),i=IM([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new xM(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=function(e,t,n){const r=Ld(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>KO({inputs:{x:e},attrs:{shape:[-1,oe(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new bM(s.map((e=>e.shape))),u=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=KO({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),l}function SM(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ye(a,t[0].shape)[0],i=Ld(t.map((e=>e.shape)),s);if(0===oe(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>oe(e.shape)>0));return 1===o.length?EO({inputs:{x:o[0]},backend:n}):(Md(o.map((e=>e.shape)),s),IM(o,s,n))}const NM={kernelName:St,backendName:"webgl",kernelFunc:SM};class TM{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class $M{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class CM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=uF(this.outputShape.length);const{dataFormat:n}=t,r=VR(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function EM({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if((1!==h&&1!==p||!(c>1e3))&&l.isPacked&&d&&null!=l.texture&&u[2]%2!=0&&le(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,re(FR(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const d=KO({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(d);const g=sD({a:h,b:d,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=r.texData.get(g.dataId);re(y.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=p,y.shape=n.outShape,f=EO({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const l=KO({inputs:{x:e},backend:r,attrs:{shape:[1,d?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=KO({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=sD({a:l,b:c,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});f=KO({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function _M({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=u*l*c,g=p*h,y=[m,g],b=[],x=KO({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=KO({inputs:{x:t},backend:r,attrs:{shape:[1,m,oe(t.shape)/m]}});b.push(x),b.push(v);const w=new CM(y,n),k=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=r.runWebGLProgram(w,[x],"float32",k),S=KO({inputs:{x:I},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(I),b.push(S);const N=null!=a,T=null!=s,$="leakyrelu"===o,C=o?VO(o,!0):null,E=new WO(S.shape,v.shape,[1,g,n.outChannels],!0,!1,N,C,T,$),_=[S,v];if(a&&_.push(a),T&&_.push(s),$){const e=r.makeTensorInfo([],"float32",_a(i,"float32"));_.push(e),b.push(e)}const A=r.runWebGLProgram(E,_,"float32"),R=KO({inputs:{x:A},backend:r,attrs:{shape:f?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});b.push(A);for(const e of b)r.disposeIntermediateTensorInfo(e);return R}const AM={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=ul(u),p=Ju(a.shape,s.shape,i,l,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(He().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])d=_M({x:a,filter:s,convInfo:p,backend:n});else{const e=new TM(p);d=n.runWebGLProgram(e,[a,s],"float32")}else d=EM({x:a,filter:s,convInfo:p,backend:n});const f=KO({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class RM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class FM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class DM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const MM={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=ul(u),p=Ju(a.shape,c,i,1,o,l,!1,h),d=new RM(p);return n.runWebGLProgram(d,[a,s],"float32")}},LM={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=ul(l),p=Ju(i,s.shape,o,1,u,c,!1,h),d=new FM(p);return n.runWebGLProgram(d,[a,s],"float32")}},PM={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=el(a.shape,s.shape,i,u,o),c=new $M(l);return n.runWebGLProgram(c,[a,s],"float32")}},BM={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,l=el(a.shape,u,i,1,o),c=new OM(l);return n.runWebGLProgram(c,[a,s],"float32")}},zM={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,l=el(u,s.shape,o,1,i),c=new DM(l);return n.runWebGLProgram(c,[a,s],"float32")}},VM=BO({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),WM={kernelName:At,backendName:"webgl",kernelFunc:VM},UM=BO({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),GM={kernelName:Rt,backendName:"webgl",kernelFunc:UM};class HM{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const jM={kernelName:Dt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new HM(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}};class KM{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"1.0":`getX(${qM(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${nF(r)} coords = getOutputCoords();\n        int end = ${XM(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${XM(r,"coords")} = idx;\n          val *= getX(${qM(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function qM(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}function XM(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}const YM={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,l=Rc([s],u);let c=a;null!=l&&(c=rD({inputs:{x:a},backend:n,attrs:{perm:l}}));const h=Oc(1,u)[0];if(h!==u-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const p=c.shape[h];let d=EO({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){const t=new KM(c.shape,!1,o),r=[[e]],a=d;d=n.runWebGLProgram(t,[d],d.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new KM(c.shape,i,o),t=d;d=n.runWebGLProgram(e,[d],d.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=rD({inputs:{x:d},backend:n,attrs:{perm:Fc(l)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),e}return d}};class QM{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${ZM(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${nF(r)} coords = getOutputCoords();\n        int end = ${JM(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${JM(r,"coords")} = idx;\n          val += getX(${ZM(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function ZM(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function JM(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const eL={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,l=Rc([s],u);let c=a;null!=l&&(c=rD({inputs:{x:a},backend:n,attrs:{perm:l}}));const h=Oc(1,u)[0];if(h!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const p=c.shape[h];let d=EO({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){const t=new QM(c.shape,!1,o),r=[[e]],a=d;d=n.runWebGLProgram(t,[d],d.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new QM(c.shape,i,o),t=d;d=n.runWebGLProgram(e,[d],d.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=rD({inputs:{x:d},backend:n,attrs:{perm:Fc(l)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),e}return d}},tL={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=IF(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=SF(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class nL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const rL={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h=new nL("NHWC"===i?[o,u,l,c]:[o,c,u,l],s,i);return n.runWebGLProgram(h,[a],a.dtype)}};class aL{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=uF(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class sL{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=uF(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?Z(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,u>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let d="",f="";n&&(d=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const iL={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),re(ol(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Ju(a.shape,s.shape,i,c,o,l,!0);let p;p=He().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new sL(h):new aL(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[a,s],"float32",d)}};class oL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class uL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const lL={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=Ju(a.shape,c,i,o,u,l,!0),p=new oL(h);return n.runWebGLProgram(p,[a,s],"float32")}},cL={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=Ju(c,s.shape,i,o,u,l,!0),p=new uL(h);return n.runWebGLProgram(p,[a,s],"float32")}};class hL{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const pL={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=oe(r.shape),i=KO({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new hL(s),u=n.runWebGLProgram(o,[i],i.dtype),l=KO({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class dL{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const fL={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=Yu(a.shape,s.shape,i,o,"NHWC",u);let c;const h=new dL(l);c=n.runWebGLProgram(h,[a,s],"float32");const p=KO({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),p}},mL={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=cf(a,s.length);pf(i.length,u,s);const{path:l,steps:c}=df(o,u),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=hf(d,u[t]);let a;ff(e)?a=s[t]:(a=rD({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);le(a.shape,i)||(a=KO({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===p?p=a:(p=HO({inputs:{a,b:p},backend:n}),f.push(p))}e<h-1&&(l[e]>=0&&(p=tD({inputs:{x:p},backend:n,attrs:{axis:l[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},gL=BO({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),yL={kernelName:Kt,backendName:"webgl",kernelFunc:gL},bL={kernelName:qt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CO("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new $O("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},xL=zO({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:$F}),vL={kernelName:Yt,backendName:"webgl",kernelFunc:xL},wL=BO({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${qd};\n  float a1 = ${Xd};\n  float a2 = ${Yd};\n  float a3 = ${Qd};\n  float a4 = ${Zd};\n  float a5 = ${Jd};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),kL={kernelName:Xt,backendName:"webgl",kernelFunc:wL},IL=BO({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:CF,dtype:"float32"}),SL={kernelName:Qt,backendName:"webgl",kernelFunc:IL};function NL(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(re(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),KO({inputs:{x:s},backend:r,attrs:{shape:o}})}const TL={kernelName:Zt,backendName:"webgl",kernelFunc:NL},$L="return exp(x) - 1.0;",CL=BO({opSnippet:$L,packedOpSnippet:$L,cpuKernelImpl:EF}),EL={kernelName:Jt,backendName:"webgl",kernelFunc:CL};class _L{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function AL(e,t,n){const r=n.texData.get(e.dataId),a=oe(e.shape),s=e.shape[e.shape.length-1],i=KO({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,u=new _L("real",o,t),l=new _L("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),p=n.runWebGLProgram(l,c,"float32"),d=AO({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=KO({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const RL={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return AL(r,!1,n)}};class FL{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function OL(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||_e(a),"string"===s){const e=ve(s,oe(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new FL(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}const DL={kernelName:tn,backendName:"webgl",kernelFunc:OL};class ML{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const LL={kernelName:nn,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new ML(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},PL="return floor(x);",BL=BO({opSnippet:PL,packedOpSnippet:PL,cpuKernelImpl:_F}),zL={kernelName:rn,backendName:"webgl",kernelFunc:BL},VL=zO({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),WL={kernelName:an,backendName:"webgl",kernelFunc:VL};class UL{constructor(e){this.variableNames=["A"];const t=VR(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class GL{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=VR(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const HL={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],h=[l,u,s];(o||i)&&(null==jL&&(jL=document.createElement("canvas").getContext("2d")),jL.canvas.width=u,jL.canvas.height=l,jL.drawImage(a,0,0,u,l),a=jL.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=hR.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const d=He().getBool("WEBGL_PACK")?new GL(h):new UL(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let jL;const KL={kernelName:ta,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=ul(c),g=Ju(a.shape,s.shape,u,h,l,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(He().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=_M({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===d,u=d?VO(d,!1):null,l=new TM(g,e,u,t,r),c=[a,s];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",_a(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(l,c,"float32")}else y=EM({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const x=KO({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},qL={kernelName:na,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),re(ol(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=Ju(a.shape,s.shape,u,m,l,h,!0),y=He().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?VO(p,y):null,x=[a,s],v=null!=i,w=null!=o,k="leakyrelu"===p;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",_a(d,"float32"));x.push(e),f.push(e)}let I;I=y?new sL(g,v,b,w,k):new aL(g,v,b,w,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(I,x,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class XL{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=nF(t.length),a=nF(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const YL={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=oe(r.shape),[u,l,c,h]=so(r,a),p=KO({inputs:{x:a},backend:n,attrs:{shape:[l,i]}}),d=KO({inputs:{x:r},backend:n,attrs:{shape:[oe(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=AF(e,t,r.dtype,l,i,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,s.values)}const f=new XL(i,h,[l,c]),m=n.runWebGLProgram(f,[d,p],d.dtype),g=KO({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class QL{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=nF(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function ZL(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=ye(i,a.shape)[0];if(He().get("DEBUG")){const e=n.readSync(s.dataId),t=a.shape[u];for(let n=0;n<e.length;++n){const r=e[n];re(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=Af(a,s,u,o),c=oe(s.shape),h=[],p=KO({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=KO({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(p),h.push(d);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(d),t=n.bufferSync(p),r=RF(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new QL(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=KO({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const JL={kernelName:on,backendName:"webgl",kernelFunc:ZL},eP=zO({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:FF,dtype:"bool"}),tP={kernelName:ln,backendName:"webgl",kernelFunc:eP},nP=zO({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:OF}),rP={kernelName:cn,backendName:"webgl",kernelFunc:nP},aP={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return AL(r,!0,n)}},sP=BO({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),iP={kernelName:fn,backendName:"webgl",kernelFunc:sP},oP=BO({opSnippet:"return float(isinf(x));",dtype:"bool"}),uP={kernelName:mn,backendName:"webgl",kernelFunc:oP},lP=BO({opSnippet:"return float(isnan(x));",dtype:"bool"}),cP={kernelName:gn,backendName:"webgl",kernelFunc:lP},hP=zO({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:DF,dtype:"bool"}),pP={kernelName:bn,backendName:"webgl",kernelFunc:hP},dP=zO({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:MF,dtype:"bool"}),fP={kernelName:xn,backendName:"webgl",kernelFunc:dP},mP={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=LF(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},gP=BO({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:PF}),yP={kernelName:wn,backendName:"webgl",kernelFunc:gP},bP=BO({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),xP={kernelName:kn,backendName:"webgl",kernelFunc:bP},vP=zO({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),wP={kernelName:In,backendName:"webgl",kernelFunc:vP},kP=BO({opSnippet:"return float(!(x >= 1.0));"}),IP={kernelName:Sn,backendName:"webgl",kernelFunc:kP},SP=zO({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),NP={kernelName:Nn,backendName:"webgl",kernelFunc:SP};class TP{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class $P{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const CP={kernelName:$n,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,l=He().getBool("WEBGL_PACK_NORMALIZATION")?new $P(a.shape,s,i,o,u):new TP(a.shape,s,i,o,u);return n.runWebGLProgram(l,[a],a.dtype)}};class EP{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const _P={kernelName:Cn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new EP(a.shape,o,u,l,c);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function AP(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=ye(s,a.shape);let l=u;const c=Rc(l,o),h=null!=c,p=n.shouldExecuteOnCPU([a]);let d=a;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=uO(e,a.shape,a.dtype,c,t);d=n.makeTensorInfo(t,a.dtype),n.texData.get(d.dataId).values=r}else d=eD(a,c,n);l=Oc(l.length,o)}Ac("max",l,o);const[f,m]=Ec(d.shape,l);let g,y=f;if(i&&(y=_c(f,u)),p){const e=n.texData.get(d.dataId).values,t=BF(e,oe(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=oe(t),s=KO({inputs:{x:e},attrs:{shape:[oe(e.shape)/a,a]},backend:r}),i=QO(s,e.dtype,"max",r),o=KO({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const RP={kernelName:En,backendName:"webgl",kernelFunc:AP},FP=zO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:zF}),OP={kernelName:_n,backendName:"webgl",kernelFunc:FP},DP={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;BR(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;re(ol(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Qu(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&le(l.inShape,l.outShape))return EO({inputs:{x:a},backend:n});const c=new PD(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}},MP={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=Zu(a.shape,s,i,[1,1,1],o,l,u),h=new BD(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};class LP{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PP{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const BP={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Zu(i.shape,o,u,[1,1,1],l,c),p=new BD(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new PP(h),m=n.runWebGLProgram(f,[a,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}},zP={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;BR([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=Qu(o.shape,u,l,1,c,h),d=new PD(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new LP(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},VP={kernelName:Dn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;re(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];re(ol(s,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`));const c=Qu(r.shape,a,s,l,i),[h,p]=function(e,t,n,r){let a=new PD(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new PD(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,c,u);return[h,p]}},WP={kernelName:Mn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,u=ye(s,r.shape);let l=u;const c=Rc(l,o),h=null!=c,p=i.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=uO(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=eD(r,c,i);d.push(f),l=Oc(l.length,o)}Ac("sum",l,o);const[m,g]=Ec(f.shape,l);let y=m;a&&(y=_c(m,u));const b=function(e,t,n,r){const a=oe(t),s=KO({inputs:{x:e},attrs:{shape:[oe(e.shape)/a,a]},backend:r}),i=QO(s,"float32","mean",r),o=KO({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of d)i.disposeIntermediateTensorInfo(e);return b}},UP={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ye(s,a.shape);let l=u;const c=Rc(l,o);let h=a;null!=c&&(h=rD({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Oc(l.length,a.shape.length)),Ac("min",l,o);const[p,d]=Ec(h.shape,l),f=KO({inputs:{x:h},backend:n,attrs:{shape:[-1,oe(d)]}}),m=QO(f,f.dtype,"min",n);let g;return g=KO(i?{inputs:{x:m},backend:n,attrs:{shape:_c(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},GP=zO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:VF}),HP={kernelName:Pn,backendName:"webgl",kernelFunc:GP};class jP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=nF(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class KP{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=nF(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=hO("rc",r),u=hO("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const qP={kernelName:Bn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new KP(r.shape,a,s):new jP(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},XP=zO({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),YP={kernelName:zn,backendName:"webgl",kernelFunc:XP};class QP{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const ZP=zO({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),JP={kernelName:Ht,backendName:"webgl",kernelFunc:ZP},eB="return a - b;",tB=zO({opSnippet:eB,packedOpSnippet:eB,supportsComplex:!0,cpuKernelImpl:sO}),nB={kernelName:zr,backendName:"webgl",kernelFunc:tB};function rB(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=ye([s],a.shape),o=AP({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=_c(o.shape,i),l=KO({inputs:{x:o},backend:n,attrs:{shape:u}}),c=tB({inputs:{a,b:l},backend:n}),h=IL({inputs:{x:c},backend:n}),p=tD({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=KO({inputs:{x:p},backend:n,attrs:{shape:u}}),f=ZP({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const aB={kernelName:Cr,backendName:"webgl",kernelFunc:rB},sB={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:rB({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new QP(l,c,s),p=[[i]],d=n.runWebGLProgram(h,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),d}},iB={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=UF(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=He().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new wO(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new bO(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(a,[r],r.dtype)}},oB=jp,uB={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){ra("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:h}=oB(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},lB=Kp,cB={kernelName:jn,backendName:"webgl",kernelFunc:function(e){ra("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:d}=lB(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},hB=qp,pB={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){ra("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=hB(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class dB{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const fB={kernelName:Xn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=oe(a.shape),l=new dB(u,s,i,o),c=KO({inputs:{x:a},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(l,[c],a.dtype);n.disposeIntermediateTensorInfo(c);const p=KO({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(h),p}};function mB(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=iM({inputs:{input:r},backend:n}),t=mB({inputs:{x:e},backend:n}),a=wM({inputs:{input:r},backend:n}),s=mB({inputs:{x:a},backend:n}),i=AO({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return OL({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const gB={kernelName:Yr,backendName:"webgl",kernelFunc:mB},yB={kernelName:qn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=iM({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=wM({inputs:{input:a},backend:r}),i=mB({inputs:{x:s},backend:r}),o=AO({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return OL({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},bB={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return NL({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ae(s,e.shape,"All tensors passed to stack must have matching shapes"),re(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=SM({inputs:t.map((e=>{const t=NL({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class xB{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=nF(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class vB{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=nF(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=hO("rc",r),u=hO("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const wB=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===oe(a.shape)){const e=s.map(((e,t)=>e[0]+a.shape[t]+e[1]));return OL({backend:n,attrs:{shape:e,value:i,dtype:a.dtype}})}const o=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vB(a.shape,s,i):new xB(a.shape,s,i),u=[[i]];return n.runWebGLProgram(o,[a],a.dtype,u)},kB={kernelName:Qn,backendName:"webgl",kernelFunc:wB},IB=zO({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),SB={kernelName:Jn,backendName:"webgl",kernelFunc:IB},NB={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],l=ye(s,a.shape);let c=l;const h=Rc(c,o);let p,d=a;if(null!=h&&(d=rD({inputs:{x:a},backend:n,attrs:{perm:h}}),c=Oc(c.length,o),u.push(d)),Ac("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:r,outDtype:a}=HF(d.shape,d.dtype,e,c);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=Ec(d.shape,c),r=oe(t),s=KO({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),i=QO(s,as(a.dtype),"prod",n);p=KO({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(p);const e=_c(p.shape,l);p=KO({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},TB=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=jF(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},$B={kernelName:nr,backendName:"webgl",kernelFunc:TB},CB=BO({opSnippet:"return 1.0 / x;"}),EB={kernelName:ar,backendName:"webgl",kernelFunc:CB},_B=BO({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),AB={kernelName:sr,backendName:"webgl",kernelFunc:_B},RB=BO({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),FB={kernelName:hr,backendName:"webgl",kernelFunc:RB};class OB{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class DB{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const MB={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=He().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new DB(a.shape,u,l,s,i):new OB(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],"float32")}};class LB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const PB={kernelName:cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new LB(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class BB{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class zB{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const VB={kernelName:or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=He().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new zB(a.shape,u,l,s,i):new BB(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],a.dtype)}};class WB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const UB={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new WB(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class GB{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=nF(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class HB{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=hO("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=nF(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const jB={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=ye(s,a.shape);if(0===i)return EO({inputs:{x:a},backend:n});const u=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HB(a.shape,o):new GB(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}};class KB{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const qB={kernelName:Jr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new KB(r.shape,s),[l,c]=zd(i,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(u,[r],r.dtype,h)}},XB=BO({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),YB={kernelName:dr,backendName:"webgl",kernelFunc:XB},QB=BO({opSnippet:"return inversesqrt(x);",cpuKernelImpl:KF}),ZB={kernelName:fr,backendName:"webgl",kernelFunc:QB};class JB{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=nF(a.length),u=nF(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const ez={kernelName:mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=uo(0,a,i),p=[h/l,l];if(0===h)return n.makeTensorInfo(i,a.dtype);const d=KO({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=KO({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new JB(u,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=KO({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class tz{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=nF(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const nz={kernelName:gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new tz(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],rs(a.dtype,s.dtype))}},rz=BO({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${jd};\n  float scale = ${Kd};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),az={kernelName:yr,backendName:"webgl",kernelFunc:rz},sz=BO({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:qF}),iz={kernelName:kr,backendName:"webgl",kernelFunc:sz},oz=BO({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),uz={kernelName:wr,backendName:"webgl",kernelFunc:oz},lz=BO({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),cz={kernelName:xr,backendName:"webgl",kernelFunc:lz},hz=BO({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),pz={kernelName:vr,backendName:"webgl",kernelFunc:hz},dz=BO({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),fz={kernelName:Ir,backendName:"webgl",kernelFunc:dz},mz={kernelName:Tr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;re(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=[],c=wB({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=Vd(c.shape,s,o,!1),p=Wd(h.length,s.length,!1),d=Ud(c.shape,s,o,!1),f=KO({inputs:{x:c},backend:n,attrs:{shape:h}}),m=rD({inputs:{x:f},backend:n,attrs:{perm:p}}),g=KO({inputs:{x:m},backend:n,attrs:{shape:d}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},gz={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=QF(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},yz={kernelName:_r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,h]=ZF(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},bz={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=JF(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},xz={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=JF(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},vz={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:h}=uo(0,a,o),p=new JB(l,u,a.shape.length,s.shape.length,c,[h,1],!1),d=n.runWebGLProgram(p,[s,a,i],s.dtype),f=KO({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),f}},wz={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ye(i,a.shape)[0],u=gf(a,s,o),l=a.shape.length,c=new Array(l).fill(0),h=a.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=JD({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},kz="return sqrt(x);",Iz=BO({opSnippet:kz,packedOpSnippet:kz,cpuKernelImpl:eO}),Sz={kernelName:Sr,backendName:"webgl",kernelFunc:Iz},Nz=BO({opSnippet:"return x * x;"}),Tz={kernelName:Dr,backendName:"webgl",kernelFunc:Nz},$z="return (a - b) * (a - b);",Cz=zO({opSnippet:$z,packedOpSnippet:$z}),Ez={kernelName:Or,backendName:"webgl",kernelFunc:Cz},_z={kernelName:Qr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new bO(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class Az{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=nF(n.length),s=nF(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const Rz={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=No(a.shape,s,i,o,u,l,c,h,p);let w;if(m)w=KO({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){re(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=ho(b,x,v),t=JD({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});w=KO({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=Ni(a.shape,a.dtype,e),r=tO(d,t,v,b);w=n.makeTensorInfo(f,a.dtype,r.values)}else{const e=new Az(b,v,d);w=n.runWebGLProgram(e,[a],a.dtype)}const k=KO({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}},Fz={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=nO(p,d,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},Oz={kernelName:Pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=rO(o,u,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},Dz={kernelName:Br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=aO(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},Mz=BO({opSnippet:"return tan(x);"}),Lz={kernelName:Vr,backendName:"webgl",kernelFunc:Mz},Pz=BO({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Bz={kernelName:Wr,backendName:"webgl",kernelFunc:Pz};class zz{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=nF(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function Vz(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>Da(e))):e,r=Ni(a.shape,a.dtype,t),i=iO(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new zz(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}const Wz={kernelName:Ur,backendName:"webgl",kernelFunc:Vz};class Uz{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Gz{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Hz(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function jz(e){let t=1;for(;t<e;)t*=2;return t}const Kz={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=He().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=He().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([a])||c<o||s>u){const e=n.readSync(a.dataId),[t,r]=oO(e,l,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[a,OL({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(a.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(a):a,f=oe(l)/c,m=KO({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&Hz(n,d);const g=jz(s),y=jz(c);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{const a=x(),s=new Uz(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),Hz(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new Gz([f,e/2]),a=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),Hz(n,s);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=JD({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),Hz(n,w);let k=ZL({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});Hz(n,m);const I=l.slice(0,-1);I.push(s),w=b,b=KO({inputs:{x:b},attrs:{shape:I},backend:n}),Hz(n,w);const S=k;return k=KO({inputs:{x:k},attrs:{shape:I},backend:n}),Hz(n,S),[k,b]}};class qz{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Xz={kernelName:Hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,p,d]=a.shape,[f,m]=null!=l?l:[h,p],g=new qz(h,p,i,o,u,[c,f,m,d]);return n.runWebGLProgram(g,[a,s],"float32")}},Yz={kernelName:Kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;BR(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=lO(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},Qz={kernelName:qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[s]=e;const t=JD({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),r=KO({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Zz{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const Jz={kernelName:Xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[];let l=0;const c=Rc([l],o);let h=a;null!=c&&(h=rD({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(h),l=Oc(1,o)[0]);const p=_f(h.shape,l,i),d=oe([h.shape[l]]),f=KO({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});u.push(f);const m=as(a.dtype),g=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],l=Ef(o,s),c=new Zz({windowSize:l,inSize:o,batchSize:i,numSegments:s},t),h=n.compileAndRun(c,[e,r],a);if(u.push(h),h.shape[1]===s)return h;const p=TB({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),d=Vz({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});return u.push(p),u.push(d),g(h,t,d,a,s)},y=KO({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){u.push(y);const e=Fc(c);b=rD({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},eV=[iD,uD,cD,pD,mD,bD,xD,vD,TD,$D,ED,AD,FD,DD,LD,zD,VD,GD,HD,jD,XD,tM,nM,rM,uM,hM,fM,RO,yM,NM,AM,MM,LM,PM,BM,zM,WM,GM,jM,YM,eL,tL,rL,iL,lL,cL,pL,fL,mL,yL,bL,vL,kL,SL,TL,EL,RL,DL,LL,zL,WL,HL,KL,qL,YL,JL,tP,rP,_O,aP,kM,iP,uP,cP,DO,pP,fP,mP,yP,xP,wP,IP,NP,CP,_P,RP,OP,DP,MP,BP,zP,VP,WP,UP,HP,qP,YP,sB,jO,iB,uB,cB,pB,sM,fB,yB,bB,kB,SB,PO,NB,$B,oM,JP,EB,AB,FB,qO,MB,PB,VB,UB,jB,qB,YB,ZB,ez,nz,az,iz,uz,cz,pz,eM,aB,fz,mz,gz,yz,bz,xz,vz,wz,Sz,Tz,Ez,_z,Rz,Fz,Oz,Dz,nB,nD,Lz,Bz,Wz,Kz,Xz,aD,Yz,Qz,Jz,gB];for(const e of eV)ca(e);const tV={"tfjs-core":Vo,"tfjs-backend-cpu":"3.15.0","tfjs-backend-webgl":"3.15.0","tfjs-data":ZN,"tfjs-layers":ox,"tfjs-converter":HS,tfjs:"3.15.0"}},1735:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.addAnglesListener=function(e){_.listener=e},t.addKeypointsListener=function(e){E.listener=e},t.addProgressListener=function(e){A.listener=e},t.detectKeypointsEvent=t.detectAnglesEvent=t.ctx=t.counter=t.allExericseCount=void 0,t.getAllAnglesData=function(){return h.state.allAngleInfo},t.getAnglesInfo=void 0,t.getAssesmentData=function(){return function(){if(Object.keys(h.state.assesmentInfo).length>0){const e=l.default.excersise.name,t=h.state.assesmentInfo[e].angles,n=l.default.excersise.angles,r={};r[e]={angles:{}};for(let a=0;a<n.length;a++){const s=(0,c.getJointLabel)(n[a]),i=t[s];r[e].angles[s]=i}return r}console.log("no angles calculated yet")}()},t.getCarePlanData=function(){return h.state.outputData},t.hold=void 0,t.launchModel=async function(){await async function(){null!=u.loadingEleId&&null!=u.mainEleId&&(0,o.toggleLoadingUI)(!0,u.loadingEleId,u.mainEleId);try{await async function(){await async function(){if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new Error("Browser API navigator.mediaDevices.getUserMedia not available");(0,o.isMobile)();const e=await navigator.mediaDevices.getUserMedia({audio:!1,video:{deviceId:{exact:u.cameraId},facingMode:"user",width:u.videoWidth,height:u.videoHeight}});u.video.srcObject=e,await new Promise((e=>{u.video.onloadedmetadata=()=>{e(u.video)}})),u.video.play(),t.newVideoWith=m=u.video.videoWidth,t.newVideoHeight=g=u.video.videoHeight,u.video.width=m,u.video.height=g}()}()}catch(e){throw alert("this browser does not support video capture,or this device does not have a camera"),e}null!=u.loadingEleId&&null!=u.mainEleId&&(0,o.toggleLoadingUI)(!1,u.loadingEleId,u.mainEleId),function(){t.ctx=x=u.canvas.getContext("2d"),x.fillStyle="red",x.fillRect(0,0,150,75),u.canvas.width=m,u.canvas.height=g;let e=0;!0===u.showAngles&&(e=150,u.canvas.width+=e),async function e(){if(!0===h.state.stopped)x.clearRect(0,0,m,g),x.save(),x.drawImage(u.video,0,0,m,g),x.restore();else if(null!==S){if(null===u.video.srcObject)return;let e=null;try{e=await S.estimatePoses(u.video,T)}catch(e){return void console.log("falling")}if(x.clearRect(0,0,m,g),x.save(),0===u.cameraFlag&&(x.scale(-1,1),x.translate(-m,0)),x.drawImage(u.video,0,0,m,g),void 0!==e&&e.length>0){!0===w&&(u.video.style.display="none",u.canvas.style.display="block",w=!1);const t=e[0].keypoints;(0,o.addDerivedKeypoints)(t),!0===u.drawLine?((0,p.drawLinesFunc)(t,x),x.restore()):((0,o.drawSkeleton)(t,x),(0,o.drawKeypoints)(t,x),x.restore(),E.keypoints=t),u.isSupervised&&!u.enterprise||(0,o.drawTimerOnCanvas)(x,u.canvas.width,u.canvas.height)}else x.restore()}requestAnimationFrame(e)}()}()}()},t.newVideoWith=t.newVideoHeight=void 0,t.pause=function(){h.state.stopped=!0},t.progressChangeEvent=t.poseClassifier=void 0,t.resetData=function(){console.log("Before--------------\x3e");const e=l.default.excersise.name,t=l.default.excersise.angles;if(void 0!==h.state.assesmentInfo[e]){console.log(h.state.assesmentInfo[e]),console.log(h.state.assesmentInfo[e].angles);const n=h.state.assesmentInfo[e].angles;for(let e=0;e<t.length;e++){n[(0,c.getJointLabel)(t[e])]={min:270,max:0}}console.log("This is angles"),console.log(t),console.log("After--------------\x3e"),console.log(h.state.assesmentInfo[e].angles)}},t.restart=D,t.screenShot=function(){if(0===h.state.orientation)return;const e=h.state.orientation;h.state.orientation=0,(0,p.saveAngles)(e),console.log("orientation",h.state.orientation)},t.selectOrientation=function(e){h.state.orientation=e,console.log("orientation",h.state.orientation)},t.setAllExcersiseParams=function(e){y=e,t.allExericseCount=b=y.length,console.log("all",y),R()},t.setExcersiseParams=O,t.startExercise=R,t.stop=function(){u.canvas.getContext("2d").clearRect(m,0,150,g);for(const t of Object.entries(h.initialState)){var e=(0,a.default)(t,2);const n=e[0],r=e[1];h.state[n]=r}h.state.stopped=!0};var a=r(n(3038));n(4903),n(264);var s=f(n(7213)),i=f(n(3177)),o=n(1028),u=n(7156),l=r(n(489)),c=n(392),h=n(1244),p=n(3660);function d(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(d=function(e){return e?n:t})(e)}function f(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var n=d(t);if(n&&n.has(e))return n.get(e);var r={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var i=a?Object.getOwnPropertyDescriptor(e,s):null;i&&(i.get||i.set)?Object.defineProperty(r,s,i):r[s]=e[s]}return r.default=e,n&&n.set(e,r),r}let m,g,y,b;t.newVideoHeight=g,t.newVideoWith=m,t.allExericseCount=b;let x,v=0;t.counter=v,t.ctx=x;let w=!0;const k=window.location.origin,I=`${k}/images/0.worker.js`;let S=null,N=null;const T={maxPoses:1,flipHorizontal:!1};let $;async function C(e,t){let n={};e===s.SupportedModels.BlazePose&&("mediapipe"===t?n={runtime:t,modelType:"full",solutionPath:"https://cdn.jsdelivr.net/npm/@mediapipe/pose"}:"tfjs"===t&&(n={runtime:t,modelType:"full"})),console.log(n);try{S=await s.createDetector(e,n),console.log("model loaded 1.1")}catch(e){throw e}}t.poseClassifier=$;const E={keypointsObj:{},defaultListener:function(e){},listener:function(e){},set keypoints(e){this.keypointsObj=e,this.defaultListener(e)}};t.detectKeypointsEvent=E;const _={anglesObj:{},defaultListener:function(e){},listener:function(e,t){},set angles(e){this.anglesObj=e,this.defaultListener(e),this.listener(e,l.default.excersise.name)}};t.detectAnglesEvent=_;const A={listener:function(e,t,n,r){},set progress({setCount:e,repCount:t,counterCount:n,id:r}){this.listener(e,t,n,r)}};function R(){b!==v&&(D(),O(y[v]),t.counter=v+=1)}let F;function O(e){const n=l.default.excersise;l.default.excersise={...n,...e},t.hold=F=l.default.excersise.hold,console.log("PARAMS.excersise",l.default.excersise)}function D(){h.state.stopped=!1}t.progressChangeEvent=A,t.getAnglesInfo=(e,t)=>new Promise(((n,r)=>{const a=new MessageChannel;a.port1.onmessage=({data:e})=>{if(a.port1.close(),e.error)r(e.error);else{const t=e.result;n(t)}},N.postMessage([e,t],[a.port2])})),t.hold=F,(async()=>{try{console.log("trying loading mediapipe backend..."),await C(s.SupportedModels.BlazePose,"mediapipe")}catch(e){console.log("Falling back to tfjs backend...."),await C(s.SupportedModels.BlazePose,"tfjs")}await async function(){console.log("loading..."),t.poseClassifier=$=await i.loadLayersModel(`${k}/model/correction_layers/model.json`),console.log("classification model loaded")}()})(),async function(){let e;try{if(console.log("worker url",I),e=await fetch(I),!e.ok)throw new Error("Problem getting workers file")}catch(t){console.log(t.message),e=await fetch("https://myphysio.digitaldarwin.in/images/0.worker.js")}const t=await e.blob();N=new Worker(URL.createObjectURL(t))}(),console.log("this is message from library. MIN/MAX"),navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia},1028:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.addDerivedKeypoints=function(e){const t=e[d.leftShoulderInd],n=e[d.rightShoulderInd],r=e[d.leftHipInd],a=e[d.rightHipInd],s=t.x,i=t.y,o=t.z;let u=(s+n.x)/2,l=(i+n.y)/2,c=(o+n.z)/2,h=Math.min(t.score,n.score);e.push({x:u,y:l,z:c,name:"neck",score:h});const p=r.x,f=r.y,m=r.z;u=(p+a.x)/2,l=(f+a.y)/2,c=(m+a.z)/2,h=Math.min(r.score,a.score),e.push({x:u,y:l,z:c,name:"pelvic",score:h})},t.displayAngles=function(e,t,n=1,r=.2){const a=t[d.neckInd].x,s=u.state.coloredAngles;if(0!==s.length)for(let t=0;t<s.length;t++){const n=s[t],i=n[n.length-1],o=n[0];let u=n[1];const l=o[0],c=o[1];u=Math.round(10*u)/10,u=`${u}`,o[2]<r||E(e,l,c,a,u,i)}},t.drawKeypoints=function(e,t){const n=s.util.getKeypointIndexBySide(v);3===n.middle.length&&(n.middle.pop(),n.middle.pop()),n.middle.push(d.neckInd),n.middle.push(d.pelvicInd),t.fillStyle=u.state.color,t.strokeStyle=u.state.color,t.lineWidth=2;for(const r of n.middle)T(e[r],t,r);for(const r of n.left)2!=r&&3!=r&&9!=r&&T(e[r],t,r);for(const r of n.right)5!=r&&6!=r&&10!=r&&T(e[r],t,r);!m.isSupervised&&I>=3&&u.state.showTimer&&(0,y.giveMidpointsHack)(e)},t.drawSkeleton=function(e,t){t.fillStyle=u.state.color,t.strokeStyle=u.state.color,t.lineWidth=2;const n=s.util.getAdjacentPairs(v);38===n.length&&(n.pop(),n.pop()),n.push([d.noseInd,d.neckInd]),n.push([d.neckInd,d.pelvicInd]),n.forEach((([n,r],a)=>{if(a>=2&&a<=7||8==a)return;const s=e[n],i=e[r],o=null!=s.score?s.score:1,u=null!=i.score?i.score:1;o>=.5&&u>=.5&&(t.beginPath(),t.moveTo(s.x,s.y),t.lineTo(i.x,i.y),t.stroke())}))},t.drawTimerOnCanvas=function(e,t,n){!1!==u.state.showTimer&&(m.enterprise&&m.drawLine&&!g.visibleE||(m.enterprise&&m.drawLine&&-1===I&&(k=I,I=""),e.fillStyle="rgb(255, 0, 0)",e.font="900 160px lcd-bold",e.fillText(I,t/2-30,n/2+60),m.enterprise&&m.drawLine&&-1===k&&((0,g.takeSS)(k),u.state.showTimer=!1,k=0)))},t.getAnglesInfoSync=function(e,t){const n=i.tensor(e.map((e=>[e.x,e.y,e.score]))),r=(0,h.getJointLabels)(),s=(0,h.getJoints)(),o=[],u=[];for(let n=0;n<t.length;n++){const i=t[n];o.push(s[i]);var l=(0,a.default)(s[i],3);const c=l[0],h=l[1],p=l[2],d=e[c],f=e[h],m=e[p],g=f.x,y=f.y,b=d.score,x=f.score,v=m.score,w=Math.sqrt(b*b+x*x*(v*v)/3),k=r[i];u.push([g,y,w,k])}let c=o.map((e=>{const t=i.tensor1d(e,"int32");return i.slice(i.gather(n,t),[0,0],[-1,2])}));c=i.reshape(i.concat(c,0),[-1,3,2]);const p=i.reshape(i.sub(i.slice(c,[0,0,0],[-1,1,-1]),i.slice(c,[0,1,0],[-1,1,-1])),[-1,2]),d=i.reshape(i.sub(i.slice(c,[0,2,0],[-1,1,-1]),i.slice(c,[0,1,0],[-1,1,-1])),[-1,2]),f=i.mul(i.sqrt(i.sum(i.pow(p,2),1)),i.sqrt(i.sum(i.pow(d,2),1)));return{info:u,angles:i.mul(i.acos(i.div(i.sum(i.mul(p,d),1),f)),180/Math.PI).arraySync()}},t.highlightKeypoints=function(e,t=1){for(const t of Object.entries(u.state.coloredJoints)){var n=(0,a.default)(t,2);n[0];const s=n[1];for(const t of Object.entries(s)){var r=(0,a.default)(t,2);r[0];const n=r[1];if(null!==n){const t=n[n.length-1];for(let r=0;r<n.length-1;r++){const a=n[r],s=a.x,i=a.y;a.score>.2&&drawCircle(e,i,s,20,t)}}}}},t.isMobile=function(){return/Android/i.test(navigator.userAgent)||/iPhone|iPad|iPod/i.test(navigator.userAgent)},t.startTimer=void 0,t.supervised=function(e){if(u.state.repsDone>=p.default.excersise.totalReps&&setTimeout((()=>{f.progressChangeEvent.progress={setCount:u.state.setsDone,repCount:u.state.repsDone,counterCount:"",id:""},(0,f.stop)()}),500),C(e),!1===u.state.allKeyPointsVisibleOnce)return;var t=(0,h.getPrimaryAngles)(e);t.info;const n=t.angles;M(e,n),function(e){const t=u.state.maxAng,n=u.state.minAng,r=u.state.first,a=e[u.state.repJoint],s=u.state.prev_angle,i=u.state.prev_dangle,o=u.state.goal,l=p.default.excersise.minAmp,c=a-s;u.state.trigger=0,!0!==r&&(1===o&&c>0&&a-n>l?(R++,a<s&&(R=0),R>=3&&(u.state.repsDone+=1,u.state.goal=-1,R=0)):-1===o&&c<0&&t-a>l&&(u.state.goal=1),c<0&&i>=0&&s-n>l?(u.state.maxAng=s,u.state.trigger=1,u.state.minAng=t):c>0&&i<=0&&t-s>l&&(u.state.minAng=s,u.state.trigger=2)),u.state.first=!1,u.state.prev_angle=a,!1===u.state.first&&(u.state.prev_dangle=c),_()}(n),0!==u.state.trigger&&(0,h.onTriggerUnsupervised)(n)},t.toggleLoadingUI=function(e,t="loading",n="main"){e?(document.getElementById(t).style.display="block",document.getElementById(n).style.display="none"):(document.getElementById(t).style.display="none",document.getElementById(n).style.display="block")},t.unsupervised=function(e,t,n){if(!1===u.state.isAllowed)return;if(C(e),!1===u.state.allKeyPointsVisibleOnce)return void(0,l.speak)(c.lang[l.selectedLang].notFullBody);if(!u.state.initialPostureMatched)return void B(e);u.state.hideROMPannel&&((0,l.speak1)(c.lang[l.selectedLang].startExercise),u.state.hideROMPannel=!1,n.canvas.hidden=!1);var r=(0,h.getPrimaryAngles)(e);r.info;const s=r.angles;M(e,s),function(e,t,n){const r=u.state.maxAng,a=u.state.minAng,s=u.state.first,i=e[u.state.repJoint],o=u.state.prev_angle,c=u.state.prev_dangle,h=u.state.goal,d=p.default.excersise.minAmp,g=i-o;u.state.trigger=0,!0!==s&&(1===h&&g>0&&i-a>d?(R++,i<o&&(R=0),"min"===f.hold&&1===O&&!1===u.state.showTimer&&(u.state.angleAtHold=i,D(),O=2),R>=3&&(u.state.goal=-1)):-1===h&&g<0&&r-i>d&&(F++,i>o&&(F=0),"max"===f.hold&&2===F&&2===O&&!1===u.state.showTimer&&(u.state.angleAtHold=i,D(),O=1),F>=3&&(u.state.goal=1)),u.state.showTimer&&!u.state.gotPredictionResult&&B(t),u.state.showTimer&&u.state.gotPredictionResult&&function(e){if(u.state.currHoldRep!==u.state.prevHoldRep)if(u.state.prevHoldRep=u.state.currHoldRep,u.state.correct>=u.state.incorrect)(0,l.speak1)("Doing good"),u.state.wrongPostureCount=0;else if(u.state.correct<u.state.incorrect){if(u.state.wrongPostureCount+=1,1===u.state.wrongPostureCount&&(0,l.speak1)("Incorrect posture"),2===u.state.wrongPostureCount)return void(0,l.speak1)("Please watch the video carefully & follow");3===u.state.wrongPostureCount&&((0,l.speak1)("Abandoning the exercise"),L(e))}}(n),u.state.showTimer&&Math.abs(i-u.state.angleAtHold)>=25&&(clearInterval(A),(0,l.speak1)("Restart"),u.state.showTimer=!1,"min"===f.hold?O=2:"max"===f.hold&&(O=1),u.state.gotPredictionResult=!1),R>=3&&!1===u.state.showTimer&&(R=0,setTimeout((()=>{u.state.repsDone+=1}),1e3)),F>=3&&!1===u.state.showTimer&&(F=0),g<0&&c>=0&&o-a>d?(u.state.maxAng=o,u.state.trigger=1,u.state.minAng=r,m.isSupervised||!1!==u.state.showTimer||(O=2)):g>0&&c<=0&&r-o>d&&(u.state.minAng=o,u.state.trigger=2,m.isSupervised||!1!==u.state.showTimer||(O=1))),u.state.first=!1,u.state.prev_angle=i,!1===u.state.first&&(u.state.prev_dangle=g),_()}(s,e,n),function(e,t,n){const r=(0,h.getJointAcronym)(p.default.excersise.primaryAngles[u.state.repJoint]);t=function(e){var t=(0,a.default)(p.default.excersise.primaryAngles,2);const n=t[0],r=t[1];return(2===n&&3===r||4===n&&5===r||6===n&&7===r||12===n&&13===r)&&(e[0]=Math.abs(180-e[0]),e[1]=Math.abs(180-e[1])),(8===n&&9===r||10===n&&11===r||14===n&&15===r)&&(e[0]=Math.abs(90-e[0]),e[1]=Math.abs(90-e[1])),e}(t),function(e,t,n,r){const a=n*Math.PI/360,s=t*Math.cos(a),i=t*Math.sin(a);r.clearRect(-m.jCanvasWidth/2,0,m.jCanvasWidth,m.jCanvasHeight),r.fillStyle="rgba(0, 0, 0)",r.strokeStyle="rgba(255, 255, 255)",r.lineWidth="2",r.font="20px Arial",r.fillRect(-m.jCanvasWidth/2,0,m.jCanvasWidth,m.jCanvasWidth),r.fillStyle="rgba(255, 255, 255)",r.fillText(e,-m.jCanvasWidth/2+15,35);const o=p.default.excersise.totalReps;let l=0;l=0===u.state.repsDone?0:u.state.repsDone%o==0?o:u.state.repsDone%o,r.font="20px Arial",r.fillText(`Set: ${u.state.setsDone}`,-m.jCanvasWidth/2+10,140),r.beginPath(),$({x:0,y:75,score:1},r),r.moveTo(0,75),$({x:s,y:75-i,score:1},r),r.lineTo(s,75-i),$({x:s,y:75-i,score:1},r),r.moveTo(0,75),$({x:s,y:i+75,score:1},r),r.lineTo(s,i+75),r.fillStyle="red",r.font="bold 20px Arial",r.fillText("Rep: ",-m.jCanvasWidth/2+10,m.jCanvasWidth+30),l>=10&&o>=10?(r.font="900 60px lcd-bold",r.fillText(`${l}-${o}`,-m.jCanvasWidth/2,m.jCanvasWidth+90)):o>=10&&l<10?(r.font="900 75px lcd-bold",r.fillText(`${l}-${o}`,-m.jCanvasWidth/2,m.jCanvasWidth+105)):(r.font="900 100px lcd-bold",r.fillText(`${l}-${o}`,-m.jCanvasWidth/2,m.jCanvasWidth+125)),r.stroke()}(r,m.jointRadius,t[u.state.repJoint],n),function(e,t,n){var r=(0,a.default)(e,2);const s=r[0],i=r[1],o=s*(Math.PI/360),u=i*(Math.PI/360);n.lineWidth=t,n.strokeStyle="rgba(0, 255, 0, 0.5)",n.beginPath(),n.arc(0,75,t/2,-o,-u,!0),n.stroke(),n.beginPath(),n.arc(0,75,t/2,o,u,!1),n.stroke(),n.strokeStyle="rgba(255, 0, 0, 0.2)",n.beginPath(),n.arc(0,75,t/2,0,-o,!0),n.stroke(),n.beginPath(),n.arc(0,75,t/2,0,o,!1),n.stroke()}(p.default.excersise.ROMs[u.state.repJoint],m.jointRadius,n)}(0,s,n),0!==u.state.trigger&&(0,h.onTrigger)(e),function(e){u.state.setsDone===p.default.excersise.totalSets&&(f.progressChangeEvent.progress={setCount:u.state.setsDone,repCount:u.state.repsDone,counterCount:f.counter,id:"getData"},L(e))}(n)};var a=r(n(3038));n(4903);var s=n(7213),i=x(n(5363)),o=x(n(3177)),u=n(1244),l=n(3146),c=n(2434),h=n(392),p=r(n(489)),d=n(4248),f=n(1735),m=n(7156),g=(n(1696),n(3660)),y=n(182);function b(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(b=function(e){return e?n:t})(e)}function x(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var n=b(t);if(n&&n.has(e))return n.get(e);var r={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var i=a?Object.getOwnPropertyDescriptor(e,s):null;i&&(i.get||i.set)?Object.defineProperty(r,s,i):r[s]=e[s]}return r.default=e,n&&n.set(e,r),r}const v=u.state.model,w=v===s.SupportedModels.BlazePose?.65:.4;let k,I="";const S=(0,h.getJoints)();function N(e,t,n,r,a){const s=new Path2D;s.arc(e.x,e.y,9,0,2*Math.PI),t.fillStyle=n,t.fill(s);const i=new Path2D;i.arc(e.x,e.y,6,0,2*Math.PI),t.fillStyle=r,t.fill(i);const o=new Path2D;o.arc(e.x,e.y,3,0,2*Math.PI),t.fillStyle=a,t.fill(o)}function T(e,t,n){const r=null!=e.score?e.score:1;var s=(0,a.default)(p.default.excersise.primaryAngles,2);const i=s[0],o=s[1];if(r>=w)if(u.state.allKeyPointsVisibleOnce&&u.state.initialPostureMatched)S[i][1]===n||S[o][1]===n?N(e,t,"rgba(34, 193, 34, 0.2)","rgba(34, 193, 34, 0.5)","rgba(34, 193, 34)"):N(e,t,"rgba(255, 255, 255, 0.2)","rgba(255, 255, 255, 0.5)","rgba(255, 255, 255)");else{const n=new Path2D;n.arc(e.x,e.y,3,0,2*Math.PI),t.fill(n)}}function $(e,t){if((null!=e.score?e.score:1)>=w){const n=new Path2D;n.arc(e.x,e.y,3,0,2*Math.PI),t.fill(n),t.stroke(n)}}function C(e){if(!0===u.state.allKeyPointsVisibleOnce)return;const t=e[d.noseInd].score,n=e[d.leftShoulderInd].score,r=e[d.rightShoulderInd].score,a=e[d.leftAnkleInd].score,s=e[d.rightAnkleInd].score;let i=!0;[t,n,r,a,s].forEach((e=>{e<w&&(i=!1)})),!0===i?(m.isSupervised&&(u.state.color="rgba(255, 255, 255, 1)"),u.state.allKeyPointsVisibleOnce=!0):!1===i&&(u.state.color=u.state.color,u.state.allKeyPointsVisibleOnce=!1)}function E(e,t,n,r,a,s){e.font="18px Arial",e.fillStyle=s,e.strokeStyle=s,t>r?(e.moveTo(t,n),e.lineTo(t+35,n+27),e.moveTo(t,n),e.lineTo(t+35,n-27),e.stroke(),e.beginPath(),e.arc(t+50,n,25,0,2*Math.PI),e.fill(),e.fillStyle="white",e.fillText(a,t+32,n+6)):(e.moveTo(t,n),e.lineTo(t-35,n+27),e.moveTo(t,n),e.lineTo(t-35,n-27),e.stroke(),e.beginPath(),e.arc(t-50,n,25,0,2*Math.PI),e.fill(),e.fillStyle="white",e.fillText(a,t-64,n+6))}function _(){0!==u.state.repsDone&&u.state.repsDone!==u.state.prevRepCount&&u.state.repsDone%p.default.excersise.totalReps==0&&(u.state.setsDone+=1,u.state.prevRepCount=u.state.repsDone,u.state.setsDone!==p.default.excersise.totalSets||m.isSupervised||f.allExericseCount===f.counter?m.isSupervised||u.state.setsDone===p.default.excersise.totalSets||(0,l.speak1)(`${c.lang[l.selectedLang].nextSet}`):(0,l.speak1)(`${c.lang[l.selectedLang].nextExercise}`))}let A,R=0,F=0,O=0;const D=function(){if(u.state.showTimer)return;m.enterprise||(0,l.speak1)("Hold"),u.state.gotPredictionResult=!1,u.state.currHoldRep+=1,u.state.correct=u.state.incorrect=0,u.state.showTimer=!0;let e=(new Date).getTime()+5,t=(new Date).getTime();I=5,A=setInterval((function(){m.enterprise&&m.drawLine&&!g.visibleE&&(u.state.showTimer=!1,clearInterval(A),I=""),I=e-t,e-=1,I<=-1&&(clearInterval(A),m.enterprise||((0,l.speak1)("Continue"),u.state.showTimer=!1),"min"===f.hold?O=2:"max"===f.hold&&(O=1),u.state.gotPredictionResult=!1)}),1e3)};function M(e,t){if(t.length>1){const t=(0,h.getJointKeypoints)(p.default.excersise.primaryAngles[0])[1],n=(0,h.getJointKeypoints)(p.default.excersise.primaryAngles[1])[1],r=e[t].z,a=e[n].z;u.state.repJoint=(0,h.identifyRepJoint)(r,a)}}function L(e){f.allExericseCount===f.counter&&(0,l.speak)(c.lang[l.selectedLang].exerciseComplete),(0,f.stop)(),u.state.color="red",setTimeout((()=>{e.canvas.hidden=!0}),1e3),u.state.outputData={},(0,f.startExercise)(),console.log("starting new exercise")}t.startTimer=D;const P=["ST1","SI5","ST10","SI1","ST11","SI4","ST5","ST1","ST12"];function B(e){const t=e[0].x/f.newVideoWith,n=e[0].y/f.newVideoHeight;let r=[];for(let a=0;a<33;a++)r.push(e[a].x/f.newVideoWith-t),r.push(e[a].y/f.newVideoHeight-n);r=o.reshape(r,[1,-1]),f.poseClassifier.predict(r).array().then((e=>{const t=Math.max(...e[0]);if(t>.8){const n=P[e[0].indexOf(t)];if(console.log(n),!u.state.initialPostureMatched&&p.default.excersise.initialPosture===n)return u.state.initialPostureMatched=!0,u.state.initialPostureMatched||(0,l.speak)("Incorrect position"),void(u.state.isAllowed&&(u.state.color="rgba(255, 255, 255, 1)"));I>=3&&u.state.showTimer?p.default.excersise.derivedPosture===n?u.state.correct+=1:u.state.incorrect+=1:u.state.gotPredictionResult=!0}}))}},4291:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getResAPI=void 0;var r=n(3146);t.getResAPI=async function(e){try{const t={text:`${e}`,languageCode:`${r.selectedLang}`},n=await fetch("https://dev.physioai.care/sendMessage",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),a=await n.json();if("success"!=a.message||!n.ok)throw new Error("API failure");return a.data}catch(e){console.log(e.message)}}},392:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.captureROMInfo=function(e){const t=e.info,n=e.angles,r=o.default.excersise.ROMs,a=o.default.excersise.name;if(void 0===s.state.ROMInfo[a]){s.state.ROMInfo[a]={};const e=o.default.excersise.totalSets,n=o.default.excersise.totalReps;for(let r=1;r<=e;r++){s.state.ROMInfo[a][r]={};for(let e=1;e<=n;e++){s.state.ROMInfo[a][r][e]={};for(let n=0;n<t.length;n++){const i=t[n][3];s.state.ROMInfo[a][r][e][i]=0}}}}for(let e=0;e<n.length;e++){const i=r[e][0],o=r[e][1],u=t[e][3];n[e]>=i&&n[e]<=o&&(s.state.ROMInfo[a][s.state.setsDone+1][s.state.repsDone+1][u]=1)}},t.checkEqual=function(e,t,n=10){return Math.abs(e-t)/e*100<=n},t.getAbsDist=function(e,t,n){const r=Math.abs(e.x-t.x);if(0===n)return r;const a=Math.abs(e.y-t.y);return 1===n?a:void 0},t.getJointAcronym=function(e){return["L Shoulder Abd/Add","R Shoulder Abd/Add","L Elbow Flex","R Elbow Flex","L Hip Fwd Flex","R Hip Fwd Flex","L Knee Flex/Ext","R Knee Flex/Ext","L Cervical Side Flex","R Cervical Side Flex","L Lateral Side Flex","R Lateral Side Flex","L wrist","R wrist","L ankle","R ankle","L Hip Abd/Add","R Hip Abd/Add","Cervical Fwd Flex"][e]},t.getJointAcronyms=d,t.getJointKeypoints=function(e){return m()[e]},t.getJointLabel=f,t.getJointLabels=function(){return["leftShoulder","rightShoulder","leftElbow","rightElbow","leftHip","rightHip","leftKnee","rightKnee","leftNeck","rightNeck","leftPelvic","rightPelvic","leftWrist","rightWrist","leftAnkle","rightAnkle","leftHipAdductionAbduction","rightHipAdductionAbduction","cervicalForwardFlexion"]},t.getJoints=m,t.getPrimaryAngles=function(e){const t=o.default.excersise.primaryAngles;return(0,u.getAnglesInfoSync)(e,t)},t.getScore=function(e,t){if(e>=t[0]&&e<=t[1])return 100;{const n=(t[0]+t[1])/2;return 100*(1-Math.abs(e-n)/n)}},t.handKeypointAdjustment=function(e,t){let n,r;const s=Math.abs(e[0].keypoints[l.wristH].x-t.keypoints[l.leftWristInd].x),i=Math.abs(e[0].keypoints[l.wristH].x-t.keypoints[l.rightWristInd].x);if(2==e.length&&e[0].score>=c&&e[1].score>=c){const a=Math.abs(e[0].keypoints[l.wristH].x-e[1].keypoints[l.wristH].x);s<i&&a>20?(r=Math.abs(e[0].keypoints[l.wristH].y-t.keypoints[l.leftWristInd].y),r<20&&(n=[l.leftHandMappings,l.rightHandMappings])):i<s&&a>20&&(r=Math.abs(e[0].keypoints[l.wristH].y-t.keypoints[l.rightWristInd].y),r<20&&(n=[l.rightHandMappings,l.leftHandMappings]))}else 1==e.length&&e[0].score>=c&&(s<i?(r=Math.abs(e[0].keypoints[l.wristH].y-t.keypoints[l.leftWristInd].y),r<20&&(n=[l.leftHandMappings])):i<s&&(r=Math.abs(e[0].keypoints[l.wristH].y-t.keypoints[l.rightWristInd].y),r<20&&(n=[l.rightHandMappings])));n&&function(e,t,n){for(const o of n.entries()){var r=(0,a.default)(o,2);const n=r[0],u=r[1];for(const r of Object.entries(u)){var s=(0,a.default)(r,2);const o=s[0],u=s[1];var i=e[n].keypoints[o];const l=i.x,c=i.y;t.keypoints[u]={...t.keypoints[u],x:l,y:c}}}}(e,t,n)},t.identifyRepJoint=function(e,t){return e<0&&t>0?0:e>0&&t<0?1:0},t.onTrigger=async function(e){const t=o.default.excersise.totalSets,n=o.default.excersise.totalReps,r=o.default.excersise.name,a=s.state.setsDone+1,u=s.state.repsDone+1;var l=await(0,i.getAnglesInfo)(e,"all");l.info;let c=l.angles;if(c=h(c),function(e,t,n,r){const a=o.default.excersise.totalSets,i=o.default.excersise.totalReps;if(n>a||r>i)return;if(void 0===s.state.outputData[e]){s.state.outputData[e]={};const n={};for(let e=0;e<t.length;e++)n[f(e)]={min:180,max:0};for(let t=1;t<=a;t++){s.state.outputData[e][t]={};for(let r=1;r<=i;r++)s.state.outputData[e][t][r]={angles:n}}}const u=s.state.outputData[e][n][r].angles;for(let e=0;e<t.length;e++){const n=f(e);var l=p(n);const r=l.min,a=l.max;t[e]>=r&&t[e]<=a&&(t[e]<u[n].min&&(u[n].min=t[e]),t[e]>u[n].max&&(u[n].max=t[e]))}}(r,c,a,u),a>t||u>n)return;const d=s.state.outputData[r][a][u].angles;i.detectAnglesEvent.angles=d},t.onTriggerUnsupervised=async function(e){const t=o.default.excersise.name;o.default.excersise.angles;var n=(0,a.default)(o.default.excersise.primaryAngles,2);const r=n[0],u=n[1];let l=[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45];l[r]=e[0],l[u]=e[1],l=h(l),function(e,t){if(void 0===s.state.assesmentInfo[t]){s.state.assesmentInfo[t]={angles:{}},s.state.allAngleInfo[t]={angles:{}};const n=s.state.assesmentInfo[t].angles,r=s.state.allAngleInfo[t].angles;for(let t=0;t<e.length;t++){const e=f(t);n[e]={max:0,min:180},r[e]={angle:0}}}const n=s.state.assesmentInfo[t].angles,r=s.state.allAngleInfo[t].angles;for(let t=0;t<e.length;t++){const s=f(t);var a=p(s);const i=a.min,o=a.max;e[t]>=i&&e[t]<=o&&(r[s].angle=e[t],e[t]<n[s].min&&(n[s].min=e[t]),e[t]>n[s].max&&(n[s].max=e[t]))}}(l,t);const c=s.state.assesmentInfo[t].angles;i.detectAnglesEvent.angles=c};var a=r(n(3038)),s=n(1244),i=n(1735),o=r(n(489)),u=n(1028),l=n(4248);const c=.65;function h(e){return e[2]=Math.abs(180-e[2]),e[3]=Math.abs(180-e[3]),e[4]=Math.abs(180-e[4]),e[5]=Math.abs(180-e[5]),e[6]=Math.abs(180-e[6]),e[7]=Math.abs(180-e[7]),e[8]=Math.abs(90-e[8]),e[9]=Math.abs(90-e[9]),e[10]=Math.abs(90-e[10]),e[11]=Math.abs(90-e[11]),e[12]=Math.abs(180-e[12]),e[13]=Math.abs(180-e[13]),e[14]=Math.abs(90-e[14]),e[15]=Math.abs(90-e[15]),e[16]=Math.abs(90-e[16]),e[17]=Math.abs(90-e[17]),e[18]=Math.abs(180-e[18]),e}function p(e){return{leftShoulder:{min:0,max:180},rightShoulder:{min:0,max:180},leftElbow:{min:0,max:150},rightElbow:{min:0,max:150},leftHip:{min:0,max:150},rightHip:{min:0,max:150},leftKnee:{min:0,max:180},rightKnee:{min:0,max:180},leftNeck:{min:0,max:60},rightNeck:{min:0,max:60},leftPelvic:{min:0,max:60},rightPelvic:{min:0,max:60},leftWrist:{min:0,max:90},rightWrist:{min:0,max:90},leftAnkle:{min:0,max:60},rightAnkle:{min:0,max:60},leftHipAdductionAbduction:{min:0,max:60},rightHipAdductionAbduction:{min:0,max:60},cervicalForwardFlexion:{min:0,max:60}}[e]}function d(){return["L Shoulder Abd/Add","R Shoulder Abd/Add","L Elbow Flex","R Elbow Flex","L Hip Fwd Flex","R Hip Fwd Flex","L Knee Flex/Ext","R Knee Flex/Ext","L Cervical Side Flex","R Cervical Side Flex","L Lateral Side Flex","R Lateral Side Flex","L wrist","R wrist","L ankle","R ankle","L Hip Abd/Add","R Hip Abd/Add","Cervical Fwd Flex"]}function f(e){return["leftShoulder","rightShoulder","leftElbow","rightElbow","leftHip","rightHip","leftKnee","rightKnee","leftNeck","rightNeck","leftPelvic","rightPelvic","leftWrist","rightWrist","leftAnkle","rightAnkle","leftHipAdductionAbduction","rightHipAdductionAbduction","cervicalForwardFlexion"][e]}function m(){return[[l.leftElbowInd,l.leftShoulderInd,l.leftHipInd],[l.rightElbowInd,l.rightShoulderInd,l.rightHipInd],[l.leftShoulderInd,l.leftElbowInd,l.leftWristInd],[l.rightShoulderInd,l.rightElbowInd,l.rightWristInd],[l.leftShoulderInd,l.leftHipInd,l.leftKneeInd],[l.rightShoulderInd,l.rightHipInd,l.rightKneeInd],[l.leftHipInd,l.leftKneeInd,l.leftAnkleInd],[l.rightHipInd,l.rightKneeInd,l.rightAnkleInd],[l.leftShoulderInd,l.neckInd,l.noseInd],[l.rightShoulderInd,l.neckInd,l.noseInd],[l.leftHipInd,l.pelvicInd,l.neckInd],[l.rightHipInd,l.pelvicInd,l.neckInd],[l.leftElbowInd,l.leftWristInd,l.leftIndexInd],[l.rightElbowInd,l.rightWristInd,l.rightIndexInd],[l.leftKneeInd,l.leftAnkleInd,l.leftFootIndex],[l.rightKneeInd,l.rightAnkleInd,l.rightFootIndex],[l.leftKneeInd,l.leftHipInd,l.pelvicInd],[l.rightKneeInd,l.rightHipInd,l.pelvicInd],[l.noseInd,l.neckInd,l.pelvicInd]]}},3146:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.chatBot=function(){u.lang=h,l.lang=h,c.lang=h,c.stop(),c.addEventListener("result",(async e=>{const t=Array.from(e.results).map((e=>e[0])).map((e=>e.transcript)).join("");if(e.results[0].isFinal){const e=await(0,s.getResAPI)(t);console.log("😊 data 😊",e),function(e){if(f(e),e===i.lang[h].welcome||o.state.isInitial){if(!1===o.state.isInitial)return;o.state.isInitial=!1,o.state.isStart=!0,o.state.isPause=!0,o.state.isStop=!0}e!==i.lang[h].startCommand&&e!==i.lang[h].restartCommand||!o.state.isStart||(console.log("start() or restart()"),o.state.isAllowed=!0,o.state.isStart=!1,o.state.isPause=!0,o.state.isStop=!0,(0,a.restart)()),e===i.lang[h].pauseCommand&&o.state.isPause&&(console.log("pause()"),o.state.isAllowed=!1,o.state.isStart=!0,o.state.isPause=!1,o.state.isStop=!0,o.state.allKeyPointsVisibleOnce=!1,(0,a.pause)()),e===i.lang[h].stopCommand&&o.state.isStop&&(console.log("stop()"),a.progressChangeEvent.progress={setCount:o.state.setsDone,repCount:o.state.repsDone,counterCount:a.counter,id:"stop"},(0,a.stop)())}(e)}})),c.addEventListener("end",(()=>{p&&c.start()})),c.start()},t.selectLang=function(e){t.selectedLang=h=e},t.speak1=t.speak=t.selectedLang=void 0;var r=n(6486),a=n(1735),s=n(4291),i=n(2434),o=n(1244);let u,l,c,h="en-US";t.selectedLang=h;let p=!0;"speechSynthesis"in window?(u=new SpeechSynthesisUtterance,l=new SpeechSynthesisUtterance):(u=null,l=null),u.addEventListener("start",(()=>{c.stop(),p=!1})),u.addEventListener("end",(()=>{c.start(),p=!0})),l.addEventListener("start",(()=>{c.stop(),p=!1})),l.addEventListener("end",(()=>{c.start(),p=!0}));const d=(0,r.throttle)((function(e){null!==u&&(u.text=e,window.speechSynthesis.speak(u))}),1e4,{trailing:!1});t.speak=d;const f=function(e){null!==l&&(l.text=e,window.speechSynthesis.speak(l))};t.speak1=f,window.SpeechRecognition=window.SpeechRecognition||window.webkitSpeechRecognition,c=new window.SpeechRecognition,c.interimResults=!0},182:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.giveMidpointsHack=function(e){const t=e[11].x,n=e[11].y,r=e[12].x,s=e[12].y,u=e[7].x,l=e[7].y,c=e[8].x,h=e[8].y,p=e[23].x,d=e[23].y,f=(t+r)/2,m=(n+s)/2,g=(p+e[24].x)/2,y=(d+e[24].y)/2,b=(u+c)/2,x=(l+h)/2,v=i(f,m,b,x),w=i(g,y,f,m);v>15&&(o(f,m,b,x),(0,a.speak1)("Straight your neck")),w>10&&(o(g,y,f,m),(0,a.speak1)("Straight your back"))};var r=n(1735),a=n(3146),s=n(1244);function i(e,t,n,r){const a=Math.acos((r-t)*-t/(Math.sqrt(Math.pow(n-e,2)+Math.pow(r-t,2))*t));return 180/Math.PI*a}function o(e,t,n,a){r.ctx.beginPath(),r.ctx.strokeStyle="red",r.ctx.fillStyle="red",r.ctx.moveTo(e,t),r.ctx.lineTo(n,a),r.ctx.stroke(),r.ctx.beginPath(),r.ctx.strokeStyle="green",r.ctx.fillStyle="green",r.ctx.moveTo(e,t),r.ctx.lineTo(e,t-100),r.ctx.stroke(),r.ctx.restore(),r.ctx.strokeStyle=s.state.color,r.ctx.fillStyle=s.state.color}},2434:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.lang=void 0,t.lang={"en-US":{welcome:"Welcome to Physio bot. What can I do for you?",nextExercise:"Well done. Get ready for your next exercise. Please say the command when you are ready.",nextSet:"Next set",notFullBody:"I cannot see you.",startExercise:"let's start",exerciseComplete:"Thank you for completing the therapy. Please tell us the pain level.",exercisePause:"pausing your exercise. Let me know when to start.",exerciseStop:"stopping your exercise & saving your data.",startCommand:"ok take your position",pauseCommand:"pausing the exercise",restartCommand:"restarting the exercise",stopCommand:"stopping the exercise"},"hi-IN":{welcome:"फिजियो बॉट में आपका स्वागत है। कृपया अपने शरीर को समायोजित करें और तैयार होने पर शुरु आदेश कहें।",nextExercise:"बहुत बढ़िया। अपने अगले अभ्यास के लिए तैयार हो जाइए। जब आप तैयार हों तो कृपया आदेश कहें।",nextSet:"अगला सेट",notFullBody:"मुझे आप दिखाई नहीं दे रहे हो।",startExercise:"ठीक है अब व्यायाम करते हैं",exerciseComplete:"उपचार पूरा करने के लिए धन्यवाद। कृपया हमें दर्द का स्तर बताएं।",exercisePause:"व्यायाम रोक दिया है। मुझे बताएं कि कब शुरू करना है।",exerciseStop:"व्यायाम रोक दिया है और आपका डेटा सहेज दिया है।",startCommand:"शुरू करो",waitCommand:"रोक दो",stopCommand:"खत्म करो"},"ar-SA":{welcome:"مرحبا بكم في فيزيو بوت. يرجى ضبط جسمك وقول أمر البدء عندما تكون جاهزًا.",nextExercise:"أتقنه. استعد للتمرين التالي. من فضلك قل الأمر عندما تكون جاهزًا.",nextSet:"المجموعة التالية",notFullBody:"لااراك.",startExercise:"حسنًا ، لنقم بالتمرين الآن",exerciseComplete:"شكرا لاستكمال العلاج. من فضلك قل لنا مستوى الألم.",exercisePause:"وقف التمرين. اسمحوا لي أن أعرف متى أبدأ.",exerciseStop:"وقف التمرين وحفظ البيانات الخاصة بك.",startCommand:"طيب بداية.",waitCommand:"حاسة ننتظره؟",stopCommand:"نعم، توقف"}}},4248:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wristH=t.rightWristInd=t.rightThumbInd=t.rightShoulderVerAngInd=t.rightShoulderInd=t.rightShoulderHorAngInd=t.rightPinkyInd=t.rightKneeInd=t.rightKneeAngInd=t.rightIndexInd=t.rightHipInd=t.rightHipAngInd=t.rightHeelInd=t.rightHandMappings=t.rightFootIndex=t.rightElbowInd=t.rightElbowAngInd=t.rightEarInd=t.rightAnkleInd=t.pelvicInd=t.noseInd=t.neckInd=t.leftWristInd=t.leftThumbInd=t.leftShoulderVerAngInd=t.leftShoulderInd=t.leftShoulderHorAngInd=t.leftPinkyInd=t.leftKneeInd=t.leftKneeAngInd=t.leftIndexInd=t.leftHipInd=t.leftHipAngInd=t.leftHeelInd=t.leftHandMappings=t.leftFootIndex=t.leftElbowInd=t.leftElbowAngInd=t.leftEarInd=t.leftAnkleInd=void 0;var r=n(1244),a=n(7213);let s,i,o,u,l,c,h,p,d,f,m,g,y,b,x,v,w,k,I,S,N,T,$,C,E,_,A,R,F,O,D,M,L,P,B,z,V;t.neckInd=i,t.noseInd=s,t.rightShoulderInd=u,t.leftShoulderInd=o,t.rightEarInd=c,t.leftEarInd=l,t.rightElbowInd=p,t.leftElbowInd=h,t.rightWristInd=f,t.leftWristInd=d,t.rightPinkyInd=g,t.leftPinkyInd=m,t.rightIndexInd=b,t.leftIndexInd=y,t.rightThumbInd=v,t.leftThumbInd=x,t.rightHipInd=k,t.leftHipInd=w,t.pelvicInd=I,t.rightKneeInd=N,t.leftKneeInd=S,t.rightAnkleInd=$,t.leftAnkleInd=T,t.rightHeelInd=E,t.leftHeelInd=C,t.rightFootIndex=A,t.leftFootIndex=_,t.rightShoulderVerAngInd=F,t.leftShoulderVerAngInd=R,t.rightElbowAngInd=D,t.leftElbowAngInd=O,t.rightHipAngInd=L,t.leftHipAngInd=M,t.rightKneeAngInd=B,t.leftKneeAngInd=P,t.rightShoulderHorAngInd=V,t.leftShoulderHorAngInd=z;const W=r.state.model===a.SupportedModels.BlazePose?{nose:0,leftEye:2,rightEye:5,leftEar:7,rightEar:8,leftShoulder:11,rightShoulder:12,leftElbow:13,rightElbow:14,leftWrist:15,rightWrist:16,leftPinky:17,rightPinky:18,leftIndex:19,rightIndex:20,leftThumb:21,rightThumb:22,leftHip:23,rightHip:24,leftKnee:25,rightKnee:26,leftAnkle:27,rightAnkle:28,leftHeel:29,rightHeel:30,leftFootIndex:31,rightFootIndex:32,neck:33,pelvic:34}:{nose:0,leftEye:1,rightEye:2,leftEar:3,rightEar:4,leftShoulder:5,rightShoulder:6,leftElbow:7,rightElbow:8,leftWrist:9,rightWrist:10,leftHip:11,rightHip:12,leftKnee:13,rightKnee:14,leftAnkle:15,rightAnkle:16,neck:17,pelvic:18};t.noseInd=s=W.nose,t.neckInd=i=W.neck,t.leftShoulderInd=o=W.leftShoulder,t.rightShoulderInd=u=W.rightShoulder,t.leftEarInd=l=W.leftEar,t.rightEarInd=c=W.rightEar,t.leftElbowInd=h=W.leftElbow,t.rightElbowInd=p=W.rightElbow,t.leftWristInd=d=W.leftWrist,t.rightWristInd=f=W.rightWrist,t.leftPinkyInd=m=W.leftPinky,t.rightPinkyInd=g=W.rightPinky,t.leftIndexInd=y=W.leftIndex,t.rightIndexInd=b=W.rightIndex,t.leftThumbInd=x=W.leftThumb,t.rightThumbInd=v=W.rightThumb,t.leftHipInd=w=W.leftHip,t.rightHipInd=k=W.rightHip,t.pelvicInd=I=W.pelvic,t.leftKneeInd=S=W.leftKnee,t.rightKneeInd=N=W.rightKnee,t.leftAnkleInd=T=W.leftAnkle,t.rightAnkleInd=$=W.rightAnkle,t.leftHeelInd=C=W.leftHeel,t.rightHeelInd=E=W.rightHeel,t.leftFootIndex=_=W.leftFootIndex,t.rightFootIndex=A=W.rightFootIndex,t.leftShoulderVerAngInd=R=0,t.rightShoulderVerAngInd=F=1,t.leftElbowAngInd=O=2,t.rightElbowAngInd=D=3,t.leftHipAngInd=M=4,t.rightHipAngInd=L=5,t.leftKneeAngInd=P=6,t.rightKneeAngInd=B=7,t.leftShoulderHorAngInd=z=8,t.rightShoulderHorAngInd=V=9,t.wristH=0;const U={0:f,20:g,12:b,4:v};t.rightHandMappings=U;const G={0:d,20:m,12:y,4:x};t.leftHandMappings=G},7156:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.cameraId=t.cameraFlag=void 0,t.cameraIdFunc=function(e,n=0){null===e&&void 0===e&&""===e||null===n&&void 0===n&&""===n||(t.cameraId=k=e,t.cameraFlag=S=n,console.log("cameraId",k),console.log("cameraFlag",S))},t.enterprise=t.drawLine=t.canvas=void 0,t.initializeModel=function(e){t.video=l=e.video,t.videoWidth=c=e.videoWidth,t.videoHeight=h=e.videoHeight,t.canvas=p=e.canvas,t.loadingEleId=d=e.loadingEleId?e.loadingEleId:null,t.mainEleId=f=e.mainEleId?e.mainEleId:null,t.showAngles=m=!!e.showAngles&&e.showAngles,t.isSupervised=g=!!e.supervised&&e.supervised,t.drawLine=w=e.drawLine||!1,t.enterprise=I=e.enterprise||!1,e.ROMPanel&&(t.jCanvas=y=e.ROMPanel.canvas,t.jCanvasWidth=b=e.ROMPanel.width?e.ROMPanel.width:150,t.jCanvasHeight=x=e.ROMPanel.height?e.ROMPanel.height:150,t.jointRadius=v=e.ROMPanel.radius?e.ROMPanel.radius:x/2.3,y.width=b,y.height=x);const n=p.getContext("2d");if(!0===m&&(a.detectAnglesEvent.defaultListener=function(e){n.fillStyle="red",n.font="14px Arial";const t=a.newVideoWith;let r=0;n.clearRect(t,0,150,h);const s=o.default.excersise.angles;for(let a=0;a<s.length;a++){var u=e[(0,i.getJointLabel)(s[a])];const o=u.min,l=u.max,c=(0,i.getJointAcronym)(s[a]);r+=14,n.fillText(`${c}`,t+10,r),r+=14,n.fillText(`Min:${Math.round(o)} Max:${Math.round(l)}`,t+10,r),r+=17}}),!0===g&&!1===w&&(a.detectKeypointsEvent.defaultListener=function(e){(0,s.supervised)(e)}),!1===g&&!1===w){const e=y.getContext("2d");e.translate(b/2,0),(0,u.chatBot)(),a.detectKeypointsEvent.defaultListener=function(t){(0,s.unsupervised)(t,n,e)}}},t.videoWidth=t.videoHeight=t.video=t.showAngles=t.mainEleId=t.loadingEleId=t.jointRadius=t.jCanvasWidth=t.jCanvasHeight=t.jCanvas=t.isSupervised=void 0;var a=n(1735),s=n(1028),i=n(392),o=r(n(489)),u=n(3146);let l,c,h,p,d,f,m,g,y,b,x,v,w,k,I,S=0;t.enterprise=I,t.cameraFlag=S,t.cameraId=k,t.drawLine=w,t.jointRadius=v,t.jCanvasHeight=x,t.jCanvasWidth=b,t.jCanvas=y,t.isSupervised=g,t.showAngles=m,t.mainEleId=f,t.loadingEleId=d,t.canvas=p,t.videoHeight=h,t.videoWidth=c,t.video=l},1696:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.frontKeypontsVisible=function(e){return e.every(((e,t)=>e.score>=.5))},t.isFront=function(e){return e[r.leftHeelInd].x>e[r.rightHeelInd].x&&e[r.leftFootIndex].x>e[r.rightFootIndex].x&&e[r.rightFootIndex].y>e[r.rightHeelInd].y&&e[r.leftFootIndex].y>e[r.leftHeelInd].y&&e[r.leftHeelInd].z>e[r.leftFootIndex].z&&e[r.rightHeelInd].z>e[r.rightFootIndex].z},t.isLeft=function(e){return e[r.leftFootIndex].x>e[r.leftHeelInd].x&&e[r.rightFootIndex].x>e[r.rightHeelInd].x&&e[r.rightHeelInd].y>e[r.leftHeelInd].y&&e[r.rightFootIndex].y>e[r.leftFootIndex].y&&e[r.leftHeelInd].z>e[r.rightHeelInd].z&&e[r.leftFootIndex].z>e[r.rightFootIndex].z},t.isRight=function(e){return e[r.leftFootIndex].x<e[r.leftHeelInd].x&&e[r.rightFootIndex].x<e[r.rightHeelInd].x&&e[r.rightHeelInd].y<e[r.leftHeelInd].y&&e[r.rightFootIndex].y<e[r.leftFootIndex].y&&e[r.leftHeelInd].z<e[r.rightHeelInd].z&&e[r.leftFootIndex].z<e[r.rightFootIndex].z},t.leftKeypontsVisible=function(e){let t=!0;return e.forEach(((e,n)=>{n>=8&&n<=r.rightFootIndex&&n%2==0&&(t=t&&e.score>=.5)})),t},t.rightKeypontsVisible=function(e){let t=!0;return e.forEach(((e,n)=>{n>=7&&n<=r.leftFootIndex&&n%2!=0&&(t=t&&e.score>=.5)})),t};var r=n(4248)},489:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default={excersise:{name:"",primaryAngles:[],ROMs:[],angles:[],totalReps:0,totalSets:0}}},3660:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allowScreenShot=void 0,t.drawLinesFunc=function(e,n){if(0!==a.state.orientation)if(t.visibleE=b=!1,1===a.state.orientation&&(0,s.frontKeypontsVisible)(e)&&(0,s.isFront)(e)){let r;n.beginPath(),n.strokeStyle="red",n.fillStyle="red",n.lineWidth=2;for(let t=0;t<=4;t++)r=x(e[f[t][0]].x,e[f[t][0]].y,e[f[t][1]].x,e[f[t][1]].y),n.moveTo(r.x1,r.y1),n.lineTo(r.x2,r.y2);for(let t=5;t<=6;t++)n.moveTo(e[f[t][0]].x,e[f[t][0]].y),n.lineTo(e[f[t][1]].x,e[f[t][1]].y);n.stroke(),n.beginPath(),n.strokeStyle="green",n.fillStyle="green",n.lineWidth=2;for(let t=0;t<=4;t++)n.moveTo(e[f[t][0]].x+150,e[f[t][0]].y),n.lineTo(e[f[t][1]].x-150,e[f[t][0]].y);n.moveTo(e[i.pelvicInd].x,e[i.noseInd].y-50),n.lineTo(e[i.pelvicInd].x,e[i.pelvicInd].y+200),n.stroke(),h=[];for(let t=0;t<=4;t++){const n=v(e[f[t][1]].x,e[f[t][1]].y,e[f[t][0]].x,e[f[t][0]].y,e[f[t][1]].x,e[f[t][0]].y),r=k(e[f[t][0]].y,e[f[t][1]].y),a=d[t];h.push({angle:n,label:a,analysis:r})}const s=v(e[33].x,e[33].y,e[34].x,e[34].y,e[34].x,e[33].y),l="",c=d[5];h.push({angle:s,label:c,analysis:l}),t.visibleE=b=!0,o.enterprise&&!a.state.showTimer&&(0,u.startTimer)()}else if(2===a.state.orientation&&(0,s.leftKeypontsVisible)(e)&&(0,s.isLeft)(e)){n.beginPath(),n.strokeStyle="red",n.fillStyle="red",n.lineWidth=2;for(let t=0;t<=4;t++)n.moveTo(e[g[t][0]].x,e[g[t][0]].y),n.lineTo(e[g[t][1]].x,e[g[t][1]].y);n.stroke(),n.beginPath(),n.strokeStyle="green",n.fillStyle="green",n.lineWidth=2;for(let t=0;t<=4;t+=1)n.moveTo(e[g[t][1]].x,e[g[t][1]].y-40),n.lineTo(e[g[t][1]].x,e[g[t][1]].y+40);n.stroke(),p=[];for(let t=0;t<=4;t++){const n=v(e[g[t][0]].x,e[g[t][0]].y,e[g[t][1]].x,e[g[t][1]].y,e[g[t][1]].x,e[g[t][0]].y),r=m[t];p.push({angle:n,label:r})}const r=v(e[g[5][0]].x,e[g[5][0]].y,e[g[5][1]].x,e[g[5][1]].y,e[g[5][0]].x,e[g[5][1]].y),s=m[5];p.push({angle:r,label:s}),t.visibleE=b=!0,o.enterprise&&!a.state.showTimer&&(0,u.startTimer)()}},t.eScreenShot=void 0,t.saveAngles=function(e){1===e&&(console.log("frontAngles",h),t.showAngles=c=w.bind(null,h)),2===e&&(console.log("leftAngles",p),t.showAngles=c=w.bind(null,p))},t.visibleE=t.takeSS=t.showAngles=void 0;var r=function(e,t){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var n=l(t);if(n&&n.has(e))return n.get(e);var r={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var i=a?Object.getOwnPropertyDescriptor(e,s):null;i&&(i.get||i.set)?Object.defineProperty(r,s,i):r[s]=e[s]}return r.default=e,n&&n.set(e,r),r}(n(5363)),a=n(1244),s=n(1696),i=n(4248),o=n(7156),u=n(1028);function l(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(l=function(e){return e?n:t})(e)}let c;t.allowScreenShot=null,t.showAngles=c;let h=[],p=[];const d=["ear","shoulder","hip","knee","ankle","M_Pelvic","M_Pelvic"],f=[[i.leftEarInd,i.rightEarInd],[i.leftShoulderInd,i.rightShoulderInd],[i.leftHipInd,i.rightHipInd],[i.leftKneeInd,i.rightKneeInd],[i.leftAnkleInd,i.rightAnkleInd],[i.pelvicInd,i.neckInd],[i.neckInd,i.noseInd]],m=["shoulder","hip","knee","kneeOppsite","ankle","elbow"],g=[[i.rightEarInd,i.rightShoulderInd],[i.rightShoulderInd,i.rightHipInd],[i.rightHipInd,i.rightKneeInd],[i.rightAnkleInd,i.rightKneeInd],[i.rightKneeInd,i.rightAnkleInd],[i.rightWristInd,i.rightElbowInd]];let y,b;function x(e,t,n,r){const a=150,s=(r-t)/(n-e);if(0===s)e+=a,n-=a;else if(s===1/0)t+=a,r-=a;else{const i=a/Math.sqrt(1+s*s),o=s*i;e+=i,t+=o,n-=i,r-=o}return{x1:e,y1:t,x2:n,y2:r}}function v(e,t,n,a,s,i){const o=r.sub(r.tensor([e,t]),r.tensor([n,a])),u=r.sub(r.tensor([s,i]),r.tensor([n,a])),l=r.dot(o,u),c=r.mul(r.sqrt(r.sum(r.pow(o,2))),r.sqrt(r.sum(r.pow(u,2)))),h=r.mul(r.acos(r.div(l,c)),180/Math.PI).arraySync();return Math.round(h)}function w(e){return e}function k(e,t){let n="";return n=e>t?"Right upper wrt left":e<t?"Right down wrt left":"Both are at same height",n}t.takeSS=y,t.eScreenShot=function(e){t.takeSS=y=e},t.visibleE=b},1244:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.state=t.initialState=void 0;const r={color:"red",model:n(7213).SupportedModels.BlazePose,allKeyPointsVisibleOnce:!1,allKeyPointsVisible:!1,madeGesture:!1,madeInitialPose:!1,repJoint:0,primary_keypoint:0,setsDone:0,outputData:{},assesmentInfo:{},allAngleInfo:{},anomaly:{},batchCount:0,scoreInfo:{},ROMInfo:{},channelColor:"rgba(255, 0, 0, 0.5)",frames:0,paused:!1,stopped:!1,repsDone:0,prevRepCount:0,maxAng:180,minAng:180,prev_angle:0,prev_dangle:0,first:!0,goal:1,trigger:0,isInitial:!0,isStart:!1,isStop:!1,isPause:!1,isAllowed:!1,hideROMPannel:!0,loopCount:0,showTimer:!1,angleAtHold:0,orientation:0,proceed:!1,currHoldRep:0,initialPostureMatched:!1,correct:0,incorrect:0,prevHoldRep:0,wrongPostureCount:0,gotPredictionResult:!1};t.initialState=r;const a={...r};t.state=a},6486:function(e,t,n){var r;e=n.nmd(e),function(){var a,s="Expected a function",i="__lodash_hash_undefined__",o="__lodash_placeholder__",u=32,l=128,c=1/0,h=9007199254740991,p=NaN,d=4294967295,f=[["ary",l],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",u],["partialRight",64],["rearg",256]],m="[object Arguments]",g="[object Array]",y="[object Boolean]",b="[object Date]",x="[object Error]",v="[object Function]",w="[object GeneratorFunction]",k="[object Map]",I="[object Number]",S="[object Object]",N="[object Promise]",T="[object RegExp]",$="[object Set]",C="[object String]",E="[object Symbol]",_="[object WeakMap]",A="[object ArrayBuffer]",R="[object DataView]",F="[object Float32Array]",O="[object Float64Array]",D="[object Int8Array]",M="[object Int16Array]",L="[object Int32Array]",P="[object Uint8Array]",B="[object Uint8ClampedArray]",z="[object Uint16Array]",V="[object Uint32Array]",W=/\b__p \+= '';/g,U=/\b(__p \+=) '' \+/g,G=/(__e\(.*?\)|\b__t\)) \+\n'';/g,H=/&(?:amp|lt|gt|quot|#39);/g,j=/[&<>"']/g,K=RegExp(H.source),q=RegExp(j.source),X=/<%-([\s\S]+?)%>/g,Y=/<%([\s\S]+?)%>/g,Q=/<%=([\s\S]+?)%>/g,Z=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,J=/^\w*$/,ee=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,te=/[\\^$.*+?()[\]{}|]/g,ne=RegExp(te.source),re=/^\s+/,ae=/\s/,se=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,ie=/\{\n\/\* \[wrapped with (.+)\] \*/,oe=/,? & /,ue=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,le=/[()=,{}\[\]\/\s]/,ce=/\\(\\)?/g,he=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,pe=/\w*$/,de=/^[-+]0x[0-9a-f]+$/i,fe=/^0b[01]+$/i,me=/^\[object .+?Constructor\]$/,ge=/^0o[0-7]+$/i,ye=/^(?:0|[1-9]\d*)$/,be=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,xe=/($^)/,ve=/['\n\r\u2028\u2029\\]/g,we="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",ke="a-z\\xdf-\\xf6\\xf8-\\xff",Ie="A-Z\\xc0-\\xd6\\xd8-\\xde",Se="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Ne="["+Se+"]",Te="["+we+"]",$e="\\d+",Ce="["+ke+"]",Ee="[^\\ud800-\\udfff"+Se+$e+"\\u2700-\\u27bf"+ke+Ie+"]",_e="\\ud83c[\\udffb-\\udfff]",Ae="[^\\ud800-\\udfff]",Re="(?:\\ud83c[\\udde6-\\uddff]){2}",Fe="[\\ud800-\\udbff][\\udc00-\\udfff]",Oe="["+Ie+"]",De="(?:"+Ce+"|"+Ee+")",Me="(?:"+Oe+"|"+Ee+")",Le="(?:['’](?:d|ll|m|re|s|t|ve))?",Pe="(?:['’](?:D|LL|M|RE|S|T|VE))?",Be="(?:"+Te+"|"+_e+")?",ze="[\\ufe0e\\ufe0f]?",Ve=ze+Be+"(?:\\u200d(?:"+[Ae,Re,Fe].join("|")+")"+ze+Be+")*",We="(?:"+["[\\u2700-\\u27bf]",Re,Fe].join("|")+")"+Ve,Ue="(?:"+[Ae+Te+"?",Te,Re,Fe,"[\\ud800-\\udfff]"].join("|")+")",Ge=RegExp("['’]","g"),He=RegExp(Te,"g"),je=RegExp(_e+"(?="+_e+")|"+Ue+Ve,"g"),Ke=RegExp([Oe+"?"+Ce+"+"+Le+"(?="+[Ne,Oe,"$"].join("|")+")",Me+"+"+Pe+"(?="+[Ne,Oe+De,"$"].join("|")+")",Oe+"?"+De+"+"+Le,Oe+"+"+Pe,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",$e,We].join("|"),"g"),qe=RegExp("[\\u200d\\ud800-\\udfff"+we+"\\ufe0e\\ufe0f]"),Xe=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Ye=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Qe=-1,Ze={};Ze[F]=Ze[O]=Ze[D]=Ze[M]=Ze[L]=Ze[P]=Ze[B]=Ze[z]=Ze[V]=!0,Ze[m]=Ze[g]=Ze[A]=Ze[y]=Ze[R]=Ze[b]=Ze[x]=Ze[v]=Ze[k]=Ze[I]=Ze[S]=Ze[T]=Ze[$]=Ze[C]=Ze[_]=!1;var Je={};Je[m]=Je[g]=Je[A]=Je[R]=Je[y]=Je[b]=Je[F]=Je[O]=Je[D]=Je[M]=Je[L]=Je[k]=Je[I]=Je[S]=Je[T]=Je[$]=Je[C]=Je[E]=Je[P]=Je[B]=Je[z]=Je[V]=!0,Je[x]=Je[v]=Je[_]=!1;var et={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},tt=parseFloat,nt=parseInt,rt="object"==typeof n.g&&n.g&&n.g.Object===Object&&n.g,at="object"==typeof self&&self&&self.Object===Object&&self,st=rt||at||Function("return this")(),it=t&&!t.nodeType&&t,ot=it&&e&&!e.nodeType&&e,ut=ot&&ot.exports===it,lt=ut&&rt.process,ct=function(){try{return ot&&ot.require&&ot.require("util").types||lt&&lt.binding&&lt.binding("util")}catch(e){}}(),ht=ct&&ct.isArrayBuffer,pt=ct&&ct.isDate,dt=ct&&ct.isMap,ft=ct&&ct.isRegExp,mt=ct&&ct.isSet,gt=ct&&ct.isTypedArray;function yt(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function bt(e,t,n,r){for(var a=-1,s=null==e?0:e.length;++a<s;){var i=e[a];t(r,i,n(i),e)}return r}function xt(e,t){for(var n=-1,r=null==e?0:e.length;++n<r&&!1!==t(e[n],n,e););return e}function vt(e,t){for(var n=null==e?0:e.length;n--&&!1!==t(e[n],n,e););return e}function wt(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(!t(e[n],n,e))return!1;return!0}function kt(e,t){for(var n=-1,r=null==e?0:e.length,a=0,s=[];++n<r;){var i=e[n];t(i,n,e)&&(s[a++]=i)}return s}function It(e,t){return!(null==e||!e.length)&&Ft(e,t,0)>-1}function St(e,t,n){for(var r=-1,a=null==e?0:e.length;++r<a;)if(n(t,e[r]))return!0;return!1}function Nt(e,t){for(var n=-1,r=null==e?0:e.length,a=Array(r);++n<r;)a[n]=t(e[n],n,e);return a}function Tt(e,t){for(var n=-1,r=t.length,a=e.length;++n<r;)e[a+n]=t[n];return e}function $t(e,t,n,r){var a=-1,s=null==e?0:e.length;for(r&&s&&(n=e[++a]);++a<s;)n=t(n,e[a],a,e);return n}function Ct(e,t,n,r){var a=null==e?0:e.length;for(r&&a&&(n=e[--a]);a--;)n=t(n,e[a],a,e);return n}function Et(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}var _t=Lt("length");function At(e,t,n){var r;return n(e,(function(e,n,a){if(t(e,n,a))return r=n,!1})),r}function Rt(e,t,n,r){for(var a=e.length,s=n+(r?1:-1);r?s--:++s<a;)if(t(e[s],s,e))return s;return-1}function Ft(e,t,n){return t==t?function(e,t,n){for(var r=n-1,a=e.length;++r<a;)if(e[r]===t)return r;return-1}(e,t,n):Rt(e,Dt,n)}function Ot(e,t,n,r){for(var a=n-1,s=e.length;++a<s;)if(r(e[a],t))return a;return-1}function Dt(e){return e!=e}function Mt(e,t){var n=null==e?0:e.length;return n?zt(e,t)/n:p}function Lt(e){return function(t){return null==t?a:t[e]}}function Pt(e){return function(t){return null==e?a:e[t]}}function Bt(e,t,n,r,a){return a(e,(function(e,a,s){n=r?(r=!1,e):t(n,e,a,s)})),n}function zt(e,t){for(var n,r=-1,s=e.length;++r<s;){var i=t(e[r]);i!==a&&(n=n===a?i:n+i)}return n}function Vt(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}function Wt(e){return e?e.slice(0,on(e)+1).replace(re,""):e}function Ut(e){return function(t){return e(t)}}function Gt(e,t){return Nt(t,(function(t){return e[t]}))}function Ht(e,t){return e.has(t)}function jt(e,t){for(var n=-1,r=e.length;++n<r&&Ft(t,e[n],0)>-1;);return n}function Kt(e,t){for(var n=e.length;n--&&Ft(t,e[n],0)>-1;);return n}function qt(e,t){for(var n=e.length,r=0;n--;)e[n]===t&&++r;return r}var Xt=Pt({À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",Ç:"C",ç:"c",Ð:"D",ð:"d",È:"E",É:"E",Ê:"E",Ë:"E",è:"e",é:"e",ê:"e",ë:"e",Ì:"I",Í:"I",Î:"I",Ï:"I",ì:"i",í:"i",î:"i",ï:"i",Ñ:"N",ñ:"n",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",Ù:"U",Ú:"U",Û:"U",Ü:"U",ù:"u",ú:"u",û:"u",ü:"u",Ý:"Y",ý:"y",ÿ:"y",Æ:"Ae",æ:"ae",Þ:"Th",þ:"th",ß:"ss",Ā:"A",Ă:"A",Ą:"A",ā:"a",ă:"a",ą:"a",Ć:"C",Ĉ:"C",Ċ:"C",Č:"C",ć:"c",ĉ:"c",ċ:"c",č:"c",Ď:"D",Đ:"D",ď:"d",đ:"d",Ē:"E",Ĕ:"E",Ė:"E",Ę:"E",Ě:"E",ē:"e",ĕ:"e",ė:"e",ę:"e",ě:"e",Ĝ:"G",Ğ:"G",Ġ:"G",Ģ:"G",ĝ:"g",ğ:"g",ġ:"g",ģ:"g",Ĥ:"H",Ħ:"H",ĥ:"h",ħ:"h",Ĩ:"I",Ī:"I",Ĭ:"I",Į:"I",İ:"I",ĩ:"i",ī:"i",ĭ:"i",į:"i",ı:"i",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",ĸ:"k",Ĺ:"L",Ļ:"L",Ľ:"L",Ŀ:"L",Ł:"L",ĺ:"l",ļ:"l",ľ:"l",ŀ:"l",ł:"l",Ń:"N",Ņ:"N",Ň:"N",Ŋ:"N",ń:"n",ņ:"n",ň:"n",ŋ:"n",Ō:"O",Ŏ:"O",Ő:"O",ō:"o",ŏ:"o",ő:"o",Ŕ:"R",Ŗ:"R",Ř:"R",ŕ:"r",ŗ:"r",ř:"r",Ś:"S",Ŝ:"S",Ş:"S",Š:"S",ś:"s",ŝ:"s",ş:"s",š:"s",Ţ:"T",Ť:"T",Ŧ:"T",ţ:"t",ť:"t",ŧ:"t",Ũ:"U",Ū:"U",Ŭ:"U",Ů:"U",Ű:"U",Ų:"U",ũ:"u",ū:"u",ŭ:"u",ů:"u",ű:"u",ų:"u",Ŵ:"W",ŵ:"w",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Ź:"Z",Ż:"Z",Ž:"Z",ź:"z",ż:"z",ž:"z",Ĳ:"IJ",ĳ:"ij",Œ:"Oe",œ:"oe",ŉ:"'n",ſ:"s"}),Yt=Pt({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function Qt(e){return"\\"+et[e]}function Zt(e){return qe.test(e)}function Jt(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}function en(e,t){return function(n){return e(t(n))}}function tn(e,t){for(var n=-1,r=e.length,a=0,s=[];++n<r;){var i=e[n];i!==t&&i!==o||(e[n]=o,s[a++]=n)}return s}function nn(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}function rn(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=[e,e]})),n}function an(e){return Zt(e)?function(e){for(var t=je.lastIndex=0;je.test(e);)++t;return t}(e):_t(e)}function sn(e){return Zt(e)?function(e){return e.match(je)||[]}(e):function(e){return e.split("")}(e)}function on(e){for(var t=e.length;t--&&ae.test(e.charAt(t)););return t}var un=Pt({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"}),ln=function e(t){var n,r=(t=null==t?st:ln.defaults(st.Object(),t,ln.pick(st,Ye))).Array,ae=t.Date,we=t.Error,ke=t.Function,Ie=t.Math,Se=t.Object,Ne=t.RegExp,Te=t.String,$e=t.TypeError,Ce=r.prototype,Ee=ke.prototype,_e=Se.prototype,Ae=t["__core-js_shared__"],Re=Ee.toString,Fe=_e.hasOwnProperty,Oe=0,De=(n=/[^.]+$/.exec(Ae&&Ae.keys&&Ae.keys.IE_PROTO||""))?"Symbol(src)_1."+n:"",Me=_e.toString,Le=Re.call(Se),Pe=st._,Be=Ne("^"+Re.call(Fe).replace(te,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ze=ut?t.Buffer:a,Ve=t.Symbol,We=t.Uint8Array,Ue=ze?ze.allocUnsafe:a,je=en(Se.getPrototypeOf,Se),qe=Se.create,et=_e.propertyIsEnumerable,rt=Ce.splice,at=Ve?Ve.isConcatSpreadable:a,it=Ve?Ve.iterator:a,ot=Ve?Ve.toStringTag:a,lt=function(){try{var e=ls(Se,"defineProperty");return e({},"",{}),e}catch(e){}}(),ct=t.clearTimeout!==st.clearTimeout&&t.clearTimeout,_t=ae&&ae.now!==st.Date.now&&ae.now,Pt=t.setTimeout!==st.setTimeout&&t.setTimeout,cn=Ie.ceil,hn=Ie.floor,pn=Se.getOwnPropertySymbols,dn=ze?ze.isBuffer:a,fn=t.isFinite,mn=Ce.join,gn=en(Se.keys,Se),yn=Ie.max,bn=Ie.min,xn=ae.now,vn=t.parseInt,wn=Ie.random,kn=Ce.reverse,In=ls(t,"DataView"),Sn=ls(t,"Map"),Nn=ls(t,"Promise"),Tn=ls(t,"Set"),$n=ls(t,"WeakMap"),Cn=ls(Se,"create"),En=$n&&new $n,_n={},An=Ps(In),Rn=Ps(Sn),Fn=Ps(Nn),On=Ps(Tn),Dn=Ps($n),Mn=Ve?Ve.prototype:a,Ln=Mn?Mn.valueOf:a,Pn=Mn?Mn.toString:a;function Bn(e){if(to(e)&&!Gi(e)&&!(e instanceof Un)){if(e instanceof Wn)return e;if(Fe.call(e,"__wrapped__"))return Bs(e)}return new Wn(e)}var zn=function(){function e(){}return function(t){if(!eo(t))return{};if(qe)return qe(t);e.prototype=t;var n=new e;return e.prototype=a,n}}();function Vn(){}function Wn(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=a}function Un(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=d,this.__views__=[]}function Gn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Hn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function jn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Kn(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new jn;++t<n;)this.add(e[t])}function qn(e){var t=this.__data__=new Hn(e);this.size=t.size}function Xn(e,t){var n=Gi(e),r=!n&&Ui(e),a=!n&&!r&&qi(e),s=!n&&!r&&!a&&lo(e),i=n||r||a||s,o=i?Vt(e.length,Te):[],u=o.length;for(var l in e)!t&&!Fe.call(e,l)||i&&("length"==l||a&&("offset"==l||"parent"==l)||s&&("buffer"==l||"byteLength"==l||"byteOffset"==l)||gs(l,u))||o.push(l);return o}function Yn(e){var t=e.length;return t?e[jr(0,t-1)]:a}function Qn(e,t){return Fs($a(e),ir(t,0,e.length))}function Zn(e){return Fs($a(e))}function Jn(e,t,n){(n!==a&&!zi(e[t],n)||n===a&&!(t in e))&&ar(e,t,n)}function er(e,t,n){var r=e[t];Fe.call(e,t)&&zi(r,n)&&(n!==a||t in e)||ar(e,t,n)}function tr(e,t){for(var n=e.length;n--;)if(zi(e[n][0],t))return n;return-1}function nr(e,t,n,r){return hr(e,(function(e,a,s){t(r,e,n(e),s)})),r}function rr(e,t){return e&&Ca(t,Ro(t),e)}function ar(e,t,n){"__proto__"==t&&lt?lt(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}function sr(e,t){for(var n=-1,s=t.length,i=r(s),o=null==e;++n<s;)i[n]=o?a:$o(e,t[n]);return i}function ir(e,t,n){return e==e&&(n!==a&&(e=e<=n?e:n),t!==a&&(e=e>=t?e:t)),e}function or(e,t,n,r,s,i){var o,u=1&t,l=2&t,c=4&t;if(n&&(o=s?n(e,r,s,i):n(e)),o!==a)return o;if(!eo(e))return e;var h=Gi(e);if(h){if(o=function(e){var t=e.length,n=new e.constructor(t);return t&&"string"==typeof e[0]&&Fe.call(e,"index")&&(n.index=e.index,n.input=e.input),n}(e),!u)return $a(e,o)}else{var p=ps(e),d=p==v||p==w;if(qi(e))return wa(e,u);if(p==S||p==m||d&&!s){if(o=l||d?{}:fs(e),!u)return l?function(e,t){return Ca(e,hs(e),t)}(e,function(e,t){return e&&Ca(t,Fo(t),e)}(o,e)):function(e,t){return Ca(e,cs(e),t)}(e,rr(o,e))}else{if(!Je[p])return s?e:{};o=function(e,t,n){var r,a=e.constructor;switch(t){case A:return ka(e);case y:case b:return new a(+e);case R:return function(e,t){var n=t?ka(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,n);case F:case O:case D:case M:case L:case P:case B:case z:case V:return Ia(e,n);case k:return new a;case I:case C:return new a(e);case T:return function(e){var t=new e.constructor(e.source,pe.exec(e));return t.lastIndex=e.lastIndex,t}(e);case $:return new a;case E:return r=e,Ln?Se(Ln.call(r)):{}}}(e,p,u)}}i||(i=new qn);var f=i.get(e);if(f)return f;i.set(e,o),io(e)?e.forEach((function(r){o.add(or(r,t,n,r,e,i))})):no(e)&&e.forEach((function(r,a){o.set(a,or(r,t,n,a,e,i))}));var g=h?a:(c?l?ns:ts:l?Fo:Ro)(e);return xt(g||e,(function(r,a){g&&(r=e[a=r]),er(o,a,or(r,t,n,a,e,i))})),o}function ur(e,t,n){var r=n.length;if(null==e)return!r;for(e=Se(e);r--;){var s=n[r],i=t[s],o=e[s];if(o===a&&!(s in e)||!i(o))return!1}return!0}function lr(e,t,n){if("function"!=typeof e)throw new $e(s);return Es((function(){e.apply(a,n)}),t)}function cr(e,t,n,r){var a=-1,s=It,i=!0,o=e.length,u=[],l=t.length;if(!o)return u;n&&(t=Nt(t,Ut(n))),r?(s=St,i=!1):t.length>=200&&(s=Ht,i=!1,t=new Kn(t));e:for(;++a<o;){var c=e[a],h=null==n?c:n(c);if(c=r||0!==c?c:0,i&&h==h){for(var p=l;p--;)if(t[p]===h)continue e;u.push(c)}else s(t,h,r)||u.push(c)}return u}Bn.templateSettings={escape:X,evaluate:Y,interpolate:Q,variable:"",imports:{_:Bn}},Bn.prototype=Vn.prototype,Bn.prototype.constructor=Bn,Wn.prototype=zn(Vn.prototype),Wn.prototype.constructor=Wn,Un.prototype=zn(Vn.prototype),Un.prototype.constructor=Un,Gn.prototype.clear=function(){this.__data__=Cn?Cn(null):{},this.size=0},Gn.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},Gn.prototype.get=function(e){var t=this.__data__;if(Cn){var n=t[e];return n===i?a:n}return Fe.call(t,e)?t[e]:a},Gn.prototype.has=function(e){var t=this.__data__;return Cn?t[e]!==a:Fe.call(t,e)},Gn.prototype.set=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=Cn&&t===a?i:t,this},Hn.prototype.clear=function(){this.__data__=[],this.size=0},Hn.prototype.delete=function(e){var t=this.__data__,n=tr(t,e);return!(n<0||(n==t.length-1?t.pop():rt.call(t,n,1),--this.size,0))},Hn.prototype.get=function(e){var t=this.__data__,n=tr(t,e);return n<0?a:t[n][1]},Hn.prototype.has=function(e){return tr(this.__data__,e)>-1},Hn.prototype.set=function(e,t){var n=this.__data__,r=tr(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this},jn.prototype.clear=function(){this.size=0,this.__data__={hash:new Gn,map:new(Sn||Hn),string:new Gn}},jn.prototype.delete=function(e){var t=os(this,e).delete(e);return this.size-=t?1:0,t},jn.prototype.get=function(e){return os(this,e).get(e)},jn.prototype.has=function(e){return os(this,e).has(e)},jn.prototype.set=function(e,t){var n=os(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this},Kn.prototype.add=Kn.prototype.push=function(e){return this.__data__.set(e,i),this},Kn.prototype.has=function(e){return this.__data__.has(e)},qn.prototype.clear=function(){this.__data__=new Hn,this.size=0},qn.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},qn.prototype.get=function(e){return this.__data__.get(e)},qn.prototype.has=function(e){return this.__data__.has(e)},qn.prototype.set=function(e,t){var n=this.__data__;if(n instanceof Hn){var r=n.__data__;if(!Sn||r.length<199)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new jn(r)}return n.set(e,t),this.size=n.size,this};var hr=Aa(xr),pr=Aa(vr,!0);function dr(e,t){var n=!0;return hr(e,(function(e,r,a){return n=!!t(e,r,a)})),n}function fr(e,t,n){for(var r=-1,s=e.length;++r<s;){var i=e[r],o=t(i);if(null!=o&&(u===a?o==o&&!uo(o):n(o,u)))var u=o,l=i}return l}function mr(e,t){var n=[];return hr(e,(function(e,r,a){t(e,r,a)&&n.push(e)})),n}function gr(e,t,n,r,a){var s=-1,i=e.length;for(n||(n=ms),a||(a=[]);++s<i;){var o=e[s];t>0&&n(o)?t>1?gr(o,t-1,n,r,a):Tt(a,o):r||(a[a.length]=o)}return a}var yr=Ra(),br=Ra(!0);function xr(e,t){return e&&yr(e,t,Ro)}function vr(e,t){return e&&br(e,t,Ro)}function wr(e,t){return kt(t,(function(t){return Qi(e[t])}))}function kr(e,t){for(var n=0,r=(t=ya(t,e)).length;null!=e&&n<r;)e=e[Ls(t[n++])];return n&&n==r?e:a}function Ir(e,t,n){var r=t(e);return Gi(e)?r:Tt(r,n(e))}function Sr(e){return null==e?e===a?"[object Undefined]":"[object Null]":ot&&ot in Se(e)?function(e){var t=Fe.call(e,ot),n=e[ot];try{e[ot]=a;var r=!0}catch(e){}var s=Me.call(e);return r&&(t?e[ot]=n:delete e[ot]),s}(e):function(e){return Me.call(e)}(e)}function Nr(e,t){return e>t}function Tr(e,t){return null!=e&&Fe.call(e,t)}function $r(e,t){return null!=e&&t in Se(e)}function Cr(e,t,n){for(var s=n?St:It,i=e[0].length,o=e.length,u=o,l=r(o),c=1/0,h=[];u--;){var p=e[u];u&&t&&(p=Nt(p,Ut(t))),c=bn(p.length,c),l[u]=!n&&(t||i>=120&&p.length>=120)?new Kn(u&&p):a}p=e[0];var d=-1,f=l[0];e:for(;++d<i&&h.length<c;){var m=p[d],g=t?t(m):m;if(m=n||0!==m?m:0,!(f?Ht(f,g):s(h,g,n))){for(u=o;--u;){var y=l[u];if(!(y?Ht(y,g):s(e[u],g,n)))continue e}f&&f.push(g),h.push(m)}}return h}function Er(e,t,n){var r=null==(e=Ns(e,t=ya(t,e)))?e:e[Ls(Ys(t))];return null==r?a:yt(r,e,n)}function _r(e){return to(e)&&Sr(e)==m}function Ar(e,t,n,r,s){return e===t||(null==e||null==t||!to(e)&&!to(t)?e!=e&&t!=t:function(e,t,n,r,s,i){var o=Gi(e),u=Gi(t),l=o?g:ps(e),c=u?g:ps(t),h=(l=l==m?S:l)==S,p=(c=c==m?S:c)==S,d=l==c;if(d&&qi(e)){if(!qi(t))return!1;o=!0,h=!1}if(d&&!h)return i||(i=new qn),o||lo(e)?Ja(e,t,n,r,s,i):function(e,t,n,r,a,s,i){switch(n){case R:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case A:return!(e.byteLength!=t.byteLength||!s(new We(e),new We(t)));case y:case b:case I:return zi(+e,+t);case x:return e.name==t.name&&e.message==t.message;case T:case C:return e==t+"";case k:var o=Jt;case $:var u=1&r;if(o||(o=nn),e.size!=t.size&&!u)return!1;var l=i.get(e);if(l)return l==t;r|=2,i.set(e,t);var c=Ja(o(e),o(t),r,a,s,i);return i.delete(e),c;case E:if(Ln)return Ln.call(e)==Ln.call(t)}return!1}(e,t,l,n,r,s,i);if(!(1&n)){var f=h&&Fe.call(e,"__wrapped__"),v=p&&Fe.call(t,"__wrapped__");if(f||v){var w=f?e.value():e,N=v?t.value():t;return i||(i=new qn),s(w,N,n,r,i)}}return!!d&&(i||(i=new qn),function(e,t,n,r,s,i){var o=1&n,u=ts(e),l=u.length;if(l!=ts(t).length&&!o)return!1;for(var c=l;c--;){var h=u[c];if(!(o?h in t:Fe.call(t,h)))return!1}var p=i.get(e),d=i.get(t);if(p&&d)return p==t&&d==e;var f=!0;i.set(e,t),i.set(t,e);for(var m=o;++c<l;){var g=e[h=u[c]],y=t[h];if(r)var b=o?r(y,g,h,t,e,i):r(g,y,h,e,t,i);if(!(b===a?g===y||s(g,y,n,r,i):b)){f=!1;break}m||(m="constructor"==h)}if(f&&!m){var x=e.constructor,v=t.constructor;x==v||!("constructor"in e)||!("constructor"in t)||"function"==typeof x&&x instanceof x&&"function"==typeof v&&v instanceof v||(f=!1)}return i.delete(e),i.delete(t),f}(e,t,n,r,s,i))}(e,t,n,r,Ar,s))}function Rr(e,t,n,r){var s=n.length,i=s,o=!r;if(null==e)return!i;for(e=Se(e);s--;){var u=n[s];if(o&&u[2]?u[1]!==e[u[0]]:!(u[0]in e))return!1}for(;++s<i;){var l=(u=n[s])[0],c=e[l],h=u[1];if(o&&u[2]){if(c===a&&!(l in e))return!1}else{var p=new qn;if(r)var d=r(c,h,l,e,t,p);if(!(d===a?Ar(h,c,3,r,p):d))return!1}}return!0}function Fr(e){return!(!eo(e)||(t=e,De&&De in t))&&(Qi(e)?Be:me).test(Ps(e));var t}function Or(e){return"function"==typeof e?e:null==e?au:"object"==typeof e?Gi(e)?Br(e[0],e[1]):Pr(e):du(e)}function Dr(e){if(!ws(e))return gn(e);var t=[];for(var n in Se(e))Fe.call(e,n)&&"constructor"!=n&&t.push(n);return t}function Mr(e,t){return e<t}function Lr(e,t){var n=-1,a=ji(e)?r(e.length):[];return hr(e,(function(e,r,s){a[++n]=t(e,r,s)})),a}function Pr(e){var t=us(e);return 1==t.length&&t[0][2]?Is(t[0][0],t[0][1]):function(n){return n===e||Rr(n,e,t)}}function Br(e,t){return bs(e)&&ks(t)?Is(Ls(e),t):function(n){var r=$o(n,e);return r===a&&r===t?Co(n,e):Ar(t,r,3)}}function zr(e,t,n,r,s){e!==t&&yr(t,(function(i,o){if(s||(s=new qn),eo(i))!function(e,t,n,r,s,i,o){var u=$s(e,n),l=$s(t,n),c=o.get(l);if(c)Jn(e,n,c);else{var h=i?i(u,l,n+"",e,t,o):a,p=h===a;if(p){var d=Gi(l),f=!d&&qi(l),m=!d&&!f&&lo(l);h=l,d||f||m?Gi(u)?h=u:Ki(u)?h=$a(u):f?(p=!1,h=wa(l,!0)):m?(p=!1,h=Ia(l,!0)):h=[]:ao(l)||Ui(l)?(h=u,Ui(u)?h=bo(u):eo(u)&&!Qi(u)||(h=fs(l))):p=!1}p&&(o.set(l,h),s(h,l,r,i,o),o.delete(l)),Jn(e,n,h)}}(e,t,o,n,zr,r,s);else{var u=r?r($s(e,o),i,o+"",e,t,s):a;u===a&&(u=i),Jn(e,o,u)}}),Fo)}function Vr(e,t){var n=e.length;if(n)return gs(t+=t<0?n:0,n)?e[t]:a}function Wr(e,t,n){t=t.length?Nt(t,(function(e){return Gi(e)?function(t){return kr(t,1===e.length?e[0]:e)}:e})):[au];var r=-1;t=Nt(t,Ut(is()));var a=Lr(e,(function(e,n,a){var s=Nt(t,(function(t){return t(e)}));return{criteria:s,index:++r,value:e}}));return function(e,t){var r=e.length;for(e.sort((function(e,t){return function(e,t,n){for(var r=-1,a=e.criteria,s=t.criteria,i=a.length,o=n.length;++r<i;){var u=Sa(a[r],s[r]);if(u)return r>=o?u:u*("desc"==n[r]?-1:1)}return e.index-t.index}(e,t,n)}));r--;)e[r]=e[r].value;return e}(a)}function Ur(e,t,n){for(var r=-1,a=t.length,s={};++r<a;){var i=t[r],o=kr(e,i);n(o,i)&&Qr(s,ya(i,e),o)}return s}function Gr(e,t,n,r){var a=r?Ot:Ft,s=-1,i=t.length,o=e;for(e===t&&(t=$a(t)),n&&(o=Nt(e,Ut(n)));++s<i;)for(var u=0,l=t[s],c=n?n(l):l;(u=a(o,c,u,r))>-1;)o!==e&&rt.call(o,u,1),rt.call(e,u,1);return e}function Hr(e,t){for(var n=e?t.length:0,r=n-1;n--;){var a=t[n];if(n==r||a!==s){var s=a;gs(a)?rt.call(e,a,1):la(e,a)}}return e}function jr(e,t){return e+hn(wn()*(t-e+1))}function Kr(e,t){var n="";if(!e||t<1||t>h)return n;do{t%2&&(n+=e),(t=hn(t/2))&&(e+=e)}while(t);return n}function qr(e,t){return _s(Ss(e,t,au),e+"")}function Xr(e){return Yn(Vo(e))}function Yr(e,t){var n=Vo(e);return Fs(n,ir(t,0,n.length))}function Qr(e,t,n,r){if(!eo(e))return e;for(var s=-1,i=(t=ya(t,e)).length,o=i-1,u=e;null!=u&&++s<i;){var l=Ls(t[s]),c=n;if("__proto__"===l||"constructor"===l||"prototype"===l)return e;if(s!=o){var h=u[l];(c=r?r(h,l,u):a)===a&&(c=eo(h)?h:gs(t[s+1])?[]:{})}er(u,l,c),u=u[l]}return e}var Zr=En?function(e,t){return En.set(e,t),e}:au,Jr=lt?function(e,t){return lt(e,"toString",{configurable:!0,enumerable:!1,value:tu(t),writable:!0})}:au;function ea(e){return Fs(Vo(e))}function ta(e,t,n){var a=-1,s=e.length;t<0&&(t=-t>s?0:s+t),(n=n>s?s:n)<0&&(n+=s),s=t>n?0:n-t>>>0,t>>>=0;for(var i=r(s);++a<s;)i[a]=e[a+t];return i}function na(e,t){var n;return hr(e,(function(e,r,a){return!(n=t(e,r,a))})),!!n}function ra(e,t,n){var r=0,a=null==e?r:e.length;if("number"==typeof t&&t==t&&a<=2147483647){for(;r<a;){var s=r+a>>>1,i=e[s];null!==i&&!uo(i)&&(n?i<=t:i<t)?r=s+1:a=s}return a}return aa(e,t,au,n)}function aa(e,t,n,r){var s=0,i=null==e?0:e.length;if(0===i)return 0;for(var o=(t=n(t))!=t,u=null===t,l=uo(t),c=t===a;s<i;){var h=hn((s+i)/2),p=n(e[h]),d=p!==a,f=null===p,m=p==p,g=uo(p);if(o)var y=r||m;else y=c?m&&(r||d):u?m&&d&&(r||!f):l?m&&d&&!f&&(r||!g):!f&&!g&&(r?p<=t:p<t);y?s=h+1:i=h}return bn(i,4294967294)}function sa(e,t){for(var n=-1,r=e.length,a=0,s=[];++n<r;){var i=e[n],o=t?t(i):i;if(!n||!zi(o,u)){var u=o;s[a++]=0===i?0:i}}return s}function ia(e){return"number"==typeof e?e:uo(e)?p:+e}function oa(e){if("string"==typeof e)return e;if(Gi(e))return Nt(e,oa)+"";if(uo(e))return Pn?Pn.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function ua(e,t,n){var r=-1,a=It,s=e.length,i=!0,o=[],u=o;if(n)i=!1,a=St;else if(s>=200){var l=t?null:Ka(e);if(l)return nn(l);i=!1,a=Ht,u=new Kn}else u=t?[]:o;e:for(;++r<s;){var c=e[r],h=t?t(c):c;if(c=n||0!==c?c:0,i&&h==h){for(var p=u.length;p--;)if(u[p]===h)continue e;t&&u.push(h),o.push(c)}else a(u,h,n)||(u!==o&&u.push(h),o.push(c))}return o}function la(e,t){return null==(e=Ns(e,t=ya(t,e)))||delete e[Ls(Ys(t))]}function ca(e,t,n,r){return Qr(e,t,n(kr(e,t)),r)}function ha(e,t,n,r){for(var a=e.length,s=r?a:-1;(r?s--:++s<a)&&t(e[s],s,e););return n?ta(e,r?0:s,r?s+1:a):ta(e,r?s+1:0,r?a:s)}function pa(e,t){var n=e;return n instanceof Un&&(n=n.value()),$t(t,(function(e,t){return t.func.apply(t.thisArg,Tt([e],t.args))}),n)}function da(e,t,n){var a=e.length;if(a<2)return a?ua(e[0]):[];for(var s=-1,i=r(a);++s<a;)for(var o=e[s],u=-1;++u<a;)u!=s&&(i[s]=cr(i[s]||o,e[u],t,n));return ua(gr(i,1),t,n)}function fa(e,t,n){for(var r=-1,s=e.length,i=t.length,o={};++r<s;){var u=r<i?t[r]:a;n(o,e[r],u)}return o}function ma(e){return Ki(e)?e:[]}function ga(e){return"function"==typeof e?e:au}function ya(e,t){return Gi(e)?e:bs(e,t)?[e]:Ms(xo(e))}var ba=qr;function xa(e,t,n){var r=e.length;return n=n===a?r:n,!t&&n>=r?e:ta(e,t,n)}var va=ct||function(e){return st.clearTimeout(e)};function wa(e,t){if(t)return e.slice();var n=e.length,r=Ue?Ue(n):new e.constructor(n);return e.copy(r),r}function ka(e){var t=new e.constructor(e.byteLength);return new We(t).set(new We(e)),t}function Ia(e,t){var n=t?ka(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}function Sa(e,t){if(e!==t){var n=e!==a,r=null===e,s=e==e,i=uo(e),o=t!==a,u=null===t,l=t==t,c=uo(t);if(!u&&!c&&!i&&e>t||i&&o&&l&&!u&&!c||r&&o&&l||!n&&l||!s)return 1;if(!r&&!i&&!c&&e<t||c&&n&&s&&!r&&!i||u&&n&&s||!o&&s||!l)return-1}return 0}function Na(e,t,n,a){for(var s=-1,i=e.length,o=n.length,u=-1,l=t.length,c=yn(i-o,0),h=r(l+c),p=!a;++u<l;)h[u]=t[u];for(;++s<o;)(p||s<i)&&(h[n[s]]=e[s]);for(;c--;)h[u++]=e[s++];return h}function Ta(e,t,n,a){for(var s=-1,i=e.length,o=-1,u=n.length,l=-1,c=t.length,h=yn(i-u,0),p=r(h+c),d=!a;++s<h;)p[s]=e[s];for(var f=s;++l<c;)p[f+l]=t[l];for(;++o<u;)(d||s<i)&&(p[f+n[o]]=e[s++]);return p}function $a(e,t){var n=-1,a=e.length;for(t||(t=r(a));++n<a;)t[n]=e[n];return t}function Ca(e,t,n,r){var s=!n;n||(n={});for(var i=-1,o=t.length;++i<o;){var u=t[i],l=r?r(n[u],e[u],u,n,e):a;l===a&&(l=e[u]),s?ar(n,u,l):er(n,u,l)}return n}function Ea(e,t){return function(n,r){var a=Gi(n)?bt:nr,s=t?t():{};return a(n,e,is(r,2),s)}}function _a(e){return qr((function(t,n){var r=-1,s=n.length,i=s>1?n[s-1]:a,o=s>2?n[2]:a;for(i=e.length>3&&"function"==typeof i?(s--,i):a,o&&ys(n[0],n[1],o)&&(i=s<3?a:i,s=1),t=Se(t);++r<s;){var u=n[r];u&&e(t,u,r,i)}return t}))}function Aa(e,t){return function(n,r){if(null==n)return n;if(!ji(n))return e(n,r);for(var a=n.length,s=t?a:-1,i=Se(n);(t?s--:++s<a)&&!1!==r(i[s],s,i););return n}}function Ra(e){return function(t,n,r){for(var a=-1,s=Se(t),i=r(t),o=i.length;o--;){var u=i[e?o:++a];if(!1===n(s[u],u,s))break}return t}}function Fa(e){return function(t){var n=Zt(t=xo(t))?sn(t):a,r=n?n[0]:t.charAt(0),s=n?xa(n,1).join(""):t.slice(1);return r[e]()+s}}function Oa(e){return function(t){return $t(Zo(Go(t).replace(Ge,"")),e,"")}}function Da(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=zn(e.prototype),r=e.apply(n,t);return eo(r)?r:n}}function Ma(e){return function(t,n,r){var s=Se(t);if(!ji(t)){var i=is(n,3);t=Ro(t),n=function(e){return i(s[e],e,s)}}var o=e(t,n,r);return o>-1?s[i?t[o]:o]:a}}function La(e){return es((function(t){var n=t.length,r=n,i=Wn.prototype.thru;for(e&&t.reverse();r--;){var o=t[r];if("function"!=typeof o)throw new $e(s);if(i&&!u&&"wrapper"==as(o))var u=new Wn([],!0)}for(r=u?r:n;++r<n;){var l=as(o=t[r]),c="wrapper"==l?rs(o):a;u=c&&xs(c[0])&&424==c[1]&&!c[4].length&&1==c[9]?u[as(c[0])].apply(u,c[3]):1==o.length&&xs(o)?u[l]():u.thru(o)}return function(){var e=arguments,r=e[0];if(u&&1==e.length&&Gi(r))return u.plant(r).value();for(var a=0,s=n?t[a].apply(this,e):r;++a<n;)s=t[a].call(this,s);return s}}))}function Pa(e,t,n,s,i,o,u,c,h,p){var d=t&l,f=1&t,m=2&t,g=24&t,y=512&t,b=m?a:Da(e);return function a(){for(var l=arguments.length,x=r(l),v=l;v--;)x[v]=arguments[v];if(g)var w=ss(a),k=qt(x,w);if(s&&(x=Na(x,s,i,g)),o&&(x=Ta(x,o,u,g)),l-=k,g&&l<p){var I=tn(x,w);return Ha(e,t,Pa,a.placeholder,n,x,I,c,h,p-l)}var S=f?n:this,N=m?S[e]:e;return l=x.length,c?x=Ts(x,c):y&&l>1&&x.reverse(),d&&h<l&&(x.length=h),this&&this!==st&&this instanceof a&&(N=b||Da(N)),N.apply(S,x)}}function Ba(e,t){return function(n,r){return function(e,t,n,r){return xr(e,(function(e,a,s){t(r,n(e),a,s)})),r}(n,e,t(r),{})}}function za(e,t){return function(n,r){var s;if(n===a&&r===a)return t;if(n!==a&&(s=n),r!==a){if(s===a)return r;"string"==typeof n||"string"==typeof r?(n=oa(n),r=oa(r)):(n=ia(n),r=ia(r)),s=e(n,r)}return s}}function Va(e){return es((function(t){return t=Nt(t,Ut(is())),qr((function(n){var r=this;return e(t,(function(e){return yt(e,r,n)}))}))}))}function Wa(e,t){var n=(t=t===a?" ":oa(t)).length;if(n<2)return n?Kr(t,e):t;var r=Kr(t,cn(e/an(t)));return Zt(t)?xa(sn(r),0,e).join(""):r.slice(0,e)}function Ua(e){return function(t,n,s){return s&&"number"!=typeof s&&ys(t,n,s)&&(n=s=a),t=fo(t),n===a?(n=t,t=0):n=fo(n),function(e,t,n,a){for(var s=-1,i=yn(cn((t-e)/(n||1)),0),o=r(i);i--;)o[a?i:++s]=e,e+=n;return o}(t,n,s=s===a?t<n?1:-1:fo(s),e)}}function Ga(e){return function(t,n){return"string"==typeof t&&"string"==typeof n||(t=yo(t),n=yo(n)),e(t,n)}}function Ha(e,t,n,r,s,i,o,l,c,h){var p=8&t;t|=p?u:64,4&(t&=~(p?64:u))||(t&=-4);var d=[e,t,s,p?i:a,p?o:a,p?a:i,p?a:o,l,c,h],f=n.apply(a,d);return xs(e)&&Cs(f,d),f.placeholder=r,As(f,e,t)}function ja(e){var t=Ie[e];return function(e,n){if(e=yo(e),(n=null==n?0:bn(mo(n),292))&&fn(e)){var r=(xo(e)+"e").split("e");return+((r=(xo(t(r[0]+"e"+(+r[1]+n)))+"e").split("e"))[0]+"e"+(+r[1]-n))}return t(e)}}var Ka=Tn&&1/nn(new Tn([,-0]))[1]==c?function(e){return new Tn(e)}:lu;function qa(e){return function(t){var n=ps(t);return n==k?Jt(t):n==$?rn(t):function(e,t){return Nt(t,(function(t){return[t,e[t]]}))}(t,e(t))}}function Xa(e,t,n,i,c,h,p,d){var f=2&t;if(!f&&"function"!=typeof e)throw new $e(s);var m=i?i.length:0;if(m||(t&=-97,i=c=a),p=p===a?p:yn(mo(p),0),d=d===a?d:mo(d),m-=c?c.length:0,64&t){var g=i,y=c;i=c=a}var b=f?a:rs(e),x=[e,t,n,i,c,g,y,h,p,d];if(b&&function(e,t){var n=e[1],r=t[1],a=n|r,s=a<131,i=r==l&&8==n||r==l&&256==n&&e[7].length<=t[8]||384==r&&t[7].length<=t[8]&&8==n;if(!s&&!i)return e;1&r&&(e[2]=t[2],a|=1&n?0:4);var u=t[3];if(u){var c=e[3];e[3]=c?Na(c,u,t[4]):u,e[4]=c?tn(e[3],o):t[4]}(u=t[5])&&(c=e[5],e[5]=c?Ta(c,u,t[6]):u,e[6]=c?tn(e[5],o):t[6]),(u=t[7])&&(e[7]=u),r&l&&(e[8]=null==e[8]?t[8]:bn(e[8],t[8])),null==e[9]&&(e[9]=t[9]),e[0]=t[0],e[1]=a}(x,b),e=x[0],t=x[1],n=x[2],i=x[3],c=x[4],!(d=x[9]=x[9]===a?f?0:e.length:yn(x[9]-m,0))&&24&t&&(t&=-25),t&&1!=t)v=8==t||16==t?function(e,t,n){var s=Da(e);return function i(){for(var o=arguments.length,u=r(o),l=o,c=ss(i);l--;)u[l]=arguments[l];var h=o<3&&u[0]!==c&&u[o-1]!==c?[]:tn(u,c);return(o-=h.length)<n?Ha(e,t,Pa,i.placeholder,a,u,h,a,a,n-o):yt(this&&this!==st&&this instanceof i?s:e,this,u)}}(e,t,d):t!=u&&33!=t||c.length?Pa.apply(a,x):function(e,t,n,a){var s=1&t,i=Da(e);return function t(){for(var o=-1,u=arguments.length,l=-1,c=a.length,h=r(c+u),p=this&&this!==st&&this instanceof t?i:e;++l<c;)h[l]=a[l];for(;u--;)h[l++]=arguments[++o];return yt(p,s?n:this,h)}}(e,t,n,i);else var v=function(e,t,n){var r=1&t,a=Da(e);return function t(){return(this&&this!==st&&this instanceof t?a:e).apply(r?n:this,arguments)}}(e,t,n);return As((b?Zr:Cs)(v,x),e,t)}function Ya(e,t,n,r){return e===a||zi(e,_e[n])&&!Fe.call(r,n)?t:e}function Qa(e,t,n,r,s,i){return eo(e)&&eo(t)&&(i.set(t,e),zr(e,t,a,Qa,i),i.delete(t)),e}function Za(e){return ao(e)?a:e}function Ja(e,t,n,r,s,i){var o=1&n,u=e.length,l=t.length;if(u!=l&&!(o&&l>u))return!1;var c=i.get(e),h=i.get(t);if(c&&h)return c==t&&h==e;var p=-1,d=!0,f=2&n?new Kn:a;for(i.set(e,t),i.set(t,e);++p<u;){var m=e[p],g=t[p];if(r)var y=o?r(g,m,p,t,e,i):r(m,g,p,e,t,i);if(y!==a){if(y)continue;d=!1;break}if(f){if(!Et(t,(function(e,t){if(!Ht(f,t)&&(m===e||s(m,e,n,r,i)))return f.push(t)}))){d=!1;break}}else if(m!==g&&!s(m,g,n,r,i)){d=!1;break}}return i.delete(e),i.delete(t),d}function es(e){return _s(Ss(e,a,Hs),e+"")}function ts(e){return Ir(e,Ro,cs)}function ns(e){return Ir(e,Fo,hs)}var rs=En?function(e){return En.get(e)}:lu;function as(e){for(var t=e.name+"",n=_n[t],r=Fe.call(_n,t)?n.length:0;r--;){var a=n[r],s=a.func;if(null==s||s==e)return a.name}return t}function ss(e){return(Fe.call(Bn,"placeholder")?Bn:e).placeholder}function is(){var e=Bn.iteratee||su;return e=e===su?Or:e,arguments.length?e(arguments[0],arguments[1]):e}function os(e,t){var n,r,a=e.__data__;return("string"==(r=typeof(n=t))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==n:null===n)?a["string"==typeof t?"string":"hash"]:a.map}function us(e){for(var t=Ro(e),n=t.length;n--;){var r=t[n],a=e[r];t[n]=[r,a,ks(a)]}return t}function ls(e,t){var n=function(e,t){return null==e?a:e[t]}(e,t);return Fr(n)?n:a}var cs=pn?function(e){return null==e?[]:(e=Se(e),kt(pn(e),(function(t){return et.call(e,t)})))}:gu,hs=pn?function(e){for(var t=[];e;)Tt(t,cs(e)),e=je(e);return t}:gu,ps=Sr;function ds(e,t,n){for(var r=-1,a=(t=ya(t,e)).length,s=!1;++r<a;){var i=Ls(t[r]);if(!(s=null!=e&&n(e,i)))break;e=e[i]}return s||++r!=a?s:!!(a=null==e?0:e.length)&&Ji(a)&&gs(i,a)&&(Gi(e)||Ui(e))}function fs(e){return"function"!=typeof e.constructor||ws(e)?{}:zn(je(e))}function ms(e){return Gi(e)||Ui(e)||!!(at&&e&&e[at])}function gs(e,t){var n=typeof e;return!!(t=null==t?h:t)&&("number"==n||"symbol"!=n&&ye.test(e))&&e>-1&&e%1==0&&e<t}function ys(e,t,n){if(!eo(n))return!1;var r=typeof t;return!!("number"==r?ji(n)&&gs(t,n.length):"string"==r&&t in n)&&zi(n[t],e)}function bs(e,t){if(Gi(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!uo(e))||J.test(e)||!Z.test(e)||null!=t&&e in Se(t)}function xs(e){var t=as(e),n=Bn[t];if("function"!=typeof n||!(t in Un.prototype))return!1;if(e===n)return!0;var r=rs(n);return!!r&&e===r[0]}(In&&ps(new In(new ArrayBuffer(1)))!=R||Sn&&ps(new Sn)!=k||Nn&&ps(Nn.resolve())!=N||Tn&&ps(new Tn)!=$||$n&&ps(new $n)!=_)&&(ps=function(e){var t=Sr(e),n=t==S?e.constructor:a,r=n?Ps(n):"";if(r)switch(r){case An:return R;case Rn:return k;case Fn:return N;case On:return $;case Dn:return _}return t});var vs=Ae?Qi:yu;function ws(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||_e)}function ks(e){return e==e&&!eo(e)}function Is(e,t){return function(n){return null!=n&&n[e]===t&&(t!==a||e in Se(n))}}function Ss(e,t,n){return t=yn(t===a?e.length-1:t,0),function(){for(var a=arguments,s=-1,i=yn(a.length-t,0),o=r(i);++s<i;)o[s]=a[t+s];s=-1;for(var u=r(t+1);++s<t;)u[s]=a[s];return u[t]=n(o),yt(e,this,u)}}function Ns(e,t){return t.length<2?e:kr(e,ta(t,0,-1))}function Ts(e,t){for(var n=e.length,r=bn(t.length,n),s=$a(e);r--;){var i=t[r];e[r]=gs(i,n)?s[i]:a}return e}function $s(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var Cs=Rs(Zr),Es=Pt||function(e,t){return st.setTimeout(e,t)},_s=Rs(Jr);function As(e,t,n){var r=t+"";return _s(e,function(e,t){var n=t.length;if(!n)return e;var r=n-1;return t[r]=(n>1?"& ":"")+t[r],t=t.join(n>2?", ":" "),e.replace(se,"{\n/* [wrapped with "+t+"] */\n")}(r,function(e,t){return xt(f,(function(n){var r="_."+n[0];t&n[1]&&!It(e,r)&&e.push(r)})),e.sort()}(function(e){var t=e.match(ie);return t?t[1].split(oe):[]}(r),n)))}function Rs(e){var t=0,n=0;return function(){var r=xn(),s=16-(r-n);if(n=r,s>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(a,arguments)}}function Fs(e,t){var n=-1,r=e.length,s=r-1;for(t=t===a?r:t;++n<t;){var i=jr(n,s),o=e[i];e[i]=e[n],e[n]=o}return e.length=t,e}var Os,Ds,Ms=(Os=Oi((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(ee,(function(e,n,r,a){t.push(r?a.replace(ce,"$1"):n||e)})),t}),(function(e){return 500===Ds.size&&Ds.clear(),e})),Ds=Os.cache,Os);function Ls(e){if("string"==typeof e||uo(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function Ps(e){if(null!=e){try{return Re.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Bs(e){if(e instanceof Un)return e.clone();var t=new Wn(e.__wrapped__,e.__chain__);return t.__actions__=$a(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}var zs=qr((function(e,t){return Ki(e)?cr(e,gr(t,1,Ki,!0)):[]})),Vs=qr((function(e,t){var n=Ys(t);return Ki(n)&&(n=a),Ki(e)?cr(e,gr(t,1,Ki,!0),is(n,2)):[]})),Ws=qr((function(e,t){var n=Ys(t);return Ki(n)&&(n=a),Ki(e)?cr(e,gr(t,1,Ki,!0),a,n):[]}));function Us(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var a=null==n?0:mo(n);return a<0&&(a=yn(r+a,0)),Rt(e,is(t,3),a)}function Gs(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var s=r-1;return n!==a&&(s=mo(n),s=n<0?yn(r+s,0):bn(s,r-1)),Rt(e,is(t,3),s,!0)}function Hs(e){return null!=e&&e.length?gr(e,1):[]}function js(e){return e&&e.length?e[0]:a}var Ks=qr((function(e){var t=Nt(e,ma);return t.length&&t[0]===e[0]?Cr(t):[]})),qs=qr((function(e){var t=Ys(e),n=Nt(e,ma);return t===Ys(n)?t=a:n.pop(),n.length&&n[0]===e[0]?Cr(n,is(t,2)):[]})),Xs=qr((function(e){var t=Ys(e),n=Nt(e,ma);return(t="function"==typeof t?t:a)&&n.pop(),n.length&&n[0]===e[0]?Cr(n,a,t):[]}));function Ys(e){var t=null==e?0:e.length;return t?e[t-1]:a}var Qs=qr(Zs);function Zs(e,t){return e&&e.length&&t&&t.length?Gr(e,t):e}var Js=es((function(e,t){var n=null==e?0:e.length,r=sr(e,t);return Hr(e,Nt(t,(function(e){return gs(e,n)?+e:e})).sort(Sa)),r}));function ei(e){return null==e?e:kn.call(e)}var ti=qr((function(e){return ua(gr(e,1,Ki,!0))})),ni=qr((function(e){var t=Ys(e);return Ki(t)&&(t=a),ua(gr(e,1,Ki,!0),is(t,2))})),ri=qr((function(e){var t=Ys(e);return t="function"==typeof t?t:a,ua(gr(e,1,Ki,!0),a,t)}));function ai(e){if(!e||!e.length)return[];var t=0;return e=kt(e,(function(e){if(Ki(e))return t=yn(e.length,t),!0})),Vt(t,(function(t){return Nt(e,Lt(t))}))}function si(e,t){if(!e||!e.length)return[];var n=ai(e);return null==t?n:Nt(n,(function(e){return yt(t,a,e)}))}var ii=qr((function(e,t){return Ki(e)?cr(e,t):[]})),oi=qr((function(e){return da(kt(e,Ki))})),ui=qr((function(e){var t=Ys(e);return Ki(t)&&(t=a),da(kt(e,Ki),is(t,2))})),li=qr((function(e){var t=Ys(e);return t="function"==typeof t?t:a,da(kt(e,Ki),a,t)})),ci=qr(ai),hi=qr((function(e){var t=e.length,n=t>1?e[t-1]:a;return n="function"==typeof n?(e.pop(),n):a,si(e,n)}));function pi(e){var t=Bn(e);return t.__chain__=!0,t}function di(e,t){return t(e)}var fi=es((function(e){var t=e.length,n=t?e[0]:0,r=this.__wrapped__,s=function(t){return sr(t,e)};return!(t>1||this.__actions__.length)&&r instanceof Un&&gs(n)?((r=r.slice(n,+n+(t?1:0))).__actions__.push({func:di,args:[s],thisArg:a}),new Wn(r,this.__chain__).thru((function(e){return t&&!e.length&&e.push(a),e}))):this.thru(s)})),mi=Ea((function(e,t,n){Fe.call(e,n)?++e[n]:ar(e,n,1)})),gi=Ma(Us),yi=Ma(Gs);function bi(e,t){return(Gi(e)?xt:hr)(e,is(t,3))}function xi(e,t){return(Gi(e)?vt:pr)(e,is(t,3))}var vi=Ea((function(e,t,n){Fe.call(e,n)?e[n].push(t):ar(e,n,[t])})),wi=qr((function(e,t,n){var a=-1,s="function"==typeof t,i=ji(e)?r(e.length):[];return hr(e,(function(e){i[++a]=s?yt(t,e,n):Er(e,t,n)})),i})),ki=Ea((function(e,t,n){ar(e,n,t)}));function Ii(e,t){return(Gi(e)?Nt:Lr)(e,is(t,3))}var Si=Ea((function(e,t,n){e[n?0:1].push(t)}),(function(){return[[],[]]})),Ni=qr((function(e,t){if(null==e)return[];var n=t.length;return n>1&&ys(e,t[0],t[1])?t=[]:n>2&&ys(t[0],t[1],t[2])&&(t=[t[0]]),Wr(e,gr(t,1),[])})),Ti=_t||function(){return st.Date.now()};function $i(e,t,n){return t=n?a:t,t=e&&null==t?e.length:t,Xa(e,l,a,a,a,a,t)}function Ci(e,t){var n;if("function"!=typeof t)throw new $e(s);return e=mo(e),function(){return--e>0&&(n=t.apply(this,arguments)),e<=1&&(t=a),n}}var Ei=qr((function(e,t,n){var r=1;if(n.length){var a=tn(n,ss(Ei));r|=u}return Xa(e,r,t,n,a)})),_i=qr((function(e,t,n){var r=3;if(n.length){var a=tn(n,ss(_i));r|=u}return Xa(t,r,e,n,a)}));function Ai(e,t,n){var r,i,o,u,l,c,h=0,p=!1,d=!1,f=!0;if("function"!=typeof e)throw new $e(s);function m(t){var n=r,s=i;return r=i=a,h=t,u=e.apply(s,n)}function g(e){return h=e,l=Es(b,t),p?m(e):u}function y(e){var n=e-c;return c===a||n>=t||n<0||d&&e-h>=o}function b(){var e=Ti();if(y(e))return x(e);l=Es(b,function(e){var n=t-(e-c);return d?bn(n,o-(e-h)):n}(e))}function x(e){return l=a,f&&r?m(e):(r=i=a,u)}function v(){var e=Ti(),n=y(e);if(r=arguments,i=this,c=e,n){if(l===a)return g(c);if(d)return va(l),l=Es(b,t),m(c)}return l===a&&(l=Es(b,t)),u}return t=yo(t)||0,eo(n)&&(p=!!n.leading,o=(d="maxWait"in n)?yn(yo(n.maxWait)||0,t):o,f="trailing"in n?!!n.trailing:f),v.cancel=function(){l!==a&&va(l),h=0,r=c=i=l=a},v.flush=function(){return l===a?u:x(Ti())},v}var Ri=qr((function(e,t){return lr(e,1,t)})),Fi=qr((function(e,t,n){return lr(e,yo(t)||0,n)}));function Oi(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new $e(s);var n=function(){var r=arguments,a=t?t.apply(this,r):r[0],s=n.cache;if(s.has(a))return s.get(a);var i=e.apply(this,r);return n.cache=s.set(a,i)||s,i};return n.cache=new(Oi.Cache||jn),n}function Di(e){if("function"!=typeof e)throw new $e(s);return function(){var t=arguments;switch(t.length){case 0:return!e.call(this);case 1:return!e.call(this,t[0]);case 2:return!e.call(this,t[0],t[1]);case 3:return!e.call(this,t[0],t[1],t[2])}return!e.apply(this,t)}}Oi.Cache=jn;var Mi=ba((function(e,t){var n=(t=1==t.length&&Gi(t[0])?Nt(t[0],Ut(is())):Nt(gr(t,1),Ut(is()))).length;return qr((function(r){for(var a=-1,s=bn(r.length,n);++a<s;)r[a]=t[a].call(this,r[a]);return yt(e,this,r)}))})),Li=qr((function(e,t){var n=tn(t,ss(Li));return Xa(e,u,a,t,n)})),Pi=qr((function(e,t){var n=tn(t,ss(Pi));return Xa(e,64,a,t,n)})),Bi=es((function(e,t){return Xa(e,256,a,a,a,t)}));function zi(e,t){return e===t||e!=e&&t!=t}var Vi=Ga(Nr),Wi=Ga((function(e,t){return e>=t})),Ui=_r(function(){return arguments}())?_r:function(e){return to(e)&&Fe.call(e,"callee")&&!et.call(e,"callee")},Gi=r.isArray,Hi=ht?Ut(ht):function(e){return to(e)&&Sr(e)==A};function ji(e){return null!=e&&Ji(e.length)&&!Qi(e)}function Ki(e){return to(e)&&ji(e)}var qi=dn||yu,Xi=pt?Ut(pt):function(e){return to(e)&&Sr(e)==b};function Yi(e){if(!to(e))return!1;var t=Sr(e);return t==x||"[object DOMException]"==t||"string"==typeof e.message&&"string"==typeof e.name&&!ao(e)}function Qi(e){if(!eo(e))return!1;var t=Sr(e);return t==v||t==w||"[object AsyncFunction]"==t||"[object Proxy]"==t}function Zi(e){return"number"==typeof e&&e==mo(e)}function Ji(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=h}function eo(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function to(e){return null!=e&&"object"==typeof e}var no=dt?Ut(dt):function(e){return to(e)&&ps(e)==k};function ro(e){return"number"==typeof e||to(e)&&Sr(e)==I}function ao(e){if(!to(e)||Sr(e)!=S)return!1;var t=je(e);if(null===t)return!0;var n=Fe.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&Re.call(n)==Le}var so=ft?Ut(ft):function(e){return to(e)&&Sr(e)==T},io=mt?Ut(mt):function(e){return to(e)&&ps(e)==$};function oo(e){return"string"==typeof e||!Gi(e)&&to(e)&&Sr(e)==C}function uo(e){return"symbol"==typeof e||to(e)&&Sr(e)==E}var lo=gt?Ut(gt):function(e){return to(e)&&Ji(e.length)&&!!Ze[Sr(e)]},co=Ga(Mr),ho=Ga((function(e,t){return e<=t}));function po(e){if(!e)return[];if(ji(e))return oo(e)?sn(e):$a(e);if(it&&e[it])return function(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n}(e[it]());var t=ps(e);return(t==k?Jt:t==$?nn:Vo)(e)}function fo(e){return e?(e=yo(e))===c||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}function mo(e){var t=fo(e),n=t%1;return t==t?n?t-n:t:0}function go(e){return e?ir(mo(e),0,d):0}function yo(e){if("number"==typeof e)return e;if(uo(e))return p;if(eo(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=eo(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=Wt(e);var n=fe.test(e);return n||ge.test(e)?nt(e.slice(2),n?2:8):de.test(e)?p:+e}function bo(e){return Ca(e,Fo(e))}function xo(e){return null==e?"":oa(e)}var vo=_a((function(e,t){if(ws(t)||ji(t))Ca(t,Ro(t),e);else for(var n in t)Fe.call(t,n)&&er(e,n,t[n])})),wo=_a((function(e,t){Ca(t,Fo(t),e)})),ko=_a((function(e,t,n,r){Ca(t,Fo(t),e,r)})),Io=_a((function(e,t,n,r){Ca(t,Ro(t),e,r)})),So=es(sr),No=qr((function(e,t){e=Se(e);var n=-1,r=t.length,s=r>2?t[2]:a;for(s&&ys(t[0],t[1],s)&&(r=1);++n<r;)for(var i=t[n],o=Fo(i),u=-1,l=o.length;++u<l;){var c=o[u],h=e[c];(h===a||zi(h,_e[c])&&!Fe.call(e,c))&&(e[c]=i[c])}return e})),To=qr((function(e){return e.push(a,Qa),yt(Do,a,e)}));function $o(e,t,n){var r=null==e?a:kr(e,t);return r===a?n:r}function Co(e,t){return null!=e&&ds(e,t,$r)}var Eo=Ba((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Me.call(t)),e[t]=n}),tu(au)),_o=Ba((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Me.call(t)),Fe.call(e,t)?e[t].push(n):e[t]=[n]}),is),Ao=qr(Er);function Ro(e){return ji(e)?Xn(e):Dr(e)}function Fo(e){return ji(e)?Xn(e,!0):function(e){if(!eo(e))return function(e){var t=[];if(null!=e)for(var n in Se(e))t.push(n);return t}(e);var t=ws(e),n=[];for(var r in e)("constructor"!=r||!t&&Fe.call(e,r))&&n.push(r);return n}(e)}var Oo=_a((function(e,t,n){zr(e,t,n)})),Do=_a((function(e,t,n,r){zr(e,t,n,r)})),Mo=es((function(e,t){var n={};if(null==e)return n;var r=!1;t=Nt(t,(function(t){return t=ya(t,e),r||(r=t.length>1),t})),Ca(e,ns(e),n),r&&(n=or(n,7,Za));for(var a=t.length;a--;)la(n,t[a]);return n})),Lo=es((function(e,t){return null==e?{}:function(e,t){return Ur(e,t,(function(t,n){return Co(e,n)}))}(e,t)}));function Po(e,t){if(null==e)return{};var n=Nt(ns(e),(function(e){return[e]}));return t=is(t),Ur(e,n,(function(e,n){return t(e,n[0])}))}var Bo=qa(Ro),zo=qa(Fo);function Vo(e){return null==e?[]:Gt(e,Ro(e))}var Wo=Oa((function(e,t,n){return t=t.toLowerCase(),e+(n?Uo(t):t)}));function Uo(e){return Qo(xo(e).toLowerCase())}function Go(e){return(e=xo(e))&&e.replace(be,Xt).replace(He,"")}var Ho=Oa((function(e,t,n){return e+(n?"-":"")+t.toLowerCase()})),jo=Oa((function(e,t,n){return e+(n?" ":"")+t.toLowerCase()})),Ko=Fa("toLowerCase"),qo=Oa((function(e,t,n){return e+(n?"_":"")+t.toLowerCase()})),Xo=Oa((function(e,t,n){return e+(n?" ":"")+Qo(t)})),Yo=Oa((function(e,t,n){return e+(n?" ":"")+t.toUpperCase()})),Qo=Fa("toUpperCase");function Zo(e,t,n){return e=xo(e),(t=n?a:t)===a?function(e){return Xe.test(e)}(e)?function(e){return e.match(Ke)||[]}(e):function(e){return e.match(ue)||[]}(e):e.match(t)||[]}var Jo=qr((function(e,t){try{return yt(e,a,t)}catch(e){return Yi(e)?e:new we(e)}})),eu=es((function(e,t){return xt(t,(function(t){t=Ls(t),ar(e,t,Ei(e[t],e))})),e}));function tu(e){return function(){return e}}var nu=La(),ru=La(!0);function au(e){return e}function su(e){return Or("function"==typeof e?e:or(e,1))}var iu=qr((function(e,t){return function(n){return Er(n,e,t)}})),ou=qr((function(e,t){return function(n){return Er(e,n,t)}}));function uu(e,t,n){var r=Ro(t),a=wr(t,r);null!=n||eo(t)&&(a.length||!r.length)||(n=t,t=e,e=this,a=wr(t,Ro(t)));var s=!(eo(n)&&"chain"in n&&!n.chain),i=Qi(e);return xt(a,(function(n){var r=t[n];e[n]=r,i&&(e.prototype[n]=function(){var t=this.__chain__;if(s||t){var n=e(this.__wrapped__),a=n.__actions__=$a(this.__actions__);return a.push({func:r,args:arguments,thisArg:e}),n.__chain__=t,n}return r.apply(e,Tt([this.value()],arguments))})})),e}function lu(){}var cu=Va(Nt),hu=Va(wt),pu=Va(Et);function du(e){return bs(e)?Lt(Ls(e)):function(e){return function(t){return kr(t,e)}}(e)}var fu=Ua(),mu=Ua(!0);function gu(){return[]}function yu(){return!1}var bu,xu=za((function(e,t){return e+t}),0),vu=ja("ceil"),wu=za((function(e,t){return e/t}),1),ku=ja("floor"),Iu=za((function(e,t){return e*t}),1),Su=ja("round"),Nu=za((function(e,t){return e-t}),0);return Bn.after=function(e,t){if("function"!=typeof t)throw new $e(s);return e=mo(e),function(){if(--e<1)return t.apply(this,arguments)}},Bn.ary=$i,Bn.assign=vo,Bn.assignIn=wo,Bn.assignInWith=ko,Bn.assignWith=Io,Bn.at=So,Bn.before=Ci,Bn.bind=Ei,Bn.bindAll=eu,Bn.bindKey=_i,Bn.castArray=function(){if(!arguments.length)return[];var e=arguments[0];return Gi(e)?e:[e]},Bn.chain=pi,Bn.chunk=function(e,t,n){t=(n?ys(e,t,n):t===a)?1:yn(mo(t),0);var s=null==e?0:e.length;if(!s||t<1)return[];for(var i=0,o=0,u=r(cn(s/t));i<s;)u[o++]=ta(e,i,i+=t);return u},Bn.compact=function(e){for(var t=-1,n=null==e?0:e.length,r=0,a=[];++t<n;){var s=e[t];s&&(a[r++]=s)}return a},Bn.concat=function(){var e=arguments.length;if(!e)return[];for(var t=r(e-1),n=arguments[0],a=e;a--;)t[a-1]=arguments[a];return Tt(Gi(n)?$a(n):[n],gr(t,1))},Bn.cond=function(e){var t=null==e?0:e.length,n=is();return e=t?Nt(e,(function(e){if("function"!=typeof e[1])throw new $e(s);return[n(e[0]),e[1]]})):[],qr((function(n){for(var r=-1;++r<t;){var a=e[r];if(yt(a[0],this,n))return yt(a[1],this,n)}}))},Bn.conforms=function(e){return function(e){var t=Ro(e);return function(n){return ur(n,e,t)}}(or(e,1))},Bn.constant=tu,Bn.countBy=mi,Bn.create=function(e,t){var n=zn(e);return null==t?n:rr(n,t)},Bn.curry=function e(t,n,r){var s=Xa(t,8,a,a,a,a,a,n=r?a:n);return s.placeholder=e.placeholder,s},Bn.curryRight=function e(t,n,r){var s=Xa(t,16,a,a,a,a,a,n=r?a:n);return s.placeholder=e.placeholder,s},Bn.debounce=Ai,Bn.defaults=No,Bn.defaultsDeep=To,Bn.defer=Ri,Bn.delay=Fi,Bn.difference=zs,Bn.differenceBy=Vs,Bn.differenceWith=Ws,Bn.drop=function(e,t,n){var r=null==e?0:e.length;return r?ta(e,(t=n||t===a?1:mo(t))<0?0:t,r):[]},Bn.dropRight=function(e,t,n){var r=null==e?0:e.length;return r?ta(e,0,(t=r-(t=n||t===a?1:mo(t)))<0?0:t):[]},Bn.dropRightWhile=function(e,t){return e&&e.length?ha(e,is(t,3),!0,!0):[]},Bn.dropWhile=function(e,t){return e&&e.length?ha(e,is(t,3),!0):[]},Bn.fill=function(e,t,n,r){var s=null==e?0:e.length;return s?(n&&"number"!=typeof n&&ys(e,t,n)&&(n=0,r=s),function(e,t,n,r){var s=e.length;for((n=mo(n))<0&&(n=-n>s?0:s+n),(r=r===a||r>s?s:mo(r))<0&&(r+=s),r=n>r?0:go(r);n<r;)e[n++]=t;return e}(e,t,n,r)):[]},Bn.filter=function(e,t){return(Gi(e)?kt:mr)(e,is(t,3))},Bn.flatMap=function(e,t){return gr(Ii(e,t),1)},Bn.flatMapDeep=function(e,t){return gr(Ii(e,t),c)},Bn.flatMapDepth=function(e,t,n){return n=n===a?1:mo(n),gr(Ii(e,t),n)},Bn.flatten=Hs,Bn.flattenDeep=function(e){return null!=e&&e.length?gr(e,c):[]},Bn.flattenDepth=function(e,t){return null!=e&&e.length?gr(e,t=t===a?1:mo(t)):[]},Bn.flip=function(e){return Xa(e,512)},Bn.flow=nu,Bn.flowRight=ru,Bn.fromPairs=function(e){for(var t=-1,n=null==e?0:e.length,r={};++t<n;){var a=e[t];r[a[0]]=a[1]}return r},Bn.functions=function(e){return null==e?[]:wr(e,Ro(e))},Bn.functionsIn=function(e){return null==e?[]:wr(e,Fo(e))},Bn.groupBy=vi,Bn.initial=function(e){return null!=e&&e.length?ta(e,0,-1):[]},Bn.intersection=Ks,Bn.intersectionBy=qs,Bn.intersectionWith=Xs,Bn.invert=Eo,Bn.invertBy=_o,Bn.invokeMap=wi,Bn.iteratee=su,Bn.keyBy=ki,Bn.keys=Ro,Bn.keysIn=Fo,Bn.map=Ii,Bn.mapKeys=function(e,t){var n={};return t=is(t,3),xr(e,(function(e,r,a){ar(n,t(e,r,a),e)})),n},Bn.mapValues=function(e,t){var n={};return t=is(t,3),xr(e,(function(e,r,a){ar(n,r,t(e,r,a))})),n},Bn.matches=function(e){return Pr(or(e,1))},Bn.matchesProperty=function(e,t){return Br(e,or(t,1))},Bn.memoize=Oi,Bn.merge=Oo,Bn.mergeWith=Do,Bn.method=iu,Bn.methodOf=ou,Bn.mixin=uu,Bn.negate=Di,Bn.nthArg=function(e){return e=mo(e),qr((function(t){return Vr(t,e)}))},Bn.omit=Mo,Bn.omitBy=function(e,t){return Po(e,Di(is(t)))},Bn.once=function(e){return Ci(2,e)},Bn.orderBy=function(e,t,n,r){return null==e?[]:(Gi(t)||(t=null==t?[]:[t]),Gi(n=r?a:n)||(n=null==n?[]:[n]),Wr(e,t,n))},Bn.over=cu,Bn.overArgs=Mi,Bn.overEvery=hu,Bn.overSome=pu,Bn.partial=Li,Bn.partialRight=Pi,Bn.partition=Si,Bn.pick=Lo,Bn.pickBy=Po,Bn.property=du,Bn.propertyOf=function(e){return function(t){return null==e?a:kr(e,t)}},Bn.pull=Qs,Bn.pullAll=Zs,Bn.pullAllBy=function(e,t,n){return e&&e.length&&t&&t.length?Gr(e,t,is(n,2)):e},Bn.pullAllWith=function(e,t,n){return e&&e.length&&t&&t.length?Gr(e,t,a,n):e},Bn.pullAt=Js,Bn.range=fu,Bn.rangeRight=mu,Bn.rearg=Bi,Bn.reject=function(e,t){return(Gi(e)?kt:mr)(e,Di(is(t,3)))},Bn.remove=function(e,t){var n=[];if(!e||!e.length)return n;var r=-1,a=[],s=e.length;for(t=is(t,3);++r<s;){var i=e[r];t(i,r,e)&&(n.push(i),a.push(r))}return Hr(e,a),n},Bn.rest=function(e,t){if("function"!=typeof e)throw new $e(s);return qr(e,t=t===a?t:mo(t))},Bn.reverse=ei,Bn.sampleSize=function(e,t,n){return t=(n?ys(e,t,n):t===a)?1:mo(t),(Gi(e)?Qn:Yr)(e,t)},Bn.set=function(e,t,n){return null==e?e:Qr(e,t,n)},Bn.setWith=function(e,t,n,r){return r="function"==typeof r?r:a,null==e?e:Qr(e,t,n,r)},Bn.shuffle=function(e){return(Gi(e)?Zn:ea)(e)},Bn.slice=function(e,t,n){var r=null==e?0:e.length;return r?(n&&"number"!=typeof n&&ys(e,t,n)?(t=0,n=r):(t=null==t?0:mo(t),n=n===a?r:mo(n)),ta(e,t,n)):[]},Bn.sortBy=Ni,Bn.sortedUniq=function(e){return e&&e.length?sa(e):[]},Bn.sortedUniqBy=function(e,t){return e&&e.length?sa(e,is(t,2)):[]},Bn.split=function(e,t,n){return n&&"number"!=typeof n&&ys(e,t,n)&&(t=n=a),(n=n===a?d:n>>>0)?(e=xo(e))&&("string"==typeof t||null!=t&&!so(t))&&!(t=oa(t))&&Zt(e)?xa(sn(e),0,n):e.split(t,n):[]},Bn.spread=function(e,t){if("function"!=typeof e)throw new $e(s);return t=null==t?0:yn(mo(t),0),qr((function(n){var r=n[t],a=xa(n,0,t);return r&&Tt(a,r),yt(e,this,a)}))},Bn.tail=function(e){var t=null==e?0:e.length;return t?ta(e,1,t):[]},Bn.take=function(e,t,n){return e&&e.length?ta(e,0,(t=n||t===a?1:mo(t))<0?0:t):[]},Bn.takeRight=function(e,t,n){var r=null==e?0:e.length;return r?ta(e,(t=r-(t=n||t===a?1:mo(t)))<0?0:t,r):[]},Bn.takeRightWhile=function(e,t){return e&&e.length?ha(e,is(t,3),!1,!0):[]},Bn.takeWhile=function(e,t){return e&&e.length?ha(e,is(t,3)):[]},Bn.tap=function(e,t){return t(e),e},Bn.throttle=function(e,t,n){var r=!0,a=!0;if("function"!=typeof e)throw new $e(s);return eo(n)&&(r="leading"in n?!!n.leading:r,a="trailing"in n?!!n.trailing:a),Ai(e,t,{leading:r,maxWait:t,trailing:a})},Bn.thru=di,Bn.toArray=po,Bn.toPairs=Bo,Bn.toPairsIn=zo,Bn.toPath=function(e){return Gi(e)?Nt(e,Ls):uo(e)?[e]:$a(Ms(xo(e)))},Bn.toPlainObject=bo,Bn.transform=function(e,t,n){var r=Gi(e),a=r||qi(e)||lo(e);if(t=is(t,4),null==n){var s=e&&e.constructor;n=a?r?new s:[]:eo(e)&&Qi(s)?zn(je(e)):{}}return(a?xt:xr)(e,(function(e,r,a){return t(n,e,r,a)})),n},Bn.unary=function(e){return $i(e,1)},Bn.union=ti,Bn.unionBy=ni,Bn.unionWith=ri,Bn.uniq=function(e){return e&&e.length?ua(e):[]},Bn.uniqBy=function(e,t){return e&&e.length?ua(e,is(t,2)):[]},Bn.uniqWith=function(e,t){return t="function"==typeof t?t:a,e&&e.length?ua(e,a,t):[]},Bn.unset=function(e,t){return null==e||la(e,t)},Bn.unzip=ai,Bn.unzipWith=si,Bn.update=function(e,t,n){return null==e?e:ca(e,t,ga(n))},Bn.updateWith=function(e,t,n,r){return r="function"==typeof r?r:a,null==e?e:ca(e,t,ga(n),r)},Bn.values=Vo,Bn.valuesIn=function(e){return null==e?[]:Gt(e,Fo(e))},Bn.without=ii,Bn.words=Zo,Bn.wrap=function(e,t){return Li(ga(t),e)},Bn.xor=oi,Bn.xorBy=ui,Bn.xorWith=li,Bn.zip=ci,Bn.zipObject=function(e,t){return fa(e||[],t||[],er)},Bn.zipObjectDeep=function(e,t){return fa(e||[],t||[],Qr)},Bn.zipWith=hi,Bn.entries=Bo,Bn.entriesIn=zo,Bn.extend=wo,Bn.extendWith=ko,uu(Bn,Bn),Bn.add=xu,Bn.attempt=Jo,Bn.camelCase=Wo,Bn.capitalize=Uo,Bn.ceil=vu,Bn.clamp=function(e,t,n){return n===a&&(n=t,t=a),n!==a&&(n=(n=yo(n))==n?n:0),t!==a&&(t=(t=yo(t))==t?t:0),ir(yo(e),t,n)},Bn.clone=function(e){return or(e,4)},Bn.cloneDeep=function(e){return or(e,5)},Bn.cloneDeepWith=function(e,t){return or(e,5,t="function"==typeof t?t:a)},Bn.cloneWith=function(e,t){return or(e,4,t="function"==typeof t?t:a)},Bn.conformsTo=function(e,t){return null==t||ur(e,t,Ro(t))},Bn.deburr=Go,Bn.defaultTo=function(e,t){return null==e||e!=e?t:e},Bn.divide=wu,Bn.endsWith=function(e,t,n){e=xo(e),t=oa(t);var r=e.length,s=n=n===a?r:ir(mo(n),0,r);return(n-=t.length)>=0&&e.slice(n,s)==t},Bn.eq=zi,Bn.escape=function(e){return(e=xo(e))&&q.test(e)?e.replace(j,Yt):e},Bn.escapeRegExp=function(e){return(e=xo(e))&&ne.test(e)?e.replace(te,"\\$&"):e},Bn.every=function(e,t,n){var r=Gi(e)?wt:dr;return n&&ys(e,t,n)&&(t=a),r(e,is(t,3))},Bn.find=gi,Bn.findIndex=Us,Bn.findKey=function(e,t){return At(e,is(t,3),xr)},Bn.findLast=yi,Bn.findLastIndex=Gs,Bn.findLastKey=function(e,t){return At(e,is(t,3),vr)},Bn.floor=ku,Bn.forEach=bi,Bn.forEachRight=xi,Bn.forIn=function(e,t){return null==e?e:yr(e,is(t,3),Fo)},Bn.forInRight=function(e,t){return null==e?e:br(e,is(t,3),Fo)},Bn.forOwn=function(e,t){return e&&xr(e,is(t,3))},Bn.forOwnRight=function(e,t){return e&&vr(e,is(t,3))},Bn.get=$o,Bn.gt=Vi,Bn.gte=Wi,Bn.has=function(e,t){return null!=e&&ds(e,t,Tr)},Bn.hasIn=Co,Bn.head=js,Bn.identity=au,Bn.includes=function(e,t,n,r){e=ji(e)?e:Vo(e),n=n&&!r?mo(n):0;var a=e.length;return n<0&&(n=yn(a+n,0)),oo(e)?n<=a&&e.indexOf(t,n)>-1:!!a&&Ft(e,t,n)>-1},Bn.indexOf=function(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var a=null==n?0:mo(n);return a<0&&(a=yn(r+a,0)),Ft(e,t,a)},Bn.inRange=function(e,t,n){return t=fo(t),n===a?(n=t,t=0):n=fo(n),function(e,t,n){return e>=bn(t,n)&&e<yn(t,n)}(e=yo(e),t,n)},Bn.invoke=Ao,Bn.isArguments=Ui,Bn.isArray=Gi,Bn.isArrayBuffer=Hi,Bn.isArrayLike=ji,Bn.isArrayLikeObject=Ki,Bn.isBoolean=function(e){return!0===e||!1===e||to(e)&&Sr(e)==y},Bn.isBuffer=qi,Bn.isDate=Xi,Bn.isElement=function(e){return to(e)&&1===e.nodeType&&!ao(e)},Bn.isEmpty=function(e){if(null==e)return!0;if(ji(e)&&(Gi(e)||"string"==typeof e||"function"==typeof e.splice||qi(e)||lo(e)||Ui(e)))return!e.length;var t=ps(e);if(t==k||t==$)return!e.size;if(ws(e))return!Dr(e).length;for(var n in e)if(Fe.call(e,n))return!1;return!0},Bn.isEqual=function(e,t){return Ar(e,t)},Bn.isEqualWith=function(e,t,n){var r=(n="function"==typeof n?n:a)?n(e,t):a;return r===a?Ar(e,t,a,n):!!r},Bn.isError=Yi,Bn.isFinite=function(e){return"number"==typeof e&&fn(e)},Bn.isFunction=Qi,Bn.isInteger=Zi,Bn.isLength=Ji,Bn.isMap=no,Bn.isMatch=function(e,t){return e===t||Rr(e,t,us(t))},Bn.isMatchWith=function(e,t,n){return n="function"==typeof n?n:a,Rr(e,t,us(t),n)},Bn.isNaN=function(e){return ro(e)&&e!=+e},Bn.isNative=function(e){if(vs(e))throw new we("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return Fr(e)},Bn.isNil=function(e){return null==e},Bn.isNull=function(e){return null===e},Bn.isNumber=ro,Bn.isObject=eo,Bn.isObjectLike=to,Bn.isPlainObject=ao,Bn.isRegExp=so,Bn.isSafeInteger=function(e){return Zi(e)&&e>=-9007199254740991&&e<=h},Bn.isSet=io,Bn.isString=oo,Bn.isSymbol=uo,Bn.isTypedArray=lo,Bn.isUndefined=function(e){return e===a},Bn.isWeakMap=function(e){return to(e)&&ps(e)==_},Bn.isWeakSet=function(e){return to(e)&&"[object WeakSet]"==Sr(e)},Bn.join=function(e,t){return null==e?"":mn.call(e,t)},Bn.kebabCase=Ho,Bn.last=Ys,Bn.lastIndexOf=function(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var s=r;return n!==a&&(s=(s=mo(n))<0?yn(r+s,0):bn(s,r-1)),t==t?function(e,t,n){for(var r=n+1;r--;)if(e[r]===t)return r;return r}(e,t,s):Rt(e,Dt,s,!0)},Bn.lowerCase=jo,Bn.lowerFirst=Ko,Bn.lt=co,Bn.lte=ho,Bn.max=function(e){return e&&e.length?fr(e,au,Nr):a},Bn.maxBy=function(e,t){return e&&e.length?fr(e,is(t,2),Nr):a},Bn.mean=function(e){return Mt(e,au)},Bn.meanBy=function(e,t){return Mt(e,is(t,2))},Bn.min=function(e){return e&&e.length?fr(e,au,Mr):a},Bn.minBy=function(e,t){return e&&e.length?fr(e,is(t,2),Mr):a},Bn.stubArray=gu,Bn.stubFalse=yu,Bn.stubObject=function(){return{}},Bn.stubString=function(){return""},Bn.stubTrue=function(){return!0},Bn.multiply=Iu,Bn.nth=function(e,t){return e&&e.length?Vr(e,mo(t)):a},Bn.noConflict=function(){return st._===this&&(st._=Pe),this},Bn.noop=lu,Bn.now=Ti,Bn.pad=function(e,t,n){e=xo(e);var r=(t=mo(t))?an(e):0;if(!t||r>=t)return e;var a=(t-r)/2;return Wa(hn(a),n)+e+Wa(cn(a),n)},Bn.padEnd=function(e,t,n){e=xo(e);var r=(t=mo(t))?an(e):0;return t&&r<t?e+Wa(t-r,n):e},Bn.padStart=function(e,t,n){e=xo(e);var r=(t=mo(t))?an(e):0;return t&&r<t?Wa(t-r,n)+e:e},Bn.parseInt=function(e,t,n){return n||null==t?t=0:t&&(t=+t),vn(xo(e).replace(re,""),t||0)},Bn.random=function(e,t,n){if(n&&"boolean"!=typeof n&&ys(e,t,n)&&(t=n=a),n===a&&("boolean"==typeof t?(n=t,t=a):"boolean"==typeof e&&(n=e,e=a)),e===a&&t===a?(e=0,t=1):(e=fo(e),t===a?(t=e,e=0):t=fo(t)),e>t){var r=e;e=t,t=r}if(n||e%1||t%1){var s=wn();return bn(e+s*(t-e+tt("1e-"+((s+"").length-1))),t)}return jr(e,t)},Bn.reduce=function(e,t,n){var r=Gi(e)?$t:Bt,a=arguments.length<3;return r(e,is(t,4),n,a,hr)},Bn.reduceRight=function(e,t,n){var r=Gi(e)?Ct:Bt,a=arguments.length<3;return r(e,is(t,4),n,a,pr)},Bn.repeat=function(e,t,n){return t=(n?ys(e,t,n):t===a)?1:mo(t),Kr(xo(e),t)},Bn.replace=function(){var e=arguments,t=xo(e[0]);return e.length<3?t:t.replace(e[1],e[2])},Bn.result=function(e,t,n){var r=-1,s=(t=ya(t,e)).length;for(s||(s=1,e=a);++r<s;){var i=null==e?a:e[Ls(t[r])];i===a&&(r=s,i=n),e=Qi(i)?i.call(e):i}return e},Bn.round=Su,Bn.runInContext=e,Bn.sample=function(e){return(Gi(e)?Yn:Xr)(e)},Bn.size=function(e){if(null==e)return 0;if(ji(e))return oo(e)?an(e):e.length;var t=ps(e);return t==k||t==$?e.size:Dr(e).length},Bn.snakeCase=qo,Bn.some=function(e,t,n){var r=Gi(e)?Et:na;return n&&ys(e,t,n)&&(t=a),r(e,is(t,3))},Bn.sortedIndex=function(e,t){return ra(e,t)},Bn.sortedIndexBy=function(e,t,n){return aa(e,t,is(n,2))},Bn.sortedIndexOf=function(e,t){var n=null==e?0:e.length;if(n){var r=ra(e,t);if(r<n&&zi(e[r],t))return r}return-1},Bn.sortedLastIndex=function(e,t){return ra(e,t,!0)},Bn.sortedLastIndexBy=function(e,t,n){return aa(e,t,is(n,2),!0)},Bn.sortedLastIndexOf=function(e,t){if(null!=e&&e.length){var n=ra(e,t,!0)-1;if(zi(e[n],t))return n}return-1},Bn.startCase=Xo,Bn.startsWith=function(e,t,n){return e=xo(e),n=null==n?0:ir(mo(n),0,e.length),t=oa(t),e.slice(n,n+t.length)==t},Bn.subtract=Nu,Bn.sum=function(e){return e&&e.length?zt(e,au):0},Bn.sumBy=function(e,t){return e&&e.length?zt(e,is(t,2)):0},Bn.template=function(e,t,n){var r=Bn.templateSettings;n&&ys(e,t,n)&&(t=a),e=xo(e),t=ko({},t,r,Ya);var s,i,o=ko({},t.imports,r.imports,Ya),u=Ro(o),l=Gt(o,u),c=0,h=t.interpolate||xe,p="__p += '",d=Ne((t.escape||xe).source+"|"+h.source+"|"+(h===Q?he:xe).source+"|"+(t.evaluate||xe).source+"|$","g"),f="//# sourceURL="+(Fe.call(t,"sourceURL")?(t.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++Qe+"]")+"\n";e.replace(d,(function(t,n,r,a,o,u){return r||(r=a),p+=e.slice(c,u).replace(ve,Qt),n&&(s=!0,p+="' +\n__e("+n+") +\n'"),o&&(i=!0,p+="';\n"+o+";\n__p += '"),r&&(p+="' +\n((__t = ("+r+")) == null ? '' : __t) +\n'"),c=u+t.length,t})),p+="';\n";var m=Fe.call(t,"variable")&&t.variable;if(m){if(le.test(m))throw new we("Invalid `variable` option passed into `_.template`")}else p="with (obj) {\n"+p+"\n}\n";p=(i?p.replace(W,""):p).replace(U,"$1").replace(G,"$1;"),p="function("+(m||"obj")+") {\n"+(m?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(s?", __e = _.escape":"")+(i?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+p+"return __p\n}";var g=Jo((function(){return ke(u,f+"return "+p).apply(a,l)}));if(g.source=p,Yi(g))throw g;return g},Bn.times=function(e,t){if((e=mo(e))<1||e>h)return[];var n=d,r=bn(e,d);t=is(t),e-=d;for(var a=Vt(r,t);++n<e;)t(n);return a},Bn.toFinite=fo,Bn.toInteger=mo,Bn.toLength=go,Bn.toLower=function(e){return xo(e).toLowerCase()},Bn.toNumber=yo,Bn.toSafeInteger=function(e){return e?ir(mo(e),-9007199254740991,h):0===e?e:0},Bn.toString=xo,Bn.toUpper=function(e){return xo(e).toUpperCase()},Bn.trim=function(e,t,n){if((e=xo(e))&&(n||t===a))return Wt(e);if(!e||!(t=oa(t)))return e;var r=sn(e),s=sn(t);return xa(r,jt(r,s),Kt(r,s)+1).join("")},Bn.trimEnd=function(e,t,n){if((e=xo(e))&&(n||t===a))return e.slice(0,on(e)+1);if(!e||!(t=oa(t)))return e;var r=sn(e);return xa(r,0,Kt(r,sn(t))+1).join("")},Bn.trimStart=function(e,t,n){if((e=xo(e))&&(n||t===a))return e.replace(re,"");if(!e||!(t=oa(t)))return e;var r=sn(e);return xa(r,jt(r,sn(t))).join("")},Bn.truncate=function(e,t){var n=30,r="...";if(eo(t)){var s="separator"in t?t.separator:s;n="length"in t?mo(t.length):n,r="omission"in t?oa(t.omission):r}var i=(e=xo(e)).length;if(Zt(e)){var o=sn(e);i=o.length}if(n>=i)return e;var u=n-an(r);if(u<1)return r;var l=o?xa(o,0,u).join(""):e.slice(0,u);if(s===a)return l+r;if(o&&(u+=l.length-u),so(s)){if(e.slice(u).search(s)){var c,h=l;for(s.global||(s=Ne(s.source,xo(pe.exec(s))+"g")),s.lastIndex=0;c=s.exec(h);)var p=c.index;l=l.slice(0,p===a?u:p)}}else if(e.indexOf(oa(s),u)!=u){var d=l.lastIndexOf(s);d>-1&&(l=l.slice(0,d))}return l+r},Bn.unescape=function(e){return(e=xo(e))&&K.test(e)?e.replace(H,un):e},Bn.uniqueId=function(e){var t=++Oe;return xo(e)+t},Bn.upperCase=Yo,Bn.upperFirst=Qo,Bn.each=bi,Bn.eachRight=xi,Bn.first=js,uu(Bn,(bu={},xr(Bn,(function(e,t){Fe.call(Bn.prototype,t)||(bu[t]=e)})),bu),{chain:!1}),Bn.VERSION="4.17.21",xt(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(e){Bn[e].placeholder=Bn})),xt(["drop","take"],(function(e,t){Un.prototype[e]=function(n){n=n===a?1:yn(mo(n),0);var r=this.__filtered__&&!t?new Un(this):this.clone();return r.__filtered__?r.__takeCount__=bn(n,r.__takeCount__):r.__views__.push({size:bn(n,d),type:e+(r.__dir__<0?"Right":"")}),r},Un.prototype[e+"Right"]=function(t){return this.reverse()[e](t).reverse()}})),xt(["filter","map","takeWhile"],(function(e,t){var n=t+1,r=1==n||3==n;Un.prototype[e]=function(e){var t=this.clone();return t.__iteratees__.push({iteratee:is(e,3),type:n}),t.__filtered__=t.__filtered__||r,t}})),xt(["head","last"],(function(e,t){var n="take"+(t?"Right":"");Un.prototype[e]=function(){return this[n](1).value()[0]}})),xt(["initial","tail"],(function(e,t){var n="drop"+(t?"":"Right");Un.prototype[e]=function(){return this.__filtered__?new Un(this):this[n](1)}})),Un.prototype.compact=function(){return this.filter(au)},Un.prototype.find=function(e){return this.filter(e).head()},Un.prototype.findLast=function(e){return this.reverse().find(e)},Un.prototype.invokeMap=qr((function(e,t){return"function"==typeof e?new Un(this):this.map((function(n){return Er(n,e,t)}))})),Un.prototype.reject=function(e){return this.filter(Di(is(e)))},Un.prototype.slice=function(e,t){e=mo(e);var n=this;return n.__filtered__&&(e>0||t<0)?new Un(n):(e<0?n=n.takeRight(-e):e&&(n=n.drop(e)),t!==a&&(n=(t=mo(t))<0?n.dropRight(-t):n.take(t-e)),n)},Un.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},Un.prototype.toArray=function(){return this.take(d)},xr(Un.prototype,(function(e,t){var n=/^(?:filter|find|map|reject)|While$/.test(t),r=/^(?:head|last)$/.test(t),s=Bn[r?"take"+("last"==t?"Right":""):t],i=r||/^find/.test(t);s&&(Bn.prototype[t]=function(){var t=this.__wrapped__,o=r?[1]:arguments,u=t instanceof Un,l=o[0],c=u||Gi(t),h=function(e){var t=s.apply(Bn,Tt([e],o));return r&&p?t[0]:t};c&&n&&"function"==typeof l&&1!=l.length&&(u=c=!1);var p=this.__chain__,d=!!this.__actions__.length,f=i&&!p,m=u&&!d;if(!i&&c){t=m?t:new Un(this);var g=e.apply(t,o);return g.__actions__.push({func:di,args:[h],thisArg:a}),new Wn(g,p)}return f&&m?e.apply(this,o):(g=this.thru(h),f?r?g.value()[0]:g.value():g)})})),xt(["pop","push","shift","sort","splice","unshift"],(function(e){var t=Ce[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",r=/^(?:pop|shift)$/.test(e);Bn.prototype[e]=function(){var e=arguments;if(r&&!this.__chain__){var a=this.value();return t.apply(Gi(a)?a:[],e)}return this[n]((function(n){return t.apply(Gi(n)?n:[],e)}))}})),xr(Un.prototype,(function(e,t){var n=Bn[t];if(n){var r=n.name+"";Fe.call(_n,r)||(_n[r]=[]),_n[r].push({name:t,func:n})}})),_n[Pa(a,2).name]=[{name:"wrapper",func:a}],Un.prototype.clone=function(){var e=new Un(this.__wrapped__);return e.__actions__=$a(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=$a(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=$a(this.__views__),e},Un.prototype.reverse=function(){if(this.__filtered__){var e=new Un(this);e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1;return e},Un.prototype.value=function(){var e=this.__wrapped__.value(),t=this.__dir__,n=Gi(e),r=t<0,a=n?e.length:0,s=function(e,t,n){for(var r=-1,a=n.length;++r<a;){var s=n[r],i=s.size;switch(s.type){case"drop":e+=i;break;case"dropRight":t-=i;break;case"take":t=bn(t,e+i);break;case"takeRight":e=yn(e,t-i)}}return{start:e,end:t}}(0,a,this.__views__),i=s.start,o=s.end,u=o-i,l=r?o:i-1,c=this.__iteratees__,h=c.length,p=0,d=bn(u,this.__takeCount__);if(!n||!r&&a==u&&d==u)return pa(e,this.__actions__);var f=[];e:for(;u--&&p<d;){for(var m=-1,g=e[l+=t];++m<h;){var y=c[m],b=y.iteratee,x=y.type,v=b(g);if(2==x)g=v;else if(!v){if(1==x)continue e;break e}}f[p++]=g}return f},Bn.prototype.at=fi,Bn.prototype.chain=function(){return pi(this)},Bn.prototype.commit=function(){return new Wn(this.value(),this.__chain__)},Bn.prototype.next=function(){this.__values__===a&&(this.__values__=po(this.value()));var e=this.__index__>=this.__values__.length;return{done:e,value:e?a:this.__values__[this.__index__++]}},Bn.prototype.plant=function(e){for(var t,n=this;n instanceof Vn;){var r=Bs(n);r.__index__=0,r.__values__=a,t?s.__wrapped__=r:t=r;var s=r;n=n.__wrapped__}return s.__wrapped__=e,t},Bn.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof Un){var t=e;return this.__actions__.length&&(t=new Un(this)),(t=t.reverse()).__actions__.push({func:di,args:[ei],thisArg:a}),new Wn(t,this.__chain__)}return this.thru(ei)},Bn.prototype.toJSON=Bn.prototype.valueOf=Bn.prototype.value=function(){return pa(this.__wrapped__,this.__actions__)},Bn.prototype.first=Bn.prototype.head,it&&(Bn.prototype[it]=function(){return this}),Bn}();st._=ln,(r=function(){return ln}.call(t,n,t,e))===a||(e.exports=r)}.call(this)},3720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return I;if(e+1>=f)return w}return e<0?o(-e,t).neg():u(e%p|0,e/p|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=o(l(n,8)),s=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+u),n);if(u<8){var p=o(l(n,u));s=s.mul(p).add(o(h))}else s=(s=s.mul(a)).add(o(h))}return s.unsigned=t,s}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var v=i(-1);n.NEG_ONE=v;var w=u(-1,2147483647,!1);n.MAX_VALUE=w;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(l(e,6),this.unsigned),s=this,i="";;){var u=s.div(a),c=(s.sub(u.mul(a)).toInt()>>>0).toString(e);if((s=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=s+(65535&e.low))>>>16,p+=(d+=a+l)>>>16,c+=(p+=n+o)>>>16,c+=t+i,u((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,p=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*d)>>>16,y+=(b+=s*d)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=a*d)>>>16,y&=65535,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*d+a*p+s*c+i*l,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(I))return e.eq(b)||e.eq(v)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),p=o(n),d=p.mul(e);d.isNegative()||d.gt(a);)d=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),s=s.add(p),a=a.sub(d)}return s},S.div=S.divide,S.modulo=function(e){return r(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},6377:(e,t,n)=>{var r=n(4832),a=n(8652),s=n(801),i=n(2030),o=n(3618),u=n(9049),l=n(1971);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},4832:function(e,t,n){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1971:(e,t,n)=>{var r;!function(a,s){var i,o=this,u=256,l=s.pow(u,6),c=s.pow(2,52),h=2*c,p=255;function d(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(a)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(s.random=e,t):e})(x,p,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=p&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=p&a+1],n=n*u+i[p&(i[a]=i[s=p&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=d,y(s.random(),a),e.exports){e.exports=d;try{i=n(5042)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},5410:()=>{},8628:()=>{},5755:()=>{},7004:()=>{},6759:()=>{},549:()=>{},6401:()=>{},5042:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var r={};return(()=>{"use strict";var e=r;Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"addAnglesListener",{enumerable:!0,get:function(){return i.addAnglesListener}}),Object.defineProperty(e,"addKeypointsListener",{enumerable:!0,get:function(){return i.addKeypointsListener}}),Object.defineProperty(e,"addProgressListener",{enumerable:!0,get:function(){return i.addProgressListener}}),Object.defineProperty(e,"allowScreenShot",{enumerable:!0,get:function(){return a.allowScreenShot}}),Object.defineProperty(e,"cameraIdFunc",{enumerable:!0,get:function(){return t.cameraIdFunc}}),Object.defineProperty(e,"eScreenShot",{enumerable:!0,get:function(){return a.eScreenShot}}),Object.defineProperty(e,"getAllAnglesData",{enumerable:!0,get:function(){return i.getAllAnglesData}}),Object.defineProperty(e,"getAssesmentData",{enumerable:!0,get:function(){return i.getAssesmentData}}),Object.defineProperty(e,"getCarePlanData",{enumerable:!0,get:function(){return i.getCarePlanData}}),Object.defineProperty(e,"initializeModel",{enumerable:!0,get:function(){return t.initializeModel}}),Object.defineProperty(e,"launchModel",{enumerable:!0,get:function(){return i.launchModel}}),Object.defineProperty(e,"resetData",{enumerable:!0,get:function(){return i.resetData}}),Object.defineProperty(e,"restart",{enumerable:!0,get:function(){return i.restart}}),Object.defineProperty(e,"screenShot",{enumerable:!0,get:function(){return i.screenShot}}),Object.defineProperty(e,"selectLang",{enumerable:!0,get:function(){return s.selectLang}}),Object.defineProperty(e,"selectOrientation",{enumerable:!0,get:function(){return i.selectOrientation}}),Object.defineProperty(e,"setAllExcersiseParams",{enumerable:!0,get:function(){return i.setAllExcersiseParams}}),Object.defineProperty(e,"setExcersiseParams",{enumerable:!0,get:function(){return i.setExcersiseParams}}),Object.defineProperty(e,"showAngles",{enumerable:!0,get:function(){return a.showAngles}}),Object.defineProperty(e,"stop",{enumerable:!0,get:function(){return i.stop}});var t=n(7156),a=n(3660),s=n(3146),i=n(1735)})(),r})()}));